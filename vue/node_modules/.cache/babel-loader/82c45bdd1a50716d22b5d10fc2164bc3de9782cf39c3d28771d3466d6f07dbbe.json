{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"currentBorrow\",\n  props: [\"account\"],\n  data() {\n    return {\n      borrowedBooks: [],\n      // 存储借阅记录\n      currentDate: new Date() // 当前日期\n    };\n  },\n  methods: {\n    // 获取借阅记录\n    async fetchBorrowedBooks() {\n      try {\n        const res = await request.get(`/User/ListByAccount/${this.account}`);\n        if (res.code === \"200\") {\n          this.borrowedBooks = res.data.map(book => {\n            book.dueDate = new Date(book.dueDate); // 将 dueDate 转为 Date 对象\n            return book;\n          });\n        } else {\n          this.$message.error(\"加载借阅记录失败\");\n        }\n      } catch {\n        this.$message.error(\"加载借阅记录失败\");\n      }\n    },\n    // 格式化日期\n    formatDate(row, column, cellValue) {\n      if (!cellValue) return \"未归还\";\n      const options = {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\"\n      };\n      return new Date(cellValue).toLocaleDateString(\"zh-CN\", options);\n    },\n    // 根据 dueDate 计算借阅记录的状态，并添加对应的样式\n    getDueDateClass(row, column, cellValue) {\n      const currentDate = this.currentDate;\n      const dueDate = new Date(cellValue);\n\n      // 判断逾期、即将到期、未到期\n      if (dueDate < currentDate) {\n        return \"overdue\"; // 逾期\n      } else if ((dueDate - currentDate) / (1000 * 60 * 60 * 24) <= 3) {\n        return \"due-soon\"; // 即将到期（3天内）\n      } else {\n        return \"not-due\"; // 未到期\n      }\n    }\n  },\n  created() {\n    this.fetchBorrowedBooks();\n  }\n};","map":{"version":3,"names":["request","name","props","data","borrowedBooks","currentDate","Date","methods","fetchBorrowedBooks","res","get","account","code","map","book","dueDate","$message","error","formatDate","row","column","cellValue","options","year","month","day","toLocaleDateString","getDueDateClass","created"],"sources":["src/views/user/CurrentBorrow.vue"],"sourcesContent":["<template>\r\n  <div class=\"borrowed-books\">\r\n    <h1>借阅记录</h1>\r\n    <el-table :data=\"borrowedBooks\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"id\" label=\"记录ID\" width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"书名\"></el-table-column>\r\n      <el-table-column prop=\"bookNo\" label=\"书籍编号\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"借阅人\"></el-table-column>\r\n      <el-table-column prop=\"account\" label=\"账号\"></el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"联系电话\"></el-table-column>\r\n      <el-table-column\r\n          prop=\"dueDate\"\r\n          label=\"归还日期\"\r\n          :formatter=\"formatDate\"\r\n          :cell-class-name=\"getDueDateClass\"\r\n      ></el-table-column>\r\n      <el-table-column prop=\"score\" label=\"积分\" width=\"100\"></el-table-column>\r\n      <el-table-column\r\n          prop=\"createtime\"\r\n          label=\"创建时间\"\r\n          :formatter=\"formatDate\"\r\n      ></el-table-column>\r\n      <el-table-column\r\n          prop=\"updatetime\"\r\n          label=\"更新时间\"\r\n          :formatter=\"formatDate\"\r\n      ></el-table-column>\r\n    </el-table>\r\n    <div v-if=\"borrowedBooks.length === 0\" class=\"no-data\">\r\n      <p>暂无借阅记录。</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"currentBorrow\",\r\n  props: [\"account\"],\r\n  data() {\r\n    return {\r\n      borrowedBooks: [], // 存储借阅记录\r\n      currentDate: new Date(), // 当前日期\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取借阅记录\r\n    async fetchBorrowedBooks() {\r\n      try {\r\n        const res = await request.get(`/User/ListByAccount/${this.account}`);\r\n        if (res.code === \"200\") {\r\n          this.borrowedBooks = res.data.map((book) => {\r\n            book.dueDate = new Date(book.dueDate); // 将 dueDate 转为 Date 对象\r\n            return book;\r\n          });\r\n        } else {\r\n          this.$message.error(\"加载借阅记录失败\");\r\n        }\r\n      } catch {\r\n        this.$message.error(\"加载借阅记录失败\");\r\n      }\r\n    },\r\n    // 格式化日期\r\n    formatDate(row, column, cellValue) {\r\n      if (!cellValue) return \"未归还\";\r\n      const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\r\n      return new Date(cellValue).toLocaleDateString(\"zh-CN\", options);\r\n    },\r\n    // 根据 dueDate 计算借阅记录的状态，并添加对应的样式\r\n    getDueDateClass(row, column, cellValue) {\r\n      const currentDate = this.currentDate;\r\n      const dueDate = new Date(cellValue);\r\n\r\n      // 判断逾期、即将到期、未到期\r\n      if (dueDate < currentDate) {\r\n        return \"overdue\"; // 逾期\r\n      } else if ((dueDate - currentDate) / (1000 * 60 * 60 * 24) <= 3) {\r\n        return \"due-soon\"; // 即将到期（3天内）\r\n      } else {\r\n        return \"not-due\"; // 未到期\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchBorrowedBooks();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.borrowed-books {\r\n  padding: 20px;\r\n}\r\n.no-data {\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  color: #666;\r\n  text-align: center;\r\n}\r\n\r\n/* 为不同状态的借阅记录添加样式 */\r\n.overdue {\r\n  background-color: #ffcccc; /* 逾期，浅红色背景 */\r\n  color: #cc0000; /* 红色字体 */\r\n}\r\n.due-soon {\r\n  background-color: #fff3cd; /* 即将到期，浅黄色背景 */\r\n  color: #e6a100; /* 黄色字体 */\r\n}\r\n.not-due {\r\n  background-color: #d4edda; /* 未到期，浅绿色背景 */\r\n  color: #155724; /* 绿色字体 */\r\n}\r\n</style>\r\n"],"mappings":";AAmCA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,aAAA;MAAA;MACAC,WAAA,MAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,mBAAA;MACA;QACA,MAAAC,GAAA,SAAAT,OAAA,CAAAU,GAAA,6BAAAC,OAAA;QACA,IAAAF,GAAA,CAAAG,IAAA;UACA,KAAAR,aAAA,GAAAK,GAAA,CAAAN,IAAA,CAAAU,GAAA,CAAAC,IAAA;YACAA,IAAA,CAAAC,OAAA,OAAAT,IAAA,CAAAQ,IAAA,CAAAC,OAAA;YACA,OAAAD,IAAA;UACA;QACA;UACA,KAAAE,QAAA,CAAAC,KAAA;QACA;MACA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACA;IACAC,WAAAC,GAAA,EAAAC,MAAA,EAAAC,SAAA;MACA,KAAAA,SAAA;MACA,MAAAC,OAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,GAAA;MAAA;MACA,WAAAnB,IAAA,CAAAe,SAAA,EAAAK,kBAAA,UAAAJ,OAAA;IACA;IACA;IACAK,gBAAAR,GAAA,EAAAC,MAAA,EAAAC,SAAA;MACA,MAAAhB,WAAA,QAAAA,WAAA;MACA,MAAAU,OAAA,OAAAT,IAAA,CAAAe,SAAA;;MAEA;MACA,IAAAN,OAAA,GAAAV,WAAA;QACA;MACA,YAAAU,OAAA,GAAAV,WAAA;QACA;MACA;QACA;MACA;IACA;EACA;EACAuB,QAAA;IACA,KAAApB,kBAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}