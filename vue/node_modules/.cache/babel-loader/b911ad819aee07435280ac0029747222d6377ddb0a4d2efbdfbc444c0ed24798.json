{"ast":null,"code":"import request from \"@/utils/request\"; // 请根据你的实际请求方式调整\n\nexport default {\n  name: \"CategoryList\",\n  data() {\n    return {\n      tableData: [],\n      // 存储分类数据\n      total: 0,\n      // 数据总数\n      params: {\n        pageNum: 1,\n        pageSize: 10\n      },\n      filters: {\n        name: \"\",\n        remark: \"\",\n        id: \"\",\n        sortOrder: \"ascending\" // 默认升序\n      },\n      autoSearch: false,\n      // 自动搜索开关\n      addDialogVisible: false,\n      // 控制添加分类对话框显示与否\n      newCategory: {\n        name: \"\",\n        remark: \"\"\n      },\n      expandedRows: [] // 存储已展开的行ID\n    };\n  },\n  methods: {\n    // 格式化时间\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('zh-CN', options);\n    },\n    // 加载数据\n    async load() {\n      try {\n        const res = await request.get(\"/Category/Page\", {\n          params: {\n            ...this.params,\n            ...this.filters\n          }\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    // 处理排序变化\n    handleSortChange({\n      prop,\n      order\n    }) {\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\n      this.load();\n    },\n    // 搜索\n    handleSearch() {\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 重置搜索条件\n    handleReset() {\n      this.filters = {\n        name: \"\",\n        remark: \"\",\n        id: \"\",\n        sortOrder: \"ascending\" // 默认升序\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 分页改变\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    },\n    // 输入时触发搜索（自动搜索功能）\n    handleInput() {\n      if (this.autoSearch) {\n        this.params.pageNum = 1;\n        this.load();\n      }\n    },\n    // 编辑操作\n    handleEdit(row) {\n      console.log(\"编辑\", row);\n      // 你可以在这里添加编辑的逻辑，如弹出编辑表单\n    },\n    // 删除操作\n    async handleDelete(row) {\n      try {\n        const res = await request.delete(`/Category/Delete/${row.id}`);\n        if (res.code === \"200\") {\n          this.$message.success(\"删除成功\");\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"删除失败\");\n      }\n    },\n    // 打开添加分类的对话框\n    openAddDialog() {\n      this.addDialogVisible = true;\n    },\n    // 处理保存新分类\n    async handleAddCategory() {\n      try {\n        const res = await request.post(\"/Category/Insert\", this.newCategory);\n        if (res.code === \"200\") {\n          this.$message.success(\"分类添加成功\");\n          this.addDialogVisible = false;\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"分类添加失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"分类添加失败\");\n      }\n    },\n    // 添加子级分类操作\n    handleAddSubCategory(row) {\n      console.log(\"添加子级分类，父分类ID:\", row.id);\n      // 你可以在这里添加打开子级分类添加对话框的逻辑\n    },\n    // 处理展开行变化\n    handleExpandChange(row, expanded) {\n      const rowIndex = this.tableData.findIndex(item => item.id === row.id);\n      if (expanded) {\n        this.tableData[rowIndex].subCategories = this.fetchSubCategories(row.id); // 从API加载子分类\n      }\n    },\n    // 获取子分类\n    async fetchSubCategories(parentId) {\n      try {\n        const res = await request.get(`/Category/SubCategories`, {\n          params: {\n            parentId\n          }\n        });\n        return res.data || [];\n      } catch (error) {\n        this.$message.error(\"获取子分类失败\");\n        return [];\n      }\n    }\n  },\n  created() {\n    this.load();\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","remark","id","sortOrder","autoSearch","addDialogVisible","newCategory","expandedRows","methods","formatDate","date","options","year","month","day","Date","toLocaleDateString","load","res","get","code","list","$message","error","handleSortChange","prop","order","handleSearch","handleReset","handlePageChange","page","handleInput","handleEdit","row","console","log","handleDelete","delete","success","openAddDialog","handleAddCategory","post","handleAddSubCategory","handleExpandChange","expanded","rowIndex","findIndex","item","subCategories","fetchSubCategories","parentId","created"],"sources":["src/views/category/List.vue"],"sourcesContent":["<template>\r\n  <div class=\"category-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.id\"\r\n          placeholder=\"分类ID\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.name\"\r\n          placeholder=\"分类名称\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.remark\"\r\n          placeholder=\"备注\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <!-- 自动搜索开关 -->\r\n      <el-switch v-model=\"autoSearch\" @change=\"handleSearch\" />\r\n      <span class=\"auto-search-text\">自动搜索</span>\r\n      <div class=\"search-buttons\">\r\n        <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n        <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n      </div>\r\n    </el-row>\r\n\r\n    <!-- 添加分类 -->\r\n    <div class=\"add-category\">\r\n      <span class=\"add-category-text\" @click=\"openAddDialog\">+ 添加分类</span>\r\n    </div>\r\n\r\n    <!-- 表格 -->\r\n    <el-table\r\n        :data=\"tableData\"\r\n        stripe\r\n        :default-sort=\"{ prop: 'id', order: 'ascending' }\"\r\n        @sort-change=\"handleSortChange\"\r\n        :expand-row-keys=\"expandedRows\"\r\n        @expand-change=\"handleExpandChange\"\r\n    >\r\n      <!-- 展开按钮 -->\r\n      <el-table-column type=\"expand\">\r\n        <template slot-scope=\"scope\">\r\n          <el-table\r\n              :data=\"scope.row.subCategories\"\r\n              style=\"width: 100%; margin-top: 10px\"\r\n              :expand-row-keys=\"expandedRows\"\r\n              @expand-change=\"handleExpandChange\"\r\n          >\r\n            <!-- 动态渲染子分类表头 -->\r\n            <el-table-column prop=\"id\" label=\"子分类ID\" sortable />\r\n            <el-table-column prop=\"name\" label=\"子分类名称\" />\r\n            <el-table-column prop=\"remark\" label=\"备注\" />\r\n            <el-table-column label=\"创建时间\">\r\n              <template slot-scope=\"scope\">\r\n                <span>{{ formatDate(scope.row.createtime) }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"更新时间\">\r\n              <template slot-scope=\"scope\">\r\n                <span>{{ formatDate(scope.row.updatetime) }}</span>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 主表头 -->\r\n      <el-table-column prop=\"id\" label=\"分类ID\" sortable />\r\n      <el-table-column prop=\"name\" label=\"分类名称\" />\r\n      <el-table-column prop=\"remark\" label=\"备注\" />\r\n      <el-table-column label=\"创建时间\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ formatDate(scope.row.createtime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"更新时间\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ formatDate(scope.row.updatetime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <!-- 操作列 -->\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"primary\"\r\n              icon=\"el-icon-edit\"\r\n              @click=\"handleEdit(scope.row)\"\r\n          >修改\r\n          </el-button>\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              @click=\"handleDelete(scope.row)\"\r\n          >删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <!-- 添加子级分类列 -->\r\n      <el-table-column label=\"添加子级分类\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"success\"\r\n              icon=\"el-icon-plus\"\r\n              @click=\"handleAddSubCategory(scope.row)\"\r\n          >添加子级分类</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 添加分类的对话框 -->\r\n    <el-dialog\r\n        title=\"添加新分类\"\r\n        :visible.sync=\"addDialogVisible\"\r\n        width=\"30%\"\r\n    >\r\n      <el-form :model=\"newCategory\" label-width=\"100px\">\r\n        <el-form-item label=\"分类名称\">\r\n          <el-input v-model=\"newCategory.name\" placeholder=\"请输入分类名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\">\r\n          <el-input v-model=\"newCategory.remark\" placeholder=\"请输入备注\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleAddCategory\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\"; // 请根据你的实际请求方式调整\r\n\r\nexport default {\r\n  name: \"CategoryList\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 存储分类数据\r\n      total: 0,       // 数据总数\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      filters: {\r\n        name: \"\",\r\n        remark: \"\",\r\n        id: \"\",\r\n        sortOrder: \"ascending\", // 默认升序\r\n      },\r\n      autoSearch: false,  // 自动搜索开关\r\n      addDialogVisible: false,  // 控制添加分类对话框显示与否\r\n      newCategory: {\r\n        name: \"\",\r\n        remark: \"\",\r\n      },\r\n      expandedRows: [],  // 存储已展开的行ID\r\n    };\r\n  },\r\n  methods: {\r\n    // 格式化时间\r\n    formatDate(date) {\r\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n      return new Date(date).toLocaleDateString('zh-CN', options);\r\n    },\r\n\r\n    // 加载数据\r\n    async load() {\r\n      try {\r\n        const res = await request.get(\"/Category/Page\", {\r\n          params: { ...this.params, ...this.filters },\r\n        });\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n\r\n    // 处理排序变化\r\n    handleSortChange({ prop, order }) {\r\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\r\n      this.load();\r\n    },\r\n\r\n    // 搜索\r\n    handleSearch() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 重置搜索条件\r\n    handleReset() {\r\n      this.filters = {\r\n        name: \"\",\r\n        remark: \"\",\r\n        id: \"\",\r\n        sortOrder: \"ascending\", // 默认升序\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 分页改变\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n\r\n    // 输入时触发搜索（自动搜索功能）\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.params.pageNum = 1;\r\n        this.load();\r\n      }\r\n    },\r\n\r\n    // 编辑操作\r\n    handleEdit(row) {\r\n      console.log(\"编辑\", row);\r\n      // 你可以在这里添加编辑的逻辑，如弹出编辑表单\r\n    },\r\n\r\n    // 删除操作\r\n    async handleDelete(row) {\r\n      try {\r\n        const res = await request.delete(`/Category/Delete/${row.id}`);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"删除成功\");\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"删除失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"删除失败\");\r\n      }\r\n    },\r\n\r\n    // 打开添加分类的对话框\r\n    openAddDialog() {\r\n      this.addDialogVisible = true;\r\n    },\r\n\r\n    // 处理保存新分类\r\n    async handleAddCategory() {\r\n      try {\r\n        const res = await request.post(\"/Category/Insert\", this.newCategory);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"分类添加成功\");\r\n          this.addDialogVisible = false;\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"分类添加失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"分类添加失败\");\r\n      }\r\n    },\r\n\r\n    // 添加子级分类操作\r\n    handleAddSubCategory(row) {\r\n      console.log(\"添加子级分类，父分类ID:\", row.id);\r\n      // 你可以在这里添加打开子级分类添加对话框的逻辑\r\n    },\r\n\r\n    // 处理展开行变化\r\n    handleExpandChange(row, expanded) {\r\n      const rowIndex = this.tableData.findIndex(item => item.id === row.id);\r\n      if (expanded) {\r\n        this.tableData[rowIndex].subCategories = this.fetchSubCategories(row.id); // 从API加载子分类\r\n      }\r\n    },\r\n\r\n    // 获取子分类\r\n    async fetchSubCategories(parentId) {\r\n      try {\r\n        const res = await request.get(`/Category/SubCategories`, { params: { parentId } });\r\n        return res.data || [];\r\n      } catch (error) {\r\n        this.$message.error(\"获取子分类失败\");\r\n        return [];\r\n      }\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.load();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.category-container {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.auto-search-text {\r\n  font-size: 14px;\r\n  color: #333;\r\n  margin-right: 10px;\r\n}\r\n\r\n.search-buttons {\r\n  display: flex;\r\n  gap: 3px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.el-table .el-button {\r\n  margin-right: 5px;\r\n}\r\n\r\n.add-category {\r\n  text-align: right;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-category-text {\r\n  font-size: 16px;\r\n  color: #409EFF;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.add-category-text:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}