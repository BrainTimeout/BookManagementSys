{"ast":null,"code":"import request from \"@/utils/request\"; // 假设你使用的是 axios\n\nexport default {\n  name: 'UserManage',\n  data() {\n    return {\n      searchParams: {\n        account: '',\n        username: '',\n        phone: '',\n        address: '',\n        email: '',\n        age: '',\n        sex: ''\n      },\n      params: {\n        pageNum: 1,\n        pageSize: 12\n      },\n      tableData: [],\n      total: 0,\n      autoSearch: true,\n      dialogVisible: false,\n      // 控制对话框显示\n      currentUser: {} // 当前编辑的用户数据\n    };\n  },\n  methods: {\n    load() {\n      const searchParams = {\n        ...this.searchParams,\n        ...this.params\n      };\n      request.get('/user/page', {\n        params: searchParams\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error('加载数据失败');\n        }\n      }).catch(() => this.$message.error('加载数据失败'));\n    },\n    handleSearch() {\n      this.params.pageNum = 1; // 每次搜索时重置为第一页\n      this.load();\n    },\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    },\n    handleInput() {\n      if (this.autoSearch) {\n        this.handleSearch();\n      }\n    },\n    clearSearch() {\n      this.searchParams = {\n        account: '',\n        username: '',\n        phone: '',\n        address: '',\n        email: '',\n        age: '',\n        sex: ''\n      };\n      this.load();\n    },\n    // 处理表格行点击\n    handleRowClick(row) {\n      this.currentUser = {\n        ...row\n      }; // 将当前行的数据复制到 currentUser\n      this.dialogVisible = true; // 打开对话框\n    },\n    handleDialogClose() {\n      this.currentUser = {}; // 清空编辑的用户数据\n    },\n    // 保存修改的数据\n    handleSave() {\n      request.put(`/user/${this.currentUser.userid}`, this.currentUser) // 假设有一个接口来更新用户数据\n      .then(res => {\n        if (res.code === '200') {\n          this.$message.success('用户数据已更新');\n          this.dialogVisible = false; // 关闭对话框\n          this.load(); // 重新加载数据\n        } else {\n          this.$message.error('更新失败');\n        }\n      }).catch(() => this.$message.error('更新失败'));\n    }\n  },\n  created() {\n    this.load(); // 初始加载数据\n  }\n};","map":{"version":3,"names":["request","name","data","searchParams","account","username","phone","address","email","age","sex","params","pageNum","pageSize","tableData","total","autoSearch","dialogVisible","currentUser","methods","load","get","then","res","code","list","$message","error","catch","handleSearch","handlePageChange","page","handleInput","clearSearch","handleRowClick","row","handleDialogClose","handleSave","put","userid","success","created"],"sources":["src/views/user/UserManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <!-- 搜索表单 -->\r\n    <div class=\"search-form\">\r\n      <div class=\"search-row\">\r\n        <el-input v-model=\"searchParams.account\" placeholder=\"请输入账号\" class=\"search-input\" @input=\"handleInput\" />\r\n        <el-input v-model=\"searchParams.username\" placeholder=\"请输入名称\" class=\"search-input\" @input=\"handleInput\" />\r\n        <el-input v-model=\"searchParams.phone\" placeholder=\"请输入电话\" class=\"search-input\" @input=\"handleInput\" />\r\n        <el-input v-model=\"searchParams.address\" placeholder=\"请输入住址\" class=\"search-input\" @input=\"handleInput\" />\r\n        <el-input v-model=\"searchParams.email\" placeholder=\"请输入邮箱\" class=\"search-input\" @input=\"handleInput\" />\r\n        <el-input v-model=\"searchParams.age\" placeholder=\"请输入年龄\" class=\"search-input\" @input=\"handleInput\" />\r\n\r\n        <div class=\"search-actions\">\r\n          <el-checkbox v-model=\"autoSearch\" class=\"auto-search-checkbox\">自动搜索</el-checkbox>\r\n          <el-button type=\"primary\" @click=\"handleSearch\" class=\"search-btn\">\r\n            <i class=\"mdi mdi-magnify\"></i> 搜索\r\n          </el-button>\r\n          <el-button type=\"default\" @click=\"clearSearch\" class=\"clear-btn\">\r\n            <i class=\"mdi mdi-refresh\"></i> 重置\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe @row-click=\"handleRowClick\">\r\n      <el-table-column prop=\"account\" label=\"账号\" />\r\n      <el-table-column prop=\"username\" label=\"名称\" />\r\n      <el-table-column prop=\"phone\" label=\"电话\" />\r\n      <el-table-column prop=\"address\" label=\"住址\" />\r\n      <el-table-column prop=\"email\" label=\"邮箱\" />\r\n      <el-table-column prop=\"age\" label=\"年龄\" />\r\n      <el-table-column prop=\"sex\" label=\"性别\" />\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 空数据提示 -->\r\n    <div v-if=\"tableData.length === 0\" class=\"no-data\">\r\n      <p>没有找到相关数据</p>\r\n    </div>\r\n\r\n    <!-- 修改用户数据的对话框 -->\r\n    <el-dialog\r\n        title=\"修改用户\"\r\n        :visible.sync=\"dialogVisible\"\r\n        width=\"50%\"\r\n        @close=\"handleDialogClose\"\r\n    >\r\n      <el-form :model=\"currentUser\" ref=\"form\" label-width=\"100px\">\r\n        <el-form-item label=\"账号\">\r\n          <el-input v-model=\"currentUser.account\" placeholder=\"请输入账号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"currentUser.username\" placeholder=\"请输入名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\">\r\n          <el-input v-model=\"currentUser.phone\" placeholder=\"请输入电话\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"住址\">\r\n          <el-input v-model=\"currentUser.address\" placeholder=\"请输入住址\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"currentUser.email\" placeholder=\"请输入邮箱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\">\r\n          <el-input v-model=\"currentUser.age\" placeholder=\"请输入年龄\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\">\r\n          <el-input v-model=\"currentUser.sex\" placeholder=\"请输入性别\" />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSave\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";  // 假设你使用的是 axios\r\n\r\nexport default {\r\n  name: 'UserManage',\r\n  data() {\r\n    return {\r\n      searchParams: {\r\n        account: '',\r\n        username: '',\r\n        phone: '',\r\n        address: '',\r\n        email: '',\r\n        age: '',\r\n        sex: '',\r\n      },\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 12,\r\n      },\r\n      tableData: [],\r\n      total: 0,\r\n      autoSearch: true,\r\n      dialogVisible: false,  // 控制对话框显示\r\n      currentUser: {},  // 当前编辑的用户数据\r\n    };\r\n  },\r\n  methods: {\r\n    load() {\r\n      const searchParams = { ...this.searchParams, ...this.params };\r\n      request.get('/user/page', { params: searchParams })\r\n          .then(res => {\r\n            if (res.code === '200') {\r\n              this.tableData = res.data.list;\r\n              this.total = res.data.total;\r\n            } else {\r\n              this.$message.error('加载数据失败');\r\n            }\r\n          })\r\n          .catch(() => this.$message.error('加载数据失败'));\r\n    },\r\n\r\n    handleSearch() {\r\n      this.params.pageNum = 1;  // 每次搜索时重置为第一页\r\n      this.load();\r\n    },\r\n\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.handleSearch();\r\n      }\r\n    },\r\n\r\n    clearSearch() {\r\n      this.searchParams = {\r\n        account: '',\r\n        username: '',\r\n        phone: '',\r\n        address: '',\r\n        email: '',\r\n        age: '',\r\n        sex: '',\r\n      };\r\n      this.load();\r\n    },\r\n\r\n    // 处理表格行点击\r\n    handleRowClick(row) {\r\n      this.currentUser = { ...row };  // 将当前行的数据复制到 currentUser\r\n      this.dialogVisible = true;  // 打开对话框\r\n    },\r\n\r\n    handleDialogClose() {\r\n      this.currentUser = {};  // 清空编辑的用户数据\r\n    },\r\n\r\n    // 保存修改的数据\r\n    handleSave() {\r\n      request.put(`/user/${this.currentUser.userid}`, this.currentUser)  // 假设有一个接口来更新用户数据\r\n          .then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success('用户数据已更新');\r\n              this.dialogVisible = false;  // 关闭对话框\r\n              this.load();  // 重新加载数据\r\n            } else {\r\n              this.$message.error('更新失败');\r\n            }\r\n          })\r\n          .catch(() => this.$message.error('更新失败'));\r\n    },\r\n  },\r\n  created() {\r\n    this.load();  // 初始加载数据\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  padding: 10px;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.search-row {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.search-input {\r\n  width: 200px;\r\n  margin-right: 4px;\r\n}\r\n\r\n.search-actions {\r\n  display: inline-block;\r\n  margin-left: 4px;\r\n}\r\n\r\n.search-btn, .clear-btn {\r\n  width: 90px;\r\n  margin-left: 4px;\r\n}\r\n\r\n.auto-search-checkbox {\r\n  margin-right: 5px;\r\n  margin-top: 4px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #888;\r\n}\r\n\r\n.el-button[type=\"primary\"] {\r\n  background-color: #409EFF;\r\n  border-color: #409EFF;\r\n}\r\n\r\n.clear-btn {\r\n  background-color: #FFA500;\r\n  border-color: #FFA500;\r\n  color: white;\r\n}\r\n\r\n.clear-btn:hover {\r\n  background-color: #FFB74D;\r\n}\r\n\r\n.el-button[loading] {\r\n  background-color: #f0f0f0;\r\n}\r\n</style>\r\n"],"mappings":"AA0FA,OAAAA,OAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;QACAC,OAAA;QACAC,QAAA;QACAC,KAAA;QACAC,OAAA;QACAC,KAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,SAAA;MACAC,KAAA;MACAC,UAAA;MACAC,aAAA;MAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,MAAAjB,YAAA;QAAA,QAAAA,YAAA;QAAA,QAAAQ;MAAA;MACAX,OAAA,CAAAqB,GAAA;QAAAV,MAAA,EAAAR;MAAA,GACAmB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAV,SAAA,GAAAS,GAAA,CAAArB,IAAA,CAAAuB,IAAA;UACA,KAAAV,KAAA,GAAAQ,GAAA,CAAArB,IAAA,CAAAa,KAAA;QACA;UACA,KAAAW,QAAA,CAAAC,KAAA;QACA;MACA,GACAC,KAAA,YAAAF,QAAA,CAAAC,KAAA;IACA;IAEAE,aAAA;MACA,KAAAlB,MAAA,CAAAC,OAAA;MACA,KAAAQ,IAAA;IACA;IAEAU,iBAAAC,IAAA;MACA,KAAApB,MAAA,CAAAC,OAAA,GAAAmB,IAAA;MACA,KAAAX,IAAA;IACA;IAEAY,YAAA;MACA,SAAAhB,UAAA;QACA,KAAAa,YAAA;MACA;IACA;IAEAI,YAAA;MACA,KAAA9B,YAAA;QACAC,OAAA;QACAC,QAAA;QACAC,KAAA;QACAC,OAAA;QACAC,KAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACA,KAAAU,IAAA;IACA;IAEA;IACAc,eAAAC,GAAA;MACA,KAAAjB,WAAA;QAAA,GAAAiB;MAAA;MACA,KAAAlB,aAAA;IACA;IAEAmB,kBAAA;MACA,KAAAlB,WAAA;IACA;IAEA;IACAmB,WAAA;MACArC,OAAA,CAAAsC,GAAA,eAAApB,WAAA,CAAAqB,MAAA,SAAArB,WAAA;MAAA,CACAI,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAE,QAAA,CAAAc,OAAA;UACA,KAAAvB,aAAA;UACA,KAAAG,IAAA;QACA;UACA,KAAAM,QAAA,CAAAC,KAAA;QACA;MACA,GACAC,KAAA,YAAAF,QAAA,CAAAC,KAAA;IACA;EACA;EACAc,QAAA;IACA,KAAArB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}