{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\"; // 假设你已经配置了请求工具\n\nexport default {\n  name: \"UserJoin\",\n  data() {\n    return {\n      userForm: {\n        account: \"\",\n        username: \"\",\n        age: \"\",\n        sex: \"\",\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n        introduce: \"\"\n      }\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      try {\n        const isValid = await this.$refs.userForm.validate();\n        if (!isValid) return; // 表单验证失败，阻止提交\n\n        const res = await request.post(\"/user/Add\", this.userForm);\n        if (res.code === \"200\") {\n          this.$message.success(\"用户添加成功！\");\n          this.$router.push({\n            name: \"UserList\"\n          }); // 成功后跳转到用户列表页面\n        } else {\n          this.$message.error(\"添加用户失败！\");\n        }\n      } catch (error) {\n        this.$message.error(\"添加用户失败！\");\n      }\n    },\n    handleReset() {\n      this.$refs.userForm.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","userForm","account","username","age","sex","address","phone","email","introduce","methods","handleSubmit","isValid","$refs","validate","res","post","code","$message","success","$router","push","error","handleReset","resetFields"],"sources":["src/views/user/UserJoin.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-join-container\">\r\n    <el-form :model=\"userForm\" ref=\"userForm\" label-width=\"120px\" class=\"user-form\">\r\n      <el-form-item label=\"账户\" prop=\"account\" :rules=\"[{ required: true, message: '请输入账户', trigger: 'blur' }]\">\r\n        <el-input v-model=\"userForm.account\" placeholder=\"请输入账户\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"用户名\" prop=\"username\" :rules=\"[{ required: true, message: '请输入用户名', trigger: 'blur' }]\">\r\n        <el-input v-model=\"userForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"年龄\" prop=\"age\" :rules=\"[{ required: true, message: '请输入年龄', trigger: 'blur' }]\">\r\n        <el-input v-model=\"userForm.age\" placeholder=\"请输入年龄\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"性别\" prop=\"sex\" :rules=\"[{ required: true, message: '请选择性别', trigger: 'change' }]\">\r\n        <el-select v-model=\"userForm.sex\" placeholder=\"请选择性别\">\r\n          <el-option label=\"男\" value=\"男\"></el-option>\r\n          <el-option label=\"女\" value=\"女\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"地址\" prop=\"address\" :rules=\"[{ required: true, message: '请输入地址', trigger: 'blur' }]\">\r\n        <el-input v-model=\"userForm.address\" placeholder=\"请输入地址\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"电话\" prop=\"phone\" :rules=\"[{ required: true, message: '请输入电话', trigger: 'blur' }]\">\r\n        <el-input v-model=\"userForm.phone\" placeholder=\"请输入电话\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"邮箱\" prop=\"email\" :rules=\"[{ required: true, message: '请输入邮箱', trigger: 'blur' }]\">\r\n        <el-input v-model=\"userForm.email\" placeholder=\"请输入邮箱\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"简介\" prop=\"introduce\">\r\n        <el-input v-model=\"userForm.introduce\" type=\"textarea\" placeholder=\"请输入简介\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">提交</el-button>\r\n        <el-button @click=\"handleReset\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\"; // 假设你已经配置了请求工具\r\n\r\nexport default {\r\n  name: \"UserJoin\",\r\n  data() {\r\n    return {\r\n      userForm: {\r\n        account: \"\",\r\n        username: \"\",\r\n        age: \"\",\r\n        sex: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        introduce: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      try {\r\n        const isValid = await this.$refs.userForm.validate();\r\n        if (!isValid) return; // 表单验证失败，阻止提交\r\n\r\n        const res = await request.post(\"/user/Add\", this.userForm);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"用户添加成功！\");\r\n          this.$router.push({ name: \"UserList\" }); // 成功后跳转到用户列表页面\r\n        } else {\r\n          this.$message.error(\"添加用户失败！\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"添加用户失败！\");\r\n      }\r\n    },\r\n    handleReset() {\r\n      this.$refs.userForm.resetFields();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-join-container {\r\n  width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.user-form {\r\n  padding: 20px;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":";AA+CA,OAAAA,OAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,OAAA;QACAC,QAAA;QACAC,GAAA;QACAC,GAAA;QACAC,OAAA;QACAC,KAAA;QACAC,KAAA;QACAC,SAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,aAAA;MACA;QACA,MAAAC,OAAA,cAAAC,KAAA,CAAAZ,QAAA,CAAAa,QAAA;QACA,KAAAF,OAAA;;QAEA,MAAAG,GAAA,SAAAjB,OAAA,CAAAkB,IAAA,mBAAAf,QAAA;QACA,IAAAc,GAAA,CAAAE,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;YAAAtB,IAAA;UAAA;QACA;UACA,KAAAmB,QAAA,CAAAI,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAJ,QAAA,CAAAI,KAAA;MACA;IACA;IACAC,YAAA;MACA,KAAAV,KAAA,CAAAZ,QAAA,CAAAuB,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}