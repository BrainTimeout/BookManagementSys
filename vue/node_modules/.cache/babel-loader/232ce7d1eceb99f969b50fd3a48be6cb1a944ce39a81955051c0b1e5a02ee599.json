{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  props: [\"id\"],\n  // 从父组件接收书籍 ID\n  data() {\n    return {\n      book: null,\n      loading: false\n    };\n  },\n  methods: {\n    // 加载书籍详细信息\n    async loadBook() {\n      if (!this.id) {\n        this.$message.error(\"无效的书籍 ID\");\n        return;\n      }\n      this.loading = true;\n      try {\n        const res = await request.get(`/User/${this.id}`);\n        if (res.code === \"200\") {\n          this.book = res.data;\n        } else {\n          this.$message.error(\"加载书籍信息失败\");\n        }\n      } catch {\n        this.$message.error(\"加载书籍信息失败\");\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 格式化日期\n    formatDate(dateString) {\n      if (!dateString) return \"未知日期\";\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      return new Date(dateString).toLocaleDateString(\"zh-CN\", options);\n    },\n    // 返回书籍列表\n    goBack() {\n      this.$router.push({\n        name: \"bookShow\"\n      });\n    }\n  },\n  created() {\n    this.loadBook();\n  }\n};","map":{"version":3,"names":["request","props","data","book","loading","methods","loadBook","id","$message","error","res","get","code","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","goBack","$router","push","name","created"],"sources":["src/views/book/Detail.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-detail\">\r\n    <!-- 返回按钮 -->\r\n    <el-button type=\"primary\" @click=\"goBack\">返回书籍列表</el-button>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\">\r\n      <el-spinner></el-spinner>\r\n      <p>正在加载书籍信息...</p>\r\n    </div>\r\n\r\n    <!-- 展示书籍详细信息 -->\r\n    <div v-else-if=\"book\" class=\"book-info\">\r\n      <h1>{{ book.name }}</h1>\r\n      <p>描述: {{ book.description || \"暂无描述\" }}</p>\r\n      <p>出版日期: {{ formatDate(book.publishDate) }}</p>\r\n      <p>作者: {{ book.author || \"未知\" }}</p>\r\n      <p>出版社: {{ book.publisher || \"未知\" }}</p>\r\n      <p>分类: {{ book.category || \"无分类\" }}</p>\r\n      <p>书籍编号: {{ book.bookNo || \"无编号\" }}</p>\r\n      <p>积分: {{ book.score || \"无积分\" }}</p>\r\n      <p>库存数量: {{ book.nums || 0 }}</p>\r\n      <p>创建时间: {{ book.createtime || \"未知\" }}</p>\r\n      <p>更新时间: {{ book.updatetime || \"未知\" }}</p>\r\n      <img :src=\"book.cover\" alt=\"书籍封面\" class=\"book-cover\" v-if=\"book.cover\" />\r\n    </div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-else>\r\n      <p>书籍信息加载失败或书籍不存在。</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  props: [\"id\"], // 从父组件接收书籍 ID\r\n  data() {\r\n    return {\r\n      book: null,\r\n      loading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 加载书籍详细信息\r\n    async loadBook() {\r\n      if (!this.id) {\r\n        this.$message.error(\"无效的书籍 ID\");\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      try {\r\n        const res = await request.get(`/User/${this.id}`);\r\n        if (res.code === \"200\") {\r\n          this.book = res.data;\r\n        } else {\r\n          this.$message.error(\"加载书籍信息失败\");\r\n        }\r\n      } catch {\r\n        this.$message.error(\"加载书籍信息失败\");\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    // 格式化日期\r\n    formatDate(dateString) {\r\n      if (!dateString) return \"未知日期\";\r\n      const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n      return new Date(dateString).toLocaleDateString(\"zh-CN\", options);\r\n    },\r\n    // 返回书籍列表\r\n    goBack() {\r\n      this.$router.push({ name: \"bookShow\" });\r\n    },\r\n  },\r\n  created() {\r\n    this.loadBook();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.book-detail {\r\n  padding: 20px;\r\n}\r\n.book-info {\r\n  margin-top: 20px;\r\n}\r\n.book-info h1 {\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n}\r\n.book-info p {\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  margin: 5px 0;\r\n}\r\n.book-cover {\r\n  margin-top: 20px;\r\n  max-width: 300px;\r\n  height: auto;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":";AAmCA,OAAAA,OAAA;AAEA;EACAC,KAAA;EAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,SAAA;MACA,UAAAC,EAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;QACA;MACA;MACA,KAAAL,OAAA;MACA;QACA,MAAAM,GAAA,SAAAV,OAAA,CAAAW,GAAA,eAAAJ,EAAA;QACA,IAAAG,GAAA,CAAAE,IAAA;UACA,KAAAT,IAAA,GAAAO,GAAA,CAAAR,IAAA;QACA;UACA,KAAAM,QAAA,CAAAC,KAAA;QACA;MACA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;QACA,KAAAL,OAAA;MACA;IACA;IACA;IACAS,WAAAC,UAAA;MACA,KAAAA,UAAA;MACA,MAAAC,OAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,GAAA;MAAA;MACA,WAAAC,IAAA,CAAAL,UAAA,EAAAM,kBAAA,UAAAL,OAAA;IACA;IACA;IACAM,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAnB,QAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}