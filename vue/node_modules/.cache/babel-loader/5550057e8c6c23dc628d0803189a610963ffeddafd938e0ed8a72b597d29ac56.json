{"ast":null,"code":"export default {\n  name: \"Show\",\n  data() {\n    return {\n      books: [],\n      // 书籍列表\n      dialogVisible: false,\n      // 控制详情对话框的显示\n      selectedBook: {},\n      // 当前选中的书籍\n      placeholder: \"https://via.placeholder.com/150x200?text=No+Cover\" // 占位图链接\n    };\n  },\n  methods: {\n    async loadBooks() {\n      try {\n        const res = await this.$axios.get(\"/Book/List\");\n        if (res.code === \"200\") {\n          this.books = res.data;\n        } else {\n          this.$message.error(\"加载书籍失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载书籍失败\");\n      }\n    },\n    openBookDetail(book) {\n      this.selectedBook = book;\n      this.dialogVisible = true;\n    }\n  },\n  created() {\n    this.loadBooks();\n  }\n};","map":{"version":3,"names":["name","data","books","dialogVisible","selectedBook","placeholder","methods","loadBooks","res","$axios","get","code","$message","error","openBookDetail","book","created"],"sources":["src/views/book/Show.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-book-container\">\r\n    <!-- 书籍展示列表 -->\r\n    <div class=\"book-grid\">\r\n      <div\r\n          v-for=\"book in books\"\r\n          :key=\"book.id\"\r\n          class=\"book-card\"\r\n          @click=\"openBookDetail(book)\"\r\n      >\r\n        <img :src=\"book.cover || placeholder\" class=\"book-cover\" alt=\"封面\"/>\r\n        <div class=\"book-title\">{{ book.name }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 书籍详情对话框 -->\r\n    <el-dialog\r\n        title=\"书籍详情\"\r\n        :visible.sync=\"dialogVisible\"\r\n        width=\"40%\"\r\n    >\r\n      <div class=\"book-detail\">\r\n        <img :src=\"selectedBook.cover || placeholder\" class=\"detail-cover\" alt=\"封面\"/>\r\n        <div class=\"detail-info\">\r\n          <p><strong>书名：</strong>{{ selectedBook.name }}</p>\r\n          <p><strong>作者：</strong>{{ selectedBook.author || '暂无信息' }}</p>\r\n          <p><strong>出版社：</strong>{{ selectedBook.publisher || '暂无信息' }}</p>\r\n          <p><strong>分类：</strong>{{ selectedBook.category || '暂无信息' }}</p>\r\n          <p><strong>出版日期：</strong>{{ selectedBook.publishDate || '暂无信息' }}</p>\r\n          <p><strong>描述：</strong>{{ selectedBook.description || '暂无描述' }}</p>\r\n        </div>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">关闭</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Show\",\r\n  data() {\r\n    return {\r\n      books: [], // 书籍列表\r\n      dialogVisible: false, // 控制详情对话框的显示\r\n      selectedBook: {}, // 当前选中的书籍\r\n      placeholder: \"https://via.placeholder.com/150x200?text=No+Cover\" // 占位图链接\r\n    };\r\n  },\r\n  methods: {\r\n    async loadBooks() {\r\n      try {\r\n        const res = await this.$axios.get(\"/Book/List\");\r\n        if (res.code === \"200\") {\r\n          this.books = res.data;\r\n        } else {\r\n          this.$message.error(\"加载书籍失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载书籍失败\");\r\n      }\r\n    },\r\n    openBookDetail(book) {\r\n      this.selectedBook = book;\r\n      this.dialogVisible = true;\r\n    },\r\n  },\r\n  created() {\r\n    this.loadBooks();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-book-container {\r\n  padding: 20px;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.book-card {\r\n  cursor: pointer;\r\n  text-align: center;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.book-cover {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.book-title {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  padding: 10px;\r\n  color: #333;\r\n}\r\n\r\n.book-detail {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.detail-cover {\r\n  width: 150px;\r\n  height: 200px;\r\n  object-fit: cover;\r\n}\r\n\r\n.detail-info {\r\n  flex: 1;\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.detail-info strong {\r\n  color: #555;\r\n}\r\n</style>"],"mappings":"AAwCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MAAA;MACAC,aAAA;MAAA;MACAC,YAAA;MAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,UAAA;MACA;QACA,MAAAC,GAAA,cAAAC,MAAA,CAAAC,GAAA;QACA,IAAAF,GAAA,CAAAG,IAAA;UACA,KAAAT,KAAA,GAAAM,GAAA,CAAAP,IAAA;QACA;UACA,KAAAW,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAC,eAAAC,IAAA;MACA,KAAAX,YAAA,GAAAW,IAAA;MACA,KAAAZ,aAAA;IACA;EACA;EACAa,QAAA;IACA,KAAAT,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}