{"ast":null,"code":"import request from \"@/utils/request\"; // 假设你使用的是 axios\n\nexport default {\n  name: 'UserManage',\n  data() {\n    return {\n      tableData: [],\n      // 数据\n      total: 0,\n      // 总条数\n      autoSearch: false,\n      // 自动搜索开关\n      params: {\n        pageNum: 1,\n        // 当前页\n        pageSize: 12,\n        // 每页条数\n        account: \"\",\n        // 账户\n        username: \"\",\n        // 用户名\n        age: \"\",\n        // 年龄\n        sex: \"\",\n        // 性别\n        address: \"\",\n        // 地址\n        phone: \"\" // 电话\n      }\n    };\n  },\n  watch: {\n    // 监听分页参数的变化，自动加载数据\n    'params.pageNum'(newPage) {\n      this.load();\n    },\n    'params.pageSize'(newSize) {\n      this.load();\n    },\n    // 监听自动搜索开关变化\n    'autoSearch'(newVal) {\n      if (newVal) {\n        this.handleSearch(); // 启用自动搜索时立即触发搜索\n      }\n    }\n  },\n  methods: {\n    async load() {\n      try {\n        const searchParams = {\n          ...this.params\n        };\n        const res = await request.get('/user/InfoPage', {\n          params: searchParams\n        });\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error('加载数据失败');\n        }\n      } catch (error) {\n        this.$message.error('加载数据失败');\n      }\n    },\n    handleSearch() {\n      this.params.pageNum = 1; // 重置为第一页\n      this.load(); // 根据当前搜索条件加载数据\n    },\n    handleReset() {\n      // 重置搜索条件\n      this.params = {\n        pageNum: 1,\n        pageSize: 12,\n        account: \"\",\n        username: \"\",\n        age: \"\",\n        sex: \"\",\n        address: \"\",\n        phone: \"\"\n      };\n      this.load(); // 重置后加载数据\n    },\n    handleInputChange() {\n      if (this.autoSearch) {\n        this.handleSearch(); // 在自动搜索模式下，输入框内容变化时触发搜索\n      }\n    },\n    handlePageChange(page) {\n      this.params.pageNum = page; // 更新当前页\n    }\n  },\n  created() {\n    this.load(); // 初始加载数据\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","autoSearch","params","pageNum","pageSize","account","username","age","sex","address","phone","watch","params.pageNum","newPage","load","params.pageSize","newSize","newVal","handleSearch","methods","searchParams","res","get","code","list","$message","error","handleReset","handleInputChange","handlePageChange","page","created"],"sources":["src/views/user/UserManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"search-row\" gutter=\"20\">\r\n      <el-col :span=\"4\">\r\n        <el-input v-model=\"params.account\" placeholder=\"账户\" clearable @input=\"handleInputChange\" />\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-input v-model=\"params.username\" placeholder=\"用户名\" clearable @input=\"handleInputChange\" />\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-input v-model=\"params.age\" placeholder=\"年龄\" clearable @input=\"handleInputChange\" />\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-input v-model=\"params.sex\" placeholder=\"性别\" clearable @input=\"handleInputChange\" />\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-input v-model=\"params.address\" placeholder=\"地址\" clearable @input=\"handleInputChange\" />\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-input v-model=\"params.phone\" placeholder=\"电话\" clearable @input=\"handleInputChange\" />\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 自动搜索开关 -->\r\n    <el-row class=\"auto-search-row\" gutter=\"20\" align=\"middle\">\r\n      <el-col :span=\"4\" class=\"auto-search-switch\">\r\n        <el-switch v-model=\"autoSearch\" @change=\"handleSearch\" />\r\n        <span class=\"auto-search-text\">自动搜索</span>\r\n      </el-col>\r\n\r\n      <!-- 搜索和重置按钮 -->\r\n      <el-col :span=\"4\">\r\n        <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe>\r\n      <el-table-column prop=\"userid\" label=\"用户ID\" />\r\n      <el-table-column prop=\"account\" label=\"账户\" />\r\n      <el-table-column prop=\"username\" label=\"用户名\" />\r\n      <el-table-column prop=\"age\" label=\"年龄\" />\r\n      <el-table-column prop=\"sex\" label=\"性别\" />\r\n      <el-table-column prop=\"address\" label=\"地址\" />\r\n      <el-table-column prop=\"phone\" label=\"电话\" />\r\n\r\n      <!-- 更多列 -->\r\n      <el-table-column label=\"更多\">\r\n        <template v-slot=\"scope\">\r\n          <el-dropdown trigger=\"click\">\r\n            <span class=\"el-dropdown-link\">\r\n              更多\r\n            </span>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item>\r\n                <strong>创建时间：</strong>{{ scope.row.creatime }}\r\n              </el-dropdown-item>\r\n              <el-dropdown-item>\r\n                <strong>更新时间：</strong>{{ scope.row.updatetime }}\r\n              </el-dropdown-item>\r\n              <el-dropdown-item>\r\n                <strong>简介：</strong>{{ scope.row.introduce || '暂无简介' }}\r\n              </el-dropdown-item>\r\n              <el-dropdown-item>\r\n                <strong>邮箱：</strong>{{ scope.row.email || '暂无邮箱' }}\r\n              </el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 空数据提示 -->\r\n    <div v-if=\"tableData.length === 0\" class=\"no-data\">\r\n      <p>没有找到相关数据</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";  // 假设你使用的是 axios\r\n\r\nexport default {\r\n  name: 'UserManage',\r\n  data() {\r\n    return {\r\n      tableData: [],  // 数据\r\n      total: 0,  // 总条数\r\n      autoSearch: false,  // 自动搜索开关\r\n      params: {\r\n        pageNum: 1,  // 当前页\r\n        pageSize: 12,  // 每页条数\r\n        account: \"\",  // 账户\r\n        username: \"\",  // 用户名\r\n        age: \"\",  // 年龄\r\n        sex: \"\",  // 性别\r\n        address: \"\",  // 地址\r\n        phone: \"\",  // 电话\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    // 监听分页参数的变化，自动加载数据\r\n    'params.pageNum'(newPage) {\r\n      this.load();\r\n    },\r\n    'params.pageSize'(newSize) {\r\n      this.load();\r\n    },\r\n    // 监听自动搜索开关变化\r\n    'autoSearch'(newVal) {\r\n      if (newVal) {\r\n        this.handleSearch();  // 启用自动搜索时立即触发搜索\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async load() {\r\n      try {\r\n        const searchParams = { ...this.params };\r\n\r\n        const res = await request.get('/user/InfoPage', { params: searchParams });\r\n\r\n        if (res.code === '200') {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error('加载数据失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('加载数据失败');\r\n      }\r\n    },\r\n\r\n    handleSearch() {\r\n      this.params.pageNum = 1;  // 重置为第一页\r\n      this.load();  // 根据当前搜索条件加载数据\r\n    },\r\n\r\n    handleReset() {\r\n      // 重置搜索条件\r\n      this.params = {\r\n        pageNum: 1,\r\n        pageSize: 12,\r\n        account: \"\",\r\n        username: \"\",\r\n        age: \"\",\r\n        sex: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n      };\r\n      this.load();  // 重置后加载数据\r\n    },\r\n\r\n    handleInputChange() {\r\n      if (this.autoSearch) {\r\n        this.handleSearch();  // 在自动搜索模式下，输入框内容变化时触发搜索\r\n      }\r\n    },\r\n\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;  // 更新当前页\r\n    },\r\n  },\r\n  created() {\r\n    this.load();  // 初始加载数据\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  padding: 10px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #888;\r\n}\r\n\r\n.el-dropdown-link {\r\n  cursor: pointer;\r\n  color: #409EFF;\r\n  font-weight: bold;\r\n}\r\n\r\n.search-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.auto-search-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.auto-search-switch {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.auto-search-text {\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":"AA8FA,OAAAA,OAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,KAAA;MAAA;MACAC,UAAA;MAAA;MACAC,MAAA;QACAC,OAAA;QAAA;QACAC,QAAA;QAAA;QACAC,OAAA;QAAA;QACAC,QAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;QAAA;QACAC,OAAA;QAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,KAAA;IACA;IACA,gBAAAC,CAAAC,OAAA;MACA,KAAAC,IAAA;IACA;IACA,iBAAAC,CAAAC,OAAA;MACA,KAAAF,IAAA;IACA;IACA;IACA,YAAAb,CAAAgB,MAAA;MACA,IAAAA,MAAA;QACA,KAAAC,YAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAL,KAAA;MACA;QACA,MAAAM,YAAA;UAAA,QAAAlB;QAAA;QAEA,MAAAmB,GAAA,SAAAzB,OAAA,CAAA0B,GAAA;UAAApB,MAAA,EAAAkB;QAAA;QAEA,IAAAC,GAAA,CAAAE,IAAA;UACA,KAAAxB,SAAA,GAAAsB,GAAA,CAAAvB,IAAA,CAAA0B,IAAA;UACA,KAAAxB,KAAA,GAAAqB,GAAA,CAAAvB,IAAA,CAAAE,KAAA;QACA;UACA,KAAAyB,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IAEAR,aAAA;MACA,KAAAhB,MAAA,CAAAC,OAAA;MACA,KAAAW,IAAA;IACA;IAEAa,YAAA;MACA;MACA,KAAAzB,MAAA;QACAC,OAAA;QACAC,QAAA;QACAC,OAAA;QACAC,QAAA;QACAC,GAAA;QACAC,GAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACA,KAAAI,IAAA;IACA;IAEAc,kBAAA;MACA,SAAA3B,UAAA;QACA,KAAAiB,YAAA;MACA;IACA;IAEAW,iBAAAC,IAAA;MACA,KAAA5B,MAAA,CAAAC,OAAA,GAAA2B,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAjB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}