{"ast":null,"code":"import request from \"@/utils/request\"; // 假设你使用的是 axios\n\nexport default {\n  name: \"UserManage\",\n  data() {\n    return {\n      tableData: [],\n      // 数据\n      total: 0,\n      // 总条数\n      params: {\n        pageNum: 1,\n        // 当前页\n        pageSize: 12 // 每页条数\n      },\n      filters: {\n        account: \"\",\n        // 账户筛选条件\n        username: \"\",\n        // 用户名筛选条件\n        age: \"\",\n        // 年龄筛选条件\n        sex: null,\n        // 性别筛选条件\n        address: \"\",\n        // 地址筛选条件\n        phone: \"\" // 电话筛选条件\n      },\n      autoSearch: false // 自动搜索开关\n    };\n  },\n  watch: {\n    \"params.pageNum\"(newPage) {\n      this.load();\n    },\n    \"params.pageSize\"(newSize) {\n      this.load();\n    }\n  },\n  methods: {\n    async load() {\n      try {\n        const searchParams = {\n          ...this.params,\n          ...this.filters\n        };\n        const res = await request.get(\"/user/InfoPage\", {\n          params: searchParams\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    handleSearch() {\n      this.load();\n    },\n    handleReset() {\n      this.filters = {\n        account: \"\",\n        username: \"\",\n        age: \"\",\n        sex: null,\n        address: \"\",\n        phone: \"\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handleInput() {\n      if (this.autoSearch) {\n        this.load();\n      }\n    },\n    handlePageChange(page) {\n      this.params.pageNum = page;\n    }\n  },\n  created() {\n    this.load();\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","account","username","age","sex","address","phone","autoSearch","watch","params.pageNum","newPage","load","params.pageSize","newSize","methods","searchParams","res","get","code","list","$message","error","handleSearch","handleReset","handleInput","handlePageChange","page","created"],"sources":["src/views/user/UserManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <!-- 筛选条件 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.account\"\r\n          placeholder=\"账户\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.username\"\r\n          placeholder=\"用户名\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.age\"\r\n          placeholder=\"年龄\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-select\r\n          v-model=\"filters.sex\"\r\n          placeholder=\"性别\"\r\n          class=\"filter-input\"\r\n          @change=\"handleInput\"\r\n      >\r\n        <el-option label=\"男\" value=\"男\" />\r\n        <el-option label=\"女\" value=\"女\" />\r\n      </el-select>\r\n      <el-input\r\n          v-model=\"filters.address\"\r\n          placeholder=\"地址\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.phone\"\r\n          placeholder=\"电话\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n    </el-row>\r\n\r\n    <!-- 按钮组 -->\r\n    <el-row class=\"button-row\">\r\n      <el-switch v-model=\"autoSearch\" @change=\"handleSearch\" />\r\n      <span class=\"auto-search-text\">自动搜索</span>\r\n      <div class=\"search-buttons\">\r\n        <el-button type=\"primary\" @click=\"handleSearch\" class=\"btn-spacing\">搜索</el-button>\r\n        <el-button type=\"warning\" @click=\"handleReset\" class=\"btn-spacing\">重置</el-button>\r\n      </div>\r\n    </el-row>\r\n\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe>\r\n      <el-table-column prop=\"userid\" label=\"用户ID\" />\r\n      <el-table-column prop=\"account\" label=\"账户\" />\r\n      <el-table-column prop=\"username\" label=\"用户名\" />\r\n      <el-table-column prop=\"age\" label=\"年龄\" />\r\n      <el-table-column prop=\"sex\" label=\"性别\" />\r\n      <el-table-column prop=\"address\" label=\"地址\" />\r\n      <el-table-column prop=\"phone\" label=\"电话\" />\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 空数据提示 -->\r\n    <div v-if=\"tableData.length === 0\" class=\"no-data\">\r\n      <p>没有找到相关数据</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\"; // 假设你使用的是 axios\r\n\r\nexport default {\r\n  name: \"UserManage\",\r\n  data() {\r\n    return {\r\n      tableData: [], // 数据\r\n      total: 0, // 总条数\r\n      params: {\r\n        pageNum: 1, // 当前页\r\n        pageSize: 12, // 每页条数\r\n      },\r\n      filters: {\r\n        account: \"\", // 账户筛选条件\r\n        username: \"\", // 用户名筛选条件\r\n        age: \"\", // 年龄筛选条件\r\n        sex: null, // 性别筛选条件\r\n        address: \"\", // 地址筛选条件\r\n        phone: \"\", // 电话筛选条件\r\n      },\r\n      autoSearch: false, // 自动搜索开关\r\n    };\r\n  },\r\n  watch: {\r\n    \"params.pageNum\"(newPage) {\r\n      this.load();\r\n    },\r\n    \"params.pageSize\"(newSize) {\r\n      this.load();\r\n    },\r\n  },\r\n  methods: {\r\n    async load() {\r\n      try {\r\n        const searchParams = { ...this.params, ...this.filters };\r\n        const res = await request.get(\"/user/InfoPage\", { params: searchParams });\r\n\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.load();\r\n    },\r\n    handleReset() {\r\n      this.filters = {\r\n        account: \"\",\r\n        username: \"\",\r\n        age: \"\",\r\n        sex: null,\r\n        address: \"\",\r\n        phone: \"\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.load();\r\n      }\r\n    },\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n    },\r\n  },\r\n  created() {\r\n    this.load();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  padding: 10px;\r\n}\r\n\r\n.filter-row {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 150px;\r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.auto-search-text {\r\n  font-size: 14px;\r\n  color: #333;\r\n  margin-right: 10px;\r\n}\r\n\r\n.search-buttons {\r\n  display: flex;\r\n  gap: 3px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #888;\r\n}\r\n\r\n.el-dropdown-link {\r\n  cursor: pointer;\r\n  color: #409EFF;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"AAoFA,OAAAA,OAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,KAAA;MAAA;MACAC,MAAA;QACAC,OAAA;QAAA;QACAC,QAAA;MACA;MACAC,OAAA;QACAC,OAAA;QAAA;QACAC,QAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;QAAA;QACAC,OAAA;QAAA;QACAC,KAAA;MACA;MACAC,UAAA;IACA;EACA;EACAC,KAAA;IACA,gBAAAC,CAAAC,OAAA;MACA,KAAAC,IAAA;IACA;IACA,iBAAAC,CAAAC,OAAA;MACA,KAAAF,IAAA;IACA;EACA;EACAG,OAAA;IACA,MAAAH,KAAA;MACA;QACA,MAAAI,YAAA;UAAA,QAAAlB,MAAA;UAAA,QAAAG;QAAA;QACA,MAAAgB,GAAA,SAAAxB,OAAA,CAAAyB,GAAA;UAAApB,MAAA,EAAAkB;QAAA;QAEA,IAAAC,GAAA,CAAAE,IAAA;UACA,KAAAvB,SAAA,GAAAqB,GAAA,CAAAtB,IAAA,CAAAyB,IAAA;UACA,KAAAvB,KAAA,GAAAoB,GAAA,CAAAtB,IAAA,CAAAE,KAAA;QACA;UACA,KAAAwB,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAC,aAAA;MACA,KAAAX,IAAA;IACA;IACAY,YAAA;MACA,KAAAvB,OAAA;QACAC,OAAA;QACAC,QAAA;QACAC,GAAA;QACAC,GAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACA,KAAAT,MAAA,CAAAC,OAAA;MACA,KAAAa,IAAA;IACA;IACAa,YAAA;MACA,SAAAjB,UAAA;QACA,KAAAI,IAAA;MACA;IACA;IACAc,iBAAAC,IAAA;MACA,KAAA7B,MAAA,CAAAC,OAAA,GAAA4B,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAhB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}