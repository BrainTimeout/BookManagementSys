{"ast":null,"code":"import request from \"@/utils/request\"; // 请根据实际请求方式调整\n\nexport default {\n  name: \"BookList\",\n  data() {\n    return {\n      tableData: [],\n      // 存储借阅数据\n      total: 0,\n      // 数据总数\n      params: {\n        pageNum: 1,\n        pageSize: 6\n      },\n      filters: {\n        account: \"\",\n        // 用户账号\n        bookNo: \"\",\n        // 书籍编号\n        username: \"\",\n        // 用户名\n        bookName: \"\",\n        // 图书名称\n        dueDate: \"\",\n        // 借书到期时间\n        sortOrder: \"ascending\" // 排序顺序\n      },\n      autoSearch: false // 控制是否开启自动搜索\n    };\n  },\n  methods: {\n    // 加载数据\n    async load() {\n      try {\n        const res = await request.get(\"/Borrow/Page\", {\n          params: {\n            ...this.params,\n            ...this.filters\n          }\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    // 处理输入变化并自动搜索\n    handleInput() {\n      if (this.autoSearch) {\n        this.params.pageNum = 1;\n        this.load();\n      }\n    },\n    // 手动搜索按钮点击事件\n    handleSearch() {\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 重置搜索条件\n    handleReset() {\n      this.filters = {\n        account: \"\",\n        bookNo: \"\",\n        username: \"\",\n        bookName: \"\",\n        dueDate: \"\",\n        sortOrder: \"ascending\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 处理排序变化\n    handleSortChange({\n      prop,\n      order\n    }) {\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\n      this.load();\n    },\n    // 分页改变\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    },\n    // 编辑操作\n    handleEdit(row) {\n      this.editBook = {\n        ...row\n      }; // 复制选中的书籍数据到编辑模型\n      this.editDialogVisible = true; // 显示修改对话框\n    },\n    // 删除操作\n    async handleDelete(row) {\n      try {\n        const res = await request.delete(`/Book/Delete/${row.bookNo}`);\n        if (res.code === \"200\") {\n          this.$message.success(\"删除成功\");\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"删除失败\");\n      }\n    }\n  },\n  created() {\n    this.load(); // 初始化加载数据\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","account","bookNo","username","bookName","dueDate","sortOrder","autoSearch","methods","load","res","get","code","list","$message","error","handleInput","handleSearch","handleReset","handleSortChange","prop","order","handlePageChange","page","handleEdit","row","editBook","editDialogVisible","handleDelete","delete","success","created"],"sources":["src/views/borrow/BorrowList.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.bookName\"\r\n          placeholder=\"图书名称\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.bookNo\"\r\n          placeholder=\"书籍标准码\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.account\"\r\n          placeholder=\"用户账号\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.username\"\r\n          placeholder=\"用户名\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-date-picker\r\n          v-model=\"filters.dueDate\"\r\n          type=\"date\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          placeholder=\"借书到期时间\"\r\n          style=\"width: 200px;\"\r\n          @change=\"handleInput\"\r\n      />\r\n      <el-switch v-model=\"autoSearch\" @change=\"handleSearch\" />\r\n      <span class=\"auto-search-text\">自动搜索</span>\r\n      <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n      <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n    </el-row>\r\n\r\n    <!-- 书籍列表表格 -->\r\n    <el-table\r\n        :data=\"tableData\"\r\n        stripe\r\n        :default-sort=\"{ prop: 'bookNo', order: 'ascending' }\"\r\n        @sort-change=\"handleSortChange\"\r\n        row-key=\"id\"\r\n    >\r\n      <el-table-column type=\"expand\">\r\n        <template slot-scope=\"props\">\r\n          <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n            <el-form-item label=\"借书到期时间\">\r\n              <span>{{ props.row.dueDate || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"用户名\">\r\n              <span>{{ props.row.username || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"账号\">\r\n              <span>{{ props.row.account || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"创建时间\">\r\n              <span>{{ props.row.createTime || '暂无信息' }}</span>\r\n            </el-form-item>\r\n          </el-form>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 基本书籍信息列 -->\r\n      <el-table-column prop=\"id\" label=\"编号\" />\r\n      <el-table-column prop=\"name\" label=\"书名\" />\r\n      <el-table-column prop=\"bookNo\" label=\"书籍编号\" />\r\n      <el-table-column prop=\"score\" label=\"书籍积分\"/>\r\n      <el-table-column prop=\"account\" label=\"用户账号\" />\r\n      <el-table-column prop=\"username\" label=\"用户名\" />\r\n      <el-table-column prop=\"days\" label=\"借阅天数\" />\r\n      <el-table-column prop=\"dueDate\" label=\"借书到期时间\" sortable />\r\n      <el-table-column label=\"操作\" width=\"200px\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"success\"\r\n              icon=\"el-icon-edit\"\r\n              @click=\"handleEdit(scope.row)\"\r\n          >编辑</el-button>\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              @click=\"handleDelete(scope.row)\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport request from \"@/utils/request\"; // 请根据实际请求方式调整\r\n\r\nexport default {\r\n  name: \"BookList\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 存储借阅数据\r\n      total: 0,       // 数据总数\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 6,\r\n      },\r\n      filters: {\r\n        account: \"\",       // 用户账号\r\n        bookNo: \"\",        // 书籍编号\r\n        username: \"\",      // 用户名\r\n        bookName: \"\",      // 图书名称\r\n        dueDate: \"\",       // 借书到期时间\r\n        sortOrder: \"ascending\",  // 排序顺序\r\n      },\r\n      autoSearch: false,  // 控制是否开启自动搜索\r\n    };\r\n  },\r\n  methods: {\r\n    // 加载数据\r\n    async load() {\r\n      try {\r\n        const res = await request.get(\"/Borrow/Page\", {\r\n          params: { ...this.params, ...this.filters },\r\n        });\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n\r\n    // 处理输入变化并自动搜索\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.params.pageNum = 1;\r\n        this.load();\r\n      }\r\n    },\r\n\r\n    // 手动搜索按钮点击事件\r\n    handleSearch() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 重置搜索条件\r\n    handleReset() {\r\n      this.filters = {\r\n        account: \"\",\r\n        bookNo: \"\",\r\n        username: \"\",\r\n        bookName: \"\",\r\n        dueDate: \"\",\r\n        sortOrder: \"ascending\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 处理排序变化\r\n    handleSortChange({ prop, order }) {\r\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\r\n      this.load();\r\n    },\r\n\r\n    // 分页改变\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n\r\n    // 编辑操作\r\n    handleEdit(row) {\r\n      this.editBook = { ...row };  // 复制选中的书籍数据到编辑模型\r\n      this.editDialogVisible = true;  // 显示修改对话框\r\n    },\r\n\r\n    // 删除操作\r\n    async handleDelete(row) {\r\n      try {\r\n        const res = await request.delete(`/Book/Delete/${row.bookNo}`);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"删除成功\");\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"删除失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"删除失败\");\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.load();  // 初始化加载数据\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.auto-search-text {\r\n  font-size: 14px;\r\n  color: #333;\r\n  margin-right: 10px;\r\n}\r\n\r\n.book-container {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA8GA,OAAAA,OAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,KAAA;MAAA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,OAAA;QACAC,OAAA;QAAA;QACAC,MAAA;QAAA;QACAC,QAAA;QAAA;QACAC,QAAA;QAAA;QACAC,OAAA;QAAA;QACAC,SAAA;MACA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,KAAA;MACA;QACA,MAAAC,GAAA,SAAAlB,OAAA,CAAAmB,GAAA;UACAd,MAAA;YAAA,QAAAA,MAAA;YAAA,QAAAG;UAAA;QACA;QACA,IAAAU,GAAA,CAAAE,IAAA;UACA,KAAAjB,SAAA,GAAAe,GAAA,CAAAhB,IAAA,CAAAmB,IAAA;UACA,KAAAjB,KAAA,GAAAc,GAAA,CAAAhB,IAAA,CAAAE,KAAA;QACA;UACA,KAAAkB,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IAEA;IACAC,YAAA;MACA,SAAAT,UAAA;QACA,KAAAV,MAAA,CAAAC,OAAA;QACA,KAAAW,IAAA;MACA;IACA;IAEA;IACAQ,aAAA;MACA,KAAApB,MAAA,CAAAC,OAAA;MACA,KAAAW,IAAA;IACA;IAEA;IACAS,YAAA;MACA,KAAAlB,OAAA;QACAC,OAAA;QACAC,MAAA;QACAC,QAAA;QACAC,QAAA;QACAC,OAAA;QACAC,SAAA;MACA;MACA,KAAAT,MAAA,CAAAC,OAAA;MACA,KAAAW,IAAA;IACA;IAEA;IACAU,iBAAA;MAAAC,IAAA;MAAAC;IAAA;MACA,KAAArB,OAAA,CAAAM,SAAA,GAAAe,KAAA;MACA,KAAAZ,IAAA;IACA;IAEA;IACAa,iBAAAC,IAAA;MACA,KAAA1B,MAAA,CAAAC,OAAA,GAAAyB,IAAA;MACA,KAAAd,IAAA;IACA;IAEA;IACAe,WAAAC,GAAA;MACA,KAAAC,QAAA;QAAA,GAAAD;MAAA;MACA,KAAAE,iBAAA;IACA;IAEA;IACA,MAAAC,aAAAH,GAAA;MACA;QACA,MAAAf,GAAA,SAAAlB,OAAA,CAAAqC,MAAA,iBAAAJ,GAAA,CAAAvB,MAAA;QACA,IAAAQ,GAAA,CAAAE,IAAA;UACA,KAAAE,QAAA,CAAAgB,OAAA;UACA,KAAArB,IAAA;QACA;UACA,KAAAK,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;EACA;EACAgB,QAAA;IACA,KAAAtB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}