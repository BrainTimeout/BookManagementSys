{"ast":null,"code":"import request from \"@/utils/request\"; // 请根据你的实际请求方式调整\n\nexport default {\n  name: \"BookList\",\n  data() {\n    return {\n      tableData: [],\n      // 存储书籍数据\n      total: 0,\n      // 数据总数\n      params: {\n        pageNum: 1,\n        pageSize: 10\n      },\n      filters: {\n        name: \"\",\n        author: \"\",\n        publisher: \"\"\n      },\n      addDialogVisible: false,\n      // 控制添加书籍对话框显示与否\n      editDialogVisible: false,\n      // 控制编辑书籍对话框显示与否\n      newBook: {\n        name: \"\",\n        description: \"\",\n        publishDate: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        bookNo: \"\",\n        cover: \"\"\n      },\n      editBook: {\n        id: null,\n        name: \"\",\n        description: \"\",\n        publishDate: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        bookNo: \"\",\n        cover: \"\"\n      }\n    };\n  },\n  methods: {\n    // 加载数据\n    async load() {\n      try {\n        const res = await request.get(\"/book/list\", {\n          params: {\n            ...this.params,\n            ...this.filters\n          }\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    // 处理排序变化\n    handleSortChange({\n      prop,\n      order\n    }) {\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\n      this.load();\n    },\n    // 搜索\n    handleSearch() {\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 重置搜索条件\n    handleReset() {\n      this.filters = {\n        name: \"\",\n        author: \"\",\n        publisher: \"\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 分页改变\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    },\n    // 编辑操作\n    handleEdit(row) {\n      this.editBook = {\n        ...row\n      }; // 复制选中的书籍数据到编辑模型\n      this.editDialogVisible = true; // 显示修改对话框\n    },\n    // 删除操作\n    async handleDelete(row) {\n      try {\n        const res = await request.delete(`/book/delete/${row.id}`);\n        if (res.code === \"200\") {\n          this.$message.success(\"删除成功\");\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"删除失败\");\n      }\n    },\n    // 打开添加书籍的对话框\n    openAddDialog() {\n      this.newBook = {\n        // 清空添加表单数据\n        name: \"\",\n        description: \"\",\n        publishDate: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        bookNo: \"\",\n        cover: \"\"\n      };\n      this.addDialogVisible = true; // 打开添加对话框\n    },\n    // 添加新书籍\n    async handleAddBook() {\n      try {\n        const res = await request.post(\"/book/add\", this.newBook);\n        if (res.code === \"200\") {\n          this.$message.success(\"添加成功\");\n          this.addDialogVisible = false; // 关闭对话框\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"添加失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"添加失败\");\n      }\n    },\n    // 编辑书籍\n    async handleEditBook() {\n      try {\n        const res = await request.post(\"/book/update\", this.editBook);\n        if (res.code === \"200\") {\n          this.$message.success(\"编辑成功\");\n          this.editDialogVisible = false; // 关闭对话框\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"编辑失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"编辑失败\");\n      }\n    }\n  },\n  created() {\n    this.load(); // 初始化加载数据\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","author","publisher","addDialogVisible","editDialogVisible","newBook","description","publishDate","category","bookNo","cover","editBook","id","methods","load","res","get","code","list","$message","error","handleSortChange","prop","order","sortOrder","handleSearch","handleReset","handlePageChange","page","handleEdit","row","handleDelete","delete","success","openAddDialog","handleAddBook","post","handleEditBook","created"],"sources":["src/views/book/List.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.name\"\r\n          placeholder=\"书名\"\r\n          class=\"filter-input\"\r\n          @input=\"handleSearch\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.author\"\r\n          placeholder=\"作者\"\r\n          class=\"filter-input\"\r\n          @input=\"handleSearch\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.publisher\"\r\n          placeholder=\"出版社\"\r\n          class=\"filter-input\"\r\n          @input=\"handleSearch\"\r\n      />\r\n      <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n      <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n    </el-row>\r\n\r\n    <!-- 添加书籍 -->\r\n    <div class=\"add-book\">\r\n      <span class=\"add-book-text\" @click=\"openAddDialog\">+ 添加书籍</span>\r\n    </div>\r\n\r\n    <!-- 书籍列表表格 -->\r\n    <el-table\r\n        :data=\"tableData\"\r\n        stripe\r\n        :default-sort=\"{ prop: 'id', order: 'ascending' }\"\r\n        @sort-change=\"handleSortChange\"\r\n        row-key=\"id\"\r\n    >\r\n      <el-table-column prop=\"id\" label=\"书籍ID\" sortable />\r\n      <el-table-column prop=\"name\" label=\"书名\" />\r\n      <el-table-column prop=\"author\" label=\"作者\" />\r\n      <el-table-column prop=\"publisher\" label=\"出版社\" />\r\n      <el-table-column prop=\"category\" label=\"分类\" />\r\n      <el-table-column prop=\"publish_date\" label=\"出版日期\" />\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"success\"\r\n              icon=\"el-icon-edit\"\r\n              @click=\"handleEdit(scope.row)\"\r\n          >编辑</el-button>\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              @click=\"handleDelete(scope.row)\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 添加书籍对话框 -->\r\n    <el-dialog\r\n        title=\"添加新书籍\"\r\n        :visible.sync=\"addDialogVisible\"\r\n        width=\"50%\"\r\n    >\r\n      <el-form :model=\"newBook\" label-width=\"100px\">\r\n        <el-form-item label=\"书名\">\r\n          <el-input v-model=\"newBook.name\" placeholder=\"请输入书名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"newBook.description\" placeholder=\"请输入描述\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版日期\">\r\n          <el-input v-model=\"newBook.publishDate\" placeholder=\"请输入出版日期\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"作者\">\r\n          <el-input v-model=\"newBook.author\" placeholder=\"请输入作者\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版社\">\r\n          <el-input v-model=\"newBook.publisher\" placeholder=\"请输入出版社\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-input v-model=\"newBook.category\" placeholder=\"请输入分类\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"标准码\">\r\n          <el-input v-model=\"newBook.bookNo\" placeholder=\"请输入标准码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-input v-model=\"newBook.cover\" placeholder=\"请输入封面\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleAddBook\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 编辑书籍对话框 -->\r\n    <el-dialog\r\n        title=\"编辑书籍\"\r\n        :visible.sync=\"editDialogVisible\"\r\n        width=\"50%\"\r\n    >\r\n      <el-form :model=\"editBook\" label-width=\"100px\">\r\n        <el-form-item label=\"书名\">\r\n          <el-input v-model=\"editBook.name\" placeholder=\"请输入书名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"editBook.description\" placeholder=\"请输入描述\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版日期\">\r\n          <el-input v-model=\"editBook.publishDate\" placeholder=\"请输入出版日期\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"作者\">\r\n          <el-input v-model=\"editBook.author\" placeholder=\"请输入作者\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版社\">\r\n          <el-input v-model=\"editBook.publisher\" placeholder=\"请输入出版社\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-input v-model=\"editBook.category\" placeholder=\"请输入分类\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"标准码\">\r\n          <el-input v-model=\"editBook.bookNo\" placeholder=\"请输入标准码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-input v-model=\"editBook.cover\" placeholder=\"请输入封面\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleEditBook\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\"; // 请根据你的实际请求方式调整\r\n\r\nexport default {\r\n  name: \"BookList\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 存储书籍数据\r\n      total: 0,       // 数据总数\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      filters: {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n      },\r\n      addDialogVisible: false,  // 控制添加书籍对话框显示与否\r\n      editDialogVisible: false,  // 控制编辑书籍对话框显示与否\r\n      newBook: {\r\n        name: \"\",\r\n        description: \"\",\r\n        publishDate: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        bookNo: \"\",\r\n        cover: \"\",\r\n      },\r\n      editBook: {\r\n        id: null,\r\n        name: \"\",\r\n        description: \"\",\r\n        publishDate: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        bookNo: \"\",\r\n        cover: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 加载数据\r\n    async load() {\r\n      try {\r\n        const res = await request.get(\"/book/list\", {\r\n          params: { ...this.params, ...this.filters },\r\n        });\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n\r\n    // 处理排序变化\r\n    handleSortChange({ prop, order }) {\r\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\r\n      this.load();\r\n    },\r\n\r\n    // 搜索\r\n    handleSearch() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 重置搜索条件\r\n    handleReset() {\r\n      this.filters = {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 分页改变\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n\r\n    // 编辑操作\r\n    handleEdit(row) {\r\n      this.editBook = { ...row };  // 复制选中的书籍数据到编辑模型\r\n      this.editDialogVisible = true;  // 显示修改对话框\r\n    },\r\n\r\n    // 删除操作\r\n    async handleDelete(row) {\r\n      try {\r\n        const res = await request.delete(`/book/delete/${row.id}`);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"删除成功\");\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"删除失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"删除失败\");\r\n      }\r\n    },\r\n\r\n    // 打开添加书籍的对话框\r\n    openAddDialog() {\r\n      this.newBook = {  // 清空添加表单数据\r\n        name: \"\",\r\n        description: \"\",\r\n        publishDate: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        bookNo: \"\",\r\n        cover: \"\",\r\n      };\r\n      this.addDialogVisible = true;  // 打开添加对话框\r\n    },\r\n\r\n    // 添加新书籍\r\n    async handleAddBook() {\r\n      try {\r\n        const res = await request.post(\"/book/add\", this.newBook);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"添加成功\");\r\n          this.addDialogVisible = false;  // 关闭对话框\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"添加失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"添加失败\");\r\n      }\r\n    },\r\n\r\n    // 编辑书籍\r\n    async handleEditBook() {\r\n      try {\r\n        const res = await request.post(\"/book/update\", this.editBook);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"编辑成功\");\r\n          this.editDialogVisible = false;  // 关闭对话框\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"编辑失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"编辑失败\");\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.load();  // 初始化加载数据\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.book-container {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-book {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-book-text {\r\n  cursor: pointer;\r\n  color: #409eff;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}