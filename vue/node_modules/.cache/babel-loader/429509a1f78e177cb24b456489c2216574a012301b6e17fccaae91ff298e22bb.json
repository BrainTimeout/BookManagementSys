{"ast":null,"code":"export default {\n  name: \"BookView\",\n  data() {\n    return {\n      books: [],\n      // 存储书籍列表\n      filters: {\n        name: \"\",\n        author: \"\"\n      },\n      bookDialogVisible: false,\n      // 控制书籍详情对话框的显示\n      selectedBook: {},\n      // 当前选中的书籍\n      placeholderImage: \"https://via.placeholder.com/100x150?text=No+Image\" // 默认占位图\n    };\n  },\n  methods: {\n    // 加载书籍数据\n    loadBooks() {\n      // 模拟异步请求\n      this.books = [{\n        id: 1,\n        name: \"书籍1\",\n        author: \"作者1\",\n        publisher: \"出版社1\",\n        category: \"分类1\",\n        description: \"这是一本很有趣的书。\",\n        publishDate: \"2023-01-01\",\n        cover: \"https://via.placeholder.com/100x150\"\n      }, {\n        id: 2,\n        name: \"书籍2\",\n        author: \"作者2\",\n        publisher: \"出版社2\",\n        category: \"分类2\",\n        description: \"这是另一本很有趣的书。\",\n        publishDate: \"2023-02-01\",\n        cover: \"https://via.placeholder.com/100x150\"\n      }];\n    },\n    // 搜索处理\n    handleInput() {\n      // 这里可以实现自动搜索功能\n    },\n    handleSearch() {\n      console.log(\"搜索条件：\", this.filters);\n      this.loadBooks(); // 示例中直接重新加载\n    },\n    handleReset() {\n      this.filters = {\n        name: \"\",\n        author: \"\"\n      };\n      this.loadBooks();\n    },\n    // 打开书籍详情对话框\n    openBookDialog(book) {\n      this.selectedBook = book;\n      this.bookDialogVisible = true;\n    }\n  },\n  created() {\n    this.loadBooks();\n  }\n};","map":{"version":3,"names":["name","data","books","filters","author","bookDialogVisible","selectedBook","placeholderImage","methods","loadBooks","id","publisher","category","description","publishDate","cover","handleInput","handleSearch","console","log","handleReset","openBookDialog","book","created"],"sources":["src/views/book/Show.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-view-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.name\"\r\n          placeholder=\"书名\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.author\"\r\n          placeholder=\"作者\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n      <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n    </el-row>\r\n\r\n    <!-- 书籍封面展示区 -->\r\n    <div class=\"book-list\">\r\n      <div v-for=\"book in books\" :key=\"book.id\" class=\"book-item\" @click=\"openBookDialog(book)\">\r\n        <img :src=\"book.cover || placeholderImage\" alt=\"书籍封面\" class=\"book-cover\" />\r\n        <div class=\"book-title\">{{ book.name }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 书籍详情对话框 -->\r\n    <el-dialog title=\"书籍详情\" :visible.sync=\"bookDialogVisible\" width=\"50%\">\r\n      <el-form label-width=\"100px\">\r\n        <el-form-item label=\"书名\">\r\n          <span>{{ selectedBook.name }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"作者\">\r\n          <span>{{ selectedBook.author }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"出版社\">\r\n          <span>{{ selectedBook.publisher }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <span>{{ selectedBook.category }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <span>{{ selectedBook.description }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"出版日期\">\r\n          <span>{{ selectedBook.publishDate }}</span>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"bookDialogVisible = false\">关闭</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BookView\",\r\n  data() {\r\n    return {\r\n      books: [], // 存储书籍列表\r\n      filters: {\r\n        name: \"\",\r\n        author: \"\",\r\n      },\r\n      bookDialogVisible: false, // 控制书籍详情对话框的显示\r\n      selectedBook: {}, // 当前选中的书籍\r\n      placeholderImage: \"https://via.placeholder.com/100x150?text=No+Image\", // 默认占位图\r\n    };\r\n  },\r\n  methods: {\r\n    // 加载书籍数据\r\n    loadBooks() {\r\n      // 模拟异步请求\r\n      this.books = [\r\n        {\r\n          id: 1,\r\n          name: \"书籍1\",\r\n          author: \"作者1\",\r\n          publisher: \"出版社1\",\r\n          category: \"分类1\",\r\n          description: \"这是一本很有趣的书。\",\r\n          publishDate: \"2023-01-01\",\r\n          cover: \"https://via.placeholder.com/100x150\",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"书籍2\",\r\n          author: \"作者2\",\r\n          publisher: \"出版社2\",\r\n          category: \"分类2\",\r\n          description: \"这是另一本很有趣的书。\",\r\n          publishDate: \"2023-02-01\",\r\n          cover: \"https://via.placeholder.com/100x150\",\r\n        },\r\n      ];\r\n    },\r\n    // 搜索处理\r\n    handleInput() {\r\n      // 这里可以实现自动搜索功能\r\n    },\r\n    handleSearch() {\r\n      console.log(\"搜索条件：\", this.filters);\r\n      this.loadBooks(); // 示例中直接重新加载\r\n    },\r\n    handleReset() {\r\n      this.filters = {\r\n        name: \"\",\r\n        author: \"\",\r\n      };\r\n      this.loadBooks();\r\n    },\r\n    // 打开书籍详情对话框\r\n    openBookDialog(book) {\r\n      this.selectedBook = book;\r\n      this.bookDialogVisible = true;\r\n    },\r\n  },\r\n  created() {\r\n    this.loadBooks();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.book-view-container {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.book-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n\r\n.book-item {\r\n  width: 150px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.book-cover {\r\n  width: 100px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.book-title {\r\n  font-size: 14px;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":"AA0DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MAAA;MACAC,OAAA;QACAH,IAAA;QACAI,MAAA;MACA;MACAC,iBAAA;MAAA;MACAC,YAAA;MAAA;MACAC,gBAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,UAAA;MACA;MACA,KAAAP,KAAA,IACA;QACAQ,EAAA;QACAV,IAAA;QACAI,MAAA;QACAO,SAAA;QACAC,QAAA;QACAC,WAAA;QACAC,WAAA;QACAC,KAAA;MACA,GACA;QACAL,EAAA;QACAV,IAAA;QACAI,MAAA;QACAO,SAAA;QACAC,QAAA;QACAC,WAAA;QACAC,WAAA;QACAC,KAAA;MACA,EACA;IACA;IACA;IACAC,YAAA;MACA;IAAA,CACA;IACAC,aAAA;MACAC,OAAA,CAAAC,GAAA,eAAAhB,OAAA;MACA,KAAAM,SAAA;IACA;IACAW,YAAA;MACA,KAAAjB,OAAA;QACAH,IAAA;QACAI,MAAA;MACA;MACA,KAAAK,SAAA;IACA;IACA;IACAY,eAAAC,IAAA;MACA,KAAAhB,YAAA,GAAAgB,IAAA;MACA,KAAAjB,iBAAA;IACA;EACA;EACAkB,QAAA;IACA,KAAAd,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}