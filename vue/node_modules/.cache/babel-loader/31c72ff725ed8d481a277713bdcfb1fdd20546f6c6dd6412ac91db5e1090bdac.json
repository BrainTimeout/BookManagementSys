{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from 'js-cookie';\nimport request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      userProfile: {\n        account: \"\",\n        username: '',\n        age: '',\n        sex: '',\n        address: '',\n        phone: '',\n        email: '',\n        introduce: ''\n      },\n      avatarUrl: `${request.defaults.baseURL}/File/Download/Avatar/default.jpg`,\n      logo: require(\"@/assets/images/captcha.png\"),\n      avatarUploadUrl: ``,\n      // 完整的上传路径\n      newPassword: \"\",\n      // 新密码\n      confirmPassword: \"\",\n      // 确认新密码\n      dropdownVisible: false,\n      sidebarVisible: true,\n      userInfoDialogVisible: false,\n      changePasswordDialogVisible: false\n    };\n  },\n  mounted() {\n    // 从cookie中读取authInfo并解析\n    const authInfo = Cookies.get('authInfo');\n    if (authInfo) {\n      const loginData = JSON.parse(authInfo); // 假设cookie中存储的是JSON字符串\n      this.userProfile = loginData.userProfile || {};\n      this.avatarUploadUrl = `${request.defaults.baseURL}/File/Upload/Avatar/${this.userProfile.account}.jpg`;\n      this.avatarUrl = `${request.defaults.baseURL}/File/Download/Avatar/${this.userProfile.account}.jpg`;\n    }\n  },\n  methods: {\n    toggleSidebar() {\n      this.sidebarVisible = !this.sidebarVisible;\n    },\n    toggleDropdown() {\n      this.dropdownVisible = !this.dropdownVisible;\n    },\n    showUserInfoDialog() {\n      this.userInfoDialogVisible = true;\n    },\n    // 上传头像前的处理（例如限制文件类型）\n    beforeAvatarUpload(file) {\n      const isImage = file.type.startsWith('image/');\n      if (!isImage) {\n        this.$message.error('只能上传图片文件！');\n      }\n      return isImage;\n    },\n    // 处理头像上传后的变更\n    handleAvatarChange(file) {},\n    // 上传成功后的回调\n    handleAvatarSuccess(response) {\n      this.avatarUrl = `${request.defaults.baseURL}/File/Download/Avatar/${this.userProfile.account}.jpg?time=${new Date().getTime()}`;\n    },\n    // 上传失败的回调\n    handleAvatarError(error, file, fileList) {\n      this.$message.error('头像上传失败');\n    },\n    async saveUserInfo() {\n      try {\n        const res = await request.put(\"/UserProfile/Update\", this.userProfile);\n        if (res.code === \"200\") {\n          this.$message.success(\"用户信息已更新！\");\n        } else {\n          this.$message.error(res.msg);\n        }\n      } catch (error) {\n        this.$message.error(\"用户信息更新失败\");\n      }\n      this.userInfoDialogVisible = false;\n    },\n    showChangePasswordDialog() {\n      this.changePasswordDialogVisible = true;\n    },\n    async changePassword() {\n      if (this.newPassword === this.confirmPassword) {\n        // 检查密码强度，简单示例\n        if (this.newPassword.length < 6) {\n          this.$message.error('密码长度必须大于等于6位');\n          return;\n        }\n        try {\n          // 假设后端的密码修改接口为 PUT 请求\n          const res = await request.put(\"/User/UpdatePassword\", {\n            account: this.userProfile.account,\n            password: this.newPassword\n          });\n          if (res.code === \"200\") {\n            this.$message.success('密码修改成功');\n            Cookies.remove('authInfo');\n            await this.$router.push('/login'); // 退出登录，跳转到登录页\n          } else {\n            this.$message.error(res.msg);\n          }\n        } catch (error) {\n          this.$message.error('密码修改失败');\n        }\n      } else {\n        this.$message.error('两次输入的密码不一致');\n      }\n    },\n    logout() {\n      Cookies.remove('authInfo');\n      this.$router.push('/login'); // 退出登录，跳转到登录页\n    }\n  }\n};","map":{"version":3,"names":["Cookies","request","data","userProfile","account","username","age","sex","address","phone","email","introduce","avatarUrl","defaults","baseURL","logo","require","avatarUploadUrl","newPassword","confirmPassword","dropdownVisible","sidebarVisible","userInfoDialogVisible","changePasswordDialogVisible","mounted","authInfo","get","loginData","JSON","parse","methods","toggleSidebar","toggleDropdown","showUserInfoDialog","beforeAvatarUpload","file","isImage","type","startsWith","$message","error","handleAvatarChange","handleAvatarSuccess","response","Date","getTime","handleAvatarError","fileList","saveUserInfo","res","put","code","success","msg","showChangePasswordDialog","changePassword","length","password","remove","$router","push","logout"],"sources":["src/views/layout/User.vue"],"sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <div class=\"left-content\" :class=\"{ visible: sidebarVisible }\">\r\n      <div class=\"sidebar-header\">\r\n        <img :src=\"logo\" alt=\"Logo\" class=\"sidebar-logo\" />\r\n        <span class=\"sidebar-title\">图书馆管理系统</span>\r\n      </div>\r\n      <el-menu :default-active=\"$route.path\" :default-openeds=\"['1','2','3']\" router class=\"el-menu-demo\">\r\n        <el-menu-item index=\"/\">\r\n          <i class=\"mdi mdi-home\"></i>\r\n          <span>首页</span>\r\n        </el-menu-item>\r\n        <el-menu-item index=\"/bookShow\">\r\n          <i class=\"mdi mdi-home\"></i>\r\n          <span>书籍阅览</span>\r\n        </el-menu-item>\r\n        <el-menu-item :index=\"`/currentBorrow/${userProfile.account}`\">\r\n          <i class=\"mdi mdi-home\"></i>\r\n          <span>当前借阅</span>\r\n        </el-menu-item>\r\n\r\n      </el-menu>\r\n    </div>\r\n    <div class=\"right-content\" :class=\"{ shifted: sidebarVisible }\">\r\n      <header class=\"header\">\r\n        <button @click=\"toggleSidebar\" class=\"sidebar-toggle\">\r\n          <span :class=\"sidebarVisible ? 'mdi mdi-menu-open' : 'mdi mdi-menu'\"></span>\r\n          <span class=\"button-text\">菜单</span>\r\n        </button>\r\n        <div class=\"user-info\" @click=\"toggleDropdown\">\r\n          <img :src=\"avatarUrl\" alt=\"Avatar\" class=\"avatar\" />\r\n          <span class=\"username\">{{ userProfile.username }}</span>\r\n          <span :class=\"dropdownVisible ? 'mdi mdi-menu-down' : 'mdi mdi-menu-up'\"></span>\r\n        </div>\r\n      </header>\r\n      <main class=\"main\">\r\n        <router-view/>\r\n        <div v-if=\"dropdownVisible\" class=\"dropdown\">\r\n          <ul>\r\n            <li @click=\"showUserInfoDialog\"><i class=\"mdi mdi-account-circle\"></i> 个人信息</li>\r\n            <li @click=\"showChangePasswordDialog\"><i class=\"mdi mdi-lock\"></i> 修改密码</li>\r\n            <li @click=\"logout\"><i class=\"mdi mdi-logout\"></i> 退出登录</li>\r\n          </ul>\r\n        </div>\r\n      </main>\r\n    </div>\r\n    <!-- 个人信息对话框 -->\r\n    <el-dialog title=\"个人信息\" :visible.sync=\"userInfoDialogVisible\" width=\"50%\">\r\n      <div class=\"avatar-container\">\r\n        <!-- 头像 -->\r\n        <el-upload\r\n            class=\"avatar-uploader\"\r\n            :action=\"avatarUploadUrl\"\r\n            :show-file-list=\"false\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n            :on-change=\"handleAvatarChange\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :on-error=\"handleAvatarError\"\r\n        >\r\n          <img :src=\"avatarUrl\" class=\"avatar\" />\r\n          <span class=\"upload-text\">点击上传头像</span>\r\n        </el-upload>\r\n      </div>\r\n\r\n      <el-form :model=\"userProfile\" label-width=\"100px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"userProfile.username\" :style=\"{ width: '30%' }\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\">\r\n          <el-input v-model=\"userProfile.age\" :style=\"{ width: '20%' }\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\">\r\n          <el-select v-model=\"userProfile.sex\" :style=\"{ width: '20%' }\">\r\n            <el-option label=\"男\" value=\"male\" />\r\n            <el-option label=\"女\" value=\"female\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"地址\">\r\n          <el-input v-model=\"userProfile.address\" :style=\"{ width: '45%' }\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\">\r\n          <el-input v-model=\"userProfile.phone\" :style=\"{ width: '45%' }\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"userProfile.email\" :style=\"{ width: '45%' }\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"简介\">\r\n          <el-input type=\"textarea\" v-model=\"userProfile.introduce\" :style=\"{ width: '90%' }\" rows=\"4\" />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"userInfoDialogVisible = false\">关闭</el-button>\r\n        <el-button type=\"primary\" @click=\"saveUserInfo\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"修改密码\" :visible.sync=\"changePasswordDialogVisible\" width=\"30%\">\r\n      <div>\r\n        <!-- 旧密码 -->\r\n        <el-input v-model=\"oldPassword\" placeholder=\"请输入旧密码\" type=\"password\"></el-input>\r\n        <!-- 新密码 -->\r\n        <el-input v-model=\"newPassword\" placeholder=\"请输入新密码\" type=\"password\"></el-input>\r\n        <!-- 确认新密码 -->\r\n        <el-input v-model=\"confirmPassword\" placeholder=\"确认新密码\" type=\"password\"></el-input>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"changePasswordDialogVisible = false\">取消</el-button>\r\n    <el-button type=\"primary\" @click=\"changePassword\">确定</el-button>\r\n  </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport Cookies from 'js-cookie';\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userProfile: {\r\n        account:\"\",\r\n        username: '',\r\n        age: '',\r\n        sex: '',\r\n        address: '',\r\n        phone: '',\r\n        email: '',\r\n        introduce: '',\r\n      },\r\n      avatarUrl: `${request.defaults.baseURL}/File/Download/Avatar/default.jpg`,\r\n      logo: require(\"@/assets/images/captcha.png\"),\r\n      avatarUploadUrl: ``, // 完整的上传路径\r\n      newPassword: \"\", // 新密码\r\n      confirmPassword: \"\", // 确认新密码\r\n      dropdownVisible: false,\r\n      sidebarVisible: true,\r\n      userInfoDialogVisible: false,\r\n      changePasswordDialogVisible: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    // 从cookie中读取authInfo并解析\r\n    const authInfo = Cookies.get('authInfo');\r\n    if (authInfo) {\r\n      const loginData = JSON.parse(authInfo); // 假设cookie中存储的是JSON字符串\r\n      this.userProfile = loginData.userProfile || {};\r\n      this.avatarUploadUrl = `${request.defaults.baseURL}/File/Upload/Avatar/${this.userProfile.account}.jpg`;\r\n      this.avatarUrl =  `${request.defaults.baseURL}/File/Download/Avatar/${this.userProfile.account}.jpg`;\r\n    }\r\n  },\r\n  methods: {\r\n    toggleSidebar() { this.sidebarVisible = !this.sidebarVisible; },\r\n    toggleDropdown() { this.dropdownVisible = !this.dropdownVisible; },\r\n    showUserInfoDialog() {\r\n      this.userInfoDialogVisible = true;\r\n    },\r\n    // 上传头像前的处理（例如限制文件类型）\r\n    beforeAvatarUpload(file) {\r\n      const isImage = file.type.startsWith('image/');\r\n      if (!isImage) {\r\n        this.$message.error('只能上传图片文件！');\r\n      }\r\n      return isImage;\r\n    },\r\n\r\n    // 处理头像上传后的变更\r\n    handleAvatarChange(file) {\r\n\r\n    },\r\n    // 上传成功后的回调\r\n    handleAvatarSuccess(response) {\r\n      this.avatarUrl = `${request.defaults.baseURL}/File/Download/Avatar/${this.userProfile.account}.jpg?time=${new Date().getTime()}`;\r\n    },\r\n\r\n    // 上传失败的回调\r\n    handleAvatarError(error, file, fileList) {\r\n      this.$message.error('头像上传失败');\r\n    },\r\n    async saveUserInfo() {\r\n      try {\r\n        const res = await request.put(\"/UserProfile/Update\", this.userProfile);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"用户信息已更新！\");\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"用户信息更新失败\");\r\n      }\r\n      this.userInfoDialogVisible = false;\r\n    },\r\n    showChangePasswordDialog() {\r\n      this.changePasswordDialogVisible = true;\r\n    },\r\n    async changePassword() {\r\n      if (this.newPassword === this.confirmPassword) {\r\n        // 检查密码强度，简单示例\r\n        if (this.newPassword.length < 6) {\r\n          this.$message.error('密码长度必须大于等于6位');\r\n          return;\r\n        }\r\n\r\n        try {\r\n          // 假设后端的密码修改接口为 PUT 请求\r\n          const res = await request.put(\"/User/UpdatePassword\", {\r\n            account: this.userProfile.account,\r\n            password: this.newPassword\r\n          });\r\n\r\n          if (res.code === \"200\") {\r\n            this.$message.success('密码修改成功');\r\n            Cookies.remove('authInfo');\r\n            await this.$router.push('/login'); // 退出登录，跳转到登录页\r\n          } else {\r\n            this.$message.error(res.msg);\r\n          }\r\n        } catch (error) {\r\n          this.$message.error('密码修改失败');\r\n        }\r\n      } else {\r\n        this.$message.error('两次输入的密码不一致');\r\n      }\r\n    },\r\n    logout() {\r\n      Cookies.remove('authInfo');\r\n      this.$router.push('/login'); // 退出登录，跳转到登录页\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.left-content {\r\n  width: 15%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #f4f4f4;\r\n  height: 100%;\r\n  transform: translateX(-100%);\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.left-content.visible { transform: translateX(0); }\r\n\r\n.sidebar-header, .header {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n}\r\n\r\n.sidebar-header { height: 10%; border-bottom: 1px solid #ddd; }\r\n\r\n.sidebar-logo {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.sidebar-title { font-size: 18px; font-weight: bold; color: #333; }\r\n\r\n.avatar-container {\r\n  position: absolute;\r\n  top: 10%;  /* 头像稍微上移，距离顶部10% */\r\n  right: 10%;  /* 头像稍微向左移动，距离左边10% */\r\n  z-index: 10;\r\n}\r\n\r\n.avatar-uploader img{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  width: 180px;  /* 增大头像的宽度 */\r\n  height: 180px;  /* 增大头像的高度 */\r\n  border-radius: 50%;\r\n  border: 2px solid #ddd;\r\n  background-color: #f5f5f5;\r\n  position: relative;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n\r\n.upload-text {\r\n  position: absolute;\r\n  color: #999;\r\n  font-size: 14px;  /* 稍微增大文字的字体 */\r\n  top: 180px;\r\n  right: 50px;\r\n  text-align: center;\r\n}\r\n\r\n\r\n.right-content {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: margin-left 0.3s ,width 0.3s;\r\n}\r\n\r\n.right-content.shifted {\r\n  margin-left: 15%;\r\n  width: 85%;\r\n}\r\n\r\n.header {\r\n  background-color: #e0e0e0;\r\n  justify-content: flex-start;\r\n  height: 10%;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  cursor: pointer;\r\n}\r\n\r\n.avatar {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 15px;\r\n}\r\n\r\n.username { margin-right: 10px; font-size: 18px; color: #333; }\r\n\r\n.mdi { font-size: 24px; }\r\n\r\n.sidebar-toggle {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar-toggle .mdi { margin-right: 8px; font-size: 24px; }\r\n\r\n.dropdown {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  width: 150px;\r\n  z-index: 10;\r\n}\r\n\r\n.dropdown ul {\r\n  list-style: none;\r\n  padding: 10px 0;\r\n  margin: 0;\r\n}\r\n\r\n.dropdown li {\r\n  padding: 10px;\r\n  font-size: 17px;\r\n  color: #333;\r\n  cursor: pointer;\r\n}\r\n\r\n.dropdown li:hover { background-color: #f0f0f0; }\r\n\r\n.main { flex-grow: 1; background-color: #fff; }\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}