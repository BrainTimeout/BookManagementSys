{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"UserJoin\",\n  data() {\n    return {\n      userForm: {\n        account: \"\",\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        usertype: \"\",\n        // admin 或 user\n        age: null,\n        gender: \"\",\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n        introduce: \"\"\n      },\n      formItems: [{\n        label: \"账号\",\n        prop: \"account\",\n        rules: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        component: \"el-input\",\n        placeholder: \"请输入账号\"\n      }, {\n        label: \"用户名\",\n        prop: \"username\",\n        rules: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        component: \"el-input\",\n        placeholder: \"请输入用户名\"\n      }, {\n        label: \"密码\",\n        prop: \"password\",\n        rules: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        component: \"el-input\",\n        placeholder: \"请输入密码\",\n        type: \"password\"\n      }, {\n        label: \"确认密码\",\n        prop: \"confirmPassword\",\n        rules: [{\n          required: true,\n          message: '请确认密码',\n          trigger: 'blur'\n        }, {\n          validator: this.validateConfirmPassword,\n          trigger: 'blur'\n        }],\n        component: \"el-input\",\n        placeholder: \"请再次输入密码\",\n        type: \"password\"\n      }, {\n        label: \"账户类型\",\n        prop: \"usertype\",\n        rules: [{\n          required: true,\n          message: '请选择账户类型',\n          trigger: 'change'\n        }],\n        component: \"el-select\",\n        placeholder: \"请选择账户类型\",\n        options: [{\n          label: \"管理员\",\n          value: \"admin\"\n        }, {\n          label: \"用户\",\n          value: \"user\"\n        }]\n      }, {\n        label: \"年龄\",\n        prop: \"age\",\n        component: \"el-input\",\n        placeholder: \"请输入年龄\",\n        type: \"number\"\n      }, {\n        label: \"性别\",\n        prop: \"gender\",\n        component: \"el-select\",\n        placeholder: \"请选择性别\",\n        options: [{\n          label: \"男\",\n          value: \"male\"\n        }, {\n          label: \"女\",\n          value: \"female\"\n        }]\n      }, {\n        label: \"地址\",\n        prop: \"address\",\n        component: \"el-input\",\n        placeholder: \"请输入地址\"\n      }, {\n        label: \"电话\",\n        prop: \"phone\",\n        component: \"el-input\",\n        placeholder: \"请输入电话\"\n      }, {\n        label: \"邮箱\",\n        prop: \"email\",\n        component: \"el-input\",\n        placeholder: \"请输入邮箱\"\n      }, {\n        label: \"简介\",\n        prop: \"introduce\",\n        component: \"el-input\",\n        placeholder: \"请输入简介\",\n        type: \"textarea\"\n      }]\n    };\n  },\n  methods: {\n    // 二次密码确认的验证方法\n    validateConfirmPassword(rule, value, callback) {\n      if (value !== this.userForm.password) {\n        callback(new Error(\"两次输入的密码不一致\"));\n      } else {\n        callback();\n      }\n    },\n    async handleSubmit() {\n      try {\n        // 验证表单\n        const isValid = await this.$refs.userForm.validate();\n        if (!isValid) return;\n\n        // 构建封装对象\n        const joinRequest = {\n          login: {\n            account: this.userForm.account,\n            password: this.userForm.password,\n            usertype: this.userForm.usertype\n          },\n          user: {\n            account: this.userForm.account,\n            username: this.userForm.username,\n            age: this.userForm.age,\n            sex: this.userForm.gender,\n            phone: this.userForm.phone,\n            address: this.userForm.address,\n            email: this.userForm.email,\n            introduce: this.userForm.introduce\n          }\n        };\n\n        // 提交数据\n        const res = await request.post(\"/Join\", joinRequest);\n        if (res.code === \"200\") {\n          this.$message.success(res.msg);\n          this.$router.push({\n            name: \"UserList\"\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      } catch (error) {\n        this.$message.error(\"提交失败\");\n      }\n    },\n    handleReset() {\n      this.$refs.userForm.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","userForm","account","username","password","confirmPassword","usertype","age","gender","address","phone","email","introduce","formItems","label","prop","rules","required","message","trigger","component","placeholder","type","validator","validateConfirmPassword","options","value","methods","rule","callback","Error","handleSubmit","isValid","$refs","validate","joinRequest","login","user","sex","res","post","code","$message","success","msg","$router","push","error","handleReset","resetFields"],"sources":["src/views/user/UserJoin.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-join-container\">\r\n    <el-form :model=\"userForm\" ref=\"userForm\" label-width=\"120px\" class=\"user-form\">\r\n      <!-- 表单项模板 -->\r\n      <el-form-item v-for=\"(item, index) in formItems\" :key=\"index\" :label=\"item.label\" :prop=\"item.prop\" :rules=\"item.rules\">\r\n        <component\r\n            :is=\"item.component\"\r\n            v-model=\"userForm[item.prop]\"\r\n            :placeholder=\"item.placeholder\"\r\n            :type=\"item.type\"\r\n        >\r\n          <el-option v-if=\"item.options\" v-for=\"(option, i) in item.options\" :key=\"i\" :label=\"option.label\" :value=\"option.value\"></el-option>\r\n        </component>\r\n      </el-form-item>\r\n\r\n      <!-- 提交与重置按钮 -->\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">提交</el-button>\r\n        <el-button @click=\"handleReset\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"UserJoin\",\r\n  data() {\r\n    return {\r\n      userForm: {\r\n        account: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        usertype: \"\", // admin 或 user\r\n        age: null,\r\n        gender: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        introduce: \"\"\r\n      },\r\n      formItems: [\r\n        { label: \"账号\", prop: \"account\", rules: [{ required: true, message: '请输入账号', trigger: 'blur' }], component: \"el-input\", placeholder: \"请输入账号\" },\r\n        { label: \"用户名\", prop: \"username\", rules: [{ required: true, message: '请输入用户名', trigger: 'blur' }], component: \"el-input\", placeholder: \"请输入用户名\" },\r\n        { label: \"密码\", prop: \"password\", rules: [{ required: true, message: '请输入密码', trigger: 'blur' }], component: \"el-input\", placeholder: \"请输入密码\", type: \"password\" },\r\n        { label: \"确认密码\", prop: \"confirmPassword\", rules: [{ required: true, message: '请确认密码', trigger: 'blur' }, { validator: this.validateConfirmPassword, trigger: 'blur' }], component: \"el-input\", placeholder: \"请再次输入密码\", type: \"password\" },\r\n        {\r\n          label: \"账户类型\", prop: \"usertype\", rules: [{ required: true, message: '请选择账户类型', trigger: 'change' }],\r\n          component: \"el-select\", placeholder: \"请选择账户类型\", options: [\r\n            { label: \"管理员\", value: \"admin\" },\r\n            { label: \"用户\", value: \"user\" }\r\n          ]\r\n        },\r\n        { label: \"年龄\", prop: \"age\", component: \"el-input\", placeholder: \"请输入年龄\", type: \"number\" },\r\n        {\r\n          label: \"性别\", prop: \"gender\", component: \"el-select\", placeholder: \"请选择性别\", options: [\r\n            { label: \"男\", value: \"male\" },\r\n            { label: \"女\", value: \"female\" }\r\n          ]\r\n        },\r\n        { label: \"地址\", prop: \"address\", component: \"el-input\", placeholder: \"请输入地址\" },\r\n        { label: \"电话\", prop: \"phone\", component: \"el-input\", placeholder: \"请输入电话\" },\r\n        { label: \"邮箱\", prop: \"email\", component: \"el-input\", placeholder: \"请输入邮箱\" },\r\n        { label: \"简介\", prop: \"introduce\", component: \"el-input\", placeholder: \"请输入简介\", type: \"textarea\" }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    // 二次密码确认的验证方法\r\n    validateConfirmPassword(rule, value, callback) {\r\n      if (value !== this.userForm.password) {\r\n        callback(new Error(\"两次输入的密码不一致\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n\r\n    async handleSubmit() {\r\n      try {\r\n        // 验证表单\r\n        const isValid = await this.$refs.userForm.validate();\r\n        if (!isValid) return;\r\n\r\n        // 构建封装对象\r\n        const joinRequest = {\r\n          login: {\r\n            account: this.userForm.account,\r\n            password: this.userForm.password,\r\n            usertype: this.userForm.usertype\r\n          },\r\n          user: {\r\n            account: this.userForm.account,\r\n            username: this.userForm.username,\r\n            age: this.userForm.age,\r\n            sex: this.userForm.gender,\r\n            phone: this.userForm.phone,\r\n            address: this.userForm.address,\r\n            email: this.userForm.email,\r\n            introduce: this.userForm.introduce\r\n          }\r\n        };\r\n\r\n        // 提交数据\r\n        const res = await request.post(\"/Join\", joinRequest);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(res.msg);\r\n          this.$router.push({ name: \"UserList\" });\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"提交失败\");\r\n      }\r\n    },\r\n    handleReset() {\r\n      this.$refs.userForm.resetFields();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-join-container {\r\n  width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.user-form {\r\n  padding: 20px;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}