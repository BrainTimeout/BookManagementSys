{"ast":null,"code":"import request from \"@/utils/request\"; // 假设你使用的是 axios\n\nexport default {\n  name: 'UserManage',\n  data() {\n    return {\n      tableData: [],\n      // 数据\n      total: 0,\n      // 总条数\n      params: {\n        pageNum: 1,\n        // 当前页\n        pageSize: 12 // 每页条数\n      }\n    };\n  },\n  methods: {\n    load() {\n      // 请求所有用户数据\n      const searchParams = {\n        ...this.params\n      };\n      request.get('/user/list', {\n        params: searchParams\n      }) // 假设后台接口是 `/user/list`\n      .then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error('加载数据失败');\n        }\n      }).catch(() => this.$message.error('加载数据失败'));\n    },\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    }\n  },\n  created() {\n    this.load(); // 初始加载数据\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","methods","load","searchParams","get","then","res","code","list","$message","error","catch","handlePageChange","page","created"],"sources":["src/views/user/UserManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe>\r\n      <el-table-column prop=\"userid\" label=\"用户ID\" />\r\n      <el-table-column prop=\"account\" label=\"账户\" />\r\n      <el-table-column prop=\"username\" label=\"用户名\" />\r\n      <el-table-column prop=\"age\" label=\"年龄\" />\r\n      <el-table-column prop=\"sex\" label=\"性别\" />\r\n      <el-table-column prop=\"address\" label=\"地址\" />\r\n      <el-table-column prop=\"email\" label=\"邮箱\" />\r\n      <el-table-column prop=\"phone\" label=\"电话\" />\r\n      <el-table-column prop=\"introduce\" label=\"介绍\" />\r\n      <el-table-column prop=\"creatime\" label=\"创建时间\" />\r\n      <el-table-column prop=\"updatetime\" label=\"更新时间\" />\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 空数据提示 -->\r\n    <div v-if=\"tableData.length === 0\" class=\"no-data\">\r\n      <p>没有找到相关数据</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";  // 假设你使用的是 axios\r\n\r\nexport default {\r\n  name: 'UserManage',\r\n  data() {\r\n    return {\r\n      tableData: [],  // 数据\r\n      total: 0,  // 总条数\r\n      params: {\r\n        pageNum: 1,  // 当前页\r\n        pageSize: 12,  // 每页条数\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    load() {\r\n      // 请求所有用户数据\r\n      const searchParams = { ...this.params };\r\n      request.get('/user/list', { params: searchParams })  // 假设后台接口是 `/user/list`\r\n          .then(res => {\r\n            if (res.code === '200') {\r\n              this.tableData = res.data.list;\r\n              this.total = res.data.total;\r\n            } else {\r\n              this.$message.error('加载数据失败');\r\n            }\r\n          })\r\n          .catch(() => this.$message.error('加载数据失败'));\r\n    },\r\n\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n  },\r\n  created() {\r\n    this.load();  // 初始加载数据\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  padding: 10px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #888;\r\n}\r\n</style>\r\n"],"mappings":"AAmCA,OAAAA,OAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,KAAA;MAAA;MACAC,MAAA;QACAC,OAAA;QAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA;MACA,MAAAC,YAAA;QAAA,QAAAL;MAAA;MACAL,OAAA,CAAAW,GAAA;QAAAN,MAAA,EAAAK;MAAA;MAAA,CACAE,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAX,SAAA,GAAAU,GAAA,CAAAX,IAAA,CAAAa,IAAA;UACA,KAAAX,KAAA,GAAAS,GAAA,CAAAX,IAAA,CAAAE,KAAA;QACA;UACA,KAAAY,QAAA,CAAAC,KAAA;QACA;MACA,GACAC,KAAA,YAAAF,QAAA,CAAAC,KAAA;IACA;IAEAE,iBAAAC,IAAA;MACA,KAAAf,MAAA,CAAAC,OAAA,GAAAc,IAAA;MACA,KAAAX,IAAA;IACA;EACA;EACAY,QAAA;IACA,KAAAZ,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}