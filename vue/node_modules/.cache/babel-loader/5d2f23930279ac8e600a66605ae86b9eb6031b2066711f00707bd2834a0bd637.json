{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"UserManage\",\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      params: {\n        pageNum: 1,\n        pageSize: 12\n      },\n      filters: {\n        account: \"\",\n        username: \"\",\n        age: \"\",\n        sex: null,\n        address: \"\",\n        phone: \"\",\n        detail: \"\"\n      },\n      autoSearch: false,\n      editDialogVisible: false,\n      // 控制对话框显示\n      editForm: {\n        userid: \"\",\n        // 用户ID\n        account: \"\",\n        // 账户\n        username: \"\",\n        // 用户名\n        age: \"\",\n        // 年龄\n        sex: \"\",\n        // 性别\n        address: \"\",\n        // 地址\n        phone: \"\",\n        // 电话\n        introduce: \"\",\n        // 简介\n        isNew: false // 新增标识\n      }\n    };\n  },\n  watch: {\n    \"params.pageNum\"(newPage) {\n      this.load();\n    },\n    \"params.pageSize\"(newSize) {\n      this.load();\n    }\n  },\n  methods: {\n    async load() {\n      try {\n        const searchParams = {\n          ...this.params,\n          ...this.filters\n        };\n        const res = await request.get(\"/user/InfoPage\", {\n          params: searchParams\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    async update() {\n      try {\n        const res = await request.post(\"/user/UpdateInfo\", {\n          params: this.editForm\n        });\n        if (res.code === \"200\") {\n          this.$message.success(\"用户信息已更新！\");\n        } else {\n          this.$message.error(\"用户信息更新失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"用户信息更新失败\");\n      }\n    },\n    async add() {\n      try {\n        const res = await request.post(\"/user/AddInfo\", {\n          params: this.editForm\n        });\n        if (res.code === \"200\") {\n          this.$message.success(\"用户已添加！\");\n        } else {\n          this.$message.error(\"添加用户失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"添加用户失败\");\n      }\n    },\n    handleSearch() {\n      this.load();\n    },\n    handleReset() {\n      this.filters = {\n        account: \"\",\n        username: \"\",\n        age: \"\",\n        sex: null,\n        address: \"\",\n        phone: \"\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handleInput() {\n      if (this.autoSearch) {\n        this.load();\n      }\n    },\n    handlePageChange(page) {\n      this.params.pageNum = page;\n    },\n    handleRowClick(row) {\n      this.editForm = {\n        ...row,\n        isNew: false\n      };\n      this.editDialogVisible = true;\n    },\n    saveEdit() {\n      if (this.editForm.isNew) {\n        this.add(); // 如果是新增，调用添加接口\n      } else {\n        this.update(); // 否则更新信息\n      }\n      this.editDialogVisible = false;\n      this.load(); // 刷新数据\n    },\n    addUser() {\n      this.editForm = {\n        userid: \"\",\n        // 新用户没有ID\n        account: \"\",\n        username: \"\",\n        age: \"\",\n        sex: \"\",\n        address: \"\",\n        phone: \"\",\n        introduce: \"\",\n        isNew: true // 标记为新增\n      };\n      this.editDialogVisible = true;\n    }\n  },\n  created() {\n    this.load();\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","account","username","age","sex","address","phone","detail","autoSearch","editDialogVisible","editForm","userid","introduce","isNew","watch","params.pageNum","newPage","load","params.pageSize","newSize","methods","searchParams","res","get","code","list","$message","error","update","post","success","add","handleSearch","handleReset","handleInput","handlePageChange","page","handleRowClick","row","saveEdit","addUser","created"],"sources":["src/views/user/UserManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <!-- 筛选条件和按钮组代码省略 -->\r\n\r\n    <!-- 添加用户按钮 -->\r\n    <el-button type=\"success\" @click=\"addUser\" class=\"btn-spacing\">添加用户</el-button>\r\n\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe @row-click=\"handleRowClick\">\r\n      <!-- 表格列代码省略 -->\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 编辑用户信息对话框 -->\r\n    <el-dialog title=\"编辑用户信息\" :visible.sync=\"editDialogVisible\" width=\"50%\" class=\"edit-dialog\">\r\n      <el-form :model=\"editForm\" label-width=\"100px\">\r\n        <el-form-item label=\"用户ID\">\r\n          <el-input v-model=\"editForm.userid\" :disabled=\"editForm.isNew\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"账户\">\r\n          <el-input v-model=\"editForm.account\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"editForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\">\r\n          <el-input v-model=\"editForm.age\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\">\r\n          <el-select v-model=\"editForm.sex\">\r\n            <el-option label=\"男\" value=\"男\" />\r\n            <el-option label=\"女\" value=\"女\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"地址\">\r\n          <el-input v-model=\"editForm.address\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\">\r\n          <el-input v-model=\"editForm.phone\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"editForm.email\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"简介\">\r\n          <el-input v-model=\"editForm.introduce\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveEdit\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"UserManage\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      total: 0,\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 12,\r\n      },\r\n      filters: {\r\n        account: \"\",\r\n        username: \"\",\r\n        age: \"\",\r\n        sex: null,\r\n        address: \"\",\r\n        phone: \"\",\r\n        detail: \"\",\r\n      },\r\n      autoSearch: false,\r\n      editDialogVisible: false, // 控制对话框显示\r\n      editForm: {\r\n        userid: \"\", // 用户ID\r\n        account: \"\", // 账户\r\n        username: \"\", // 用户名\r\n        age: \"\", // 年龄\r\n        sex: \"\", // 性别\r\n        address: \"\", // 地址\r\n        phone: \"\", // 电话\r\n        introduce: \"\", // 简介\r\n        isNew: false, // 新增标识\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    \"params.pageNum\"(newPage) {\r\n      this.load();\r\n    },\r\n    \"params.pageSize\"(newSize) {\r\n      this.load();\r\n    },\r\n  },\r\n  methods: {\r\n    async load() {\r\n      try {\r\n        const searchParams = { ...this.params, ...this.filters };\r\n        const res = await request.get(\"/user/InfoPage\", { params: searchParams });\r\n\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n    async update() {\r\n      try {\r\n        const res = await request.post(\"/user/UpdateInfo\", { params: this.editForm });\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"用户信息已更新！\");\r\n        } else {\r\n          this.$message.error(\"用户信息更新失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"用户信息更新失败\");\r\n      }\r\n    },\r\n    async add() {\r\n      try {\r\n        const res = await request.post(\"/user/AddInfo\", { params: this.editForm });\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"用户已添加！\");\r\n        } else {\r\n          this.$message.error(\"添加用户失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"添加用户失败\");\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.load();\r\n    },\r\n    handleReset() {\r\n      this.filters = {\r\n        account: \"\",\r\n        username: \"\",\r\n        age: \"\",\r\n        sex: null,\r\n        address: \"\",\r\n        phone: \"\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.load();\r\n      }\r\n    },\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n    },\r\n    handleRowClick(row) {\r\n      this.editForm = { ...row, isNew: false };\r\n      this.editDialogVisible = true;\r\n    },\r\n    saveEdit() {\r\n      if (this.editForm.isNew) {\r\n        this.add(); // 如果是新增，调用添加接口\r\n      } else {\r\n        this.update(); // 否则更新信息\r\n      }\r\n      this.editDialogVisible = false;\r\n      this.load(); // 刷新数据\r\n    },\r\n    addUser() {\r\n      this.editForm = {\r\n        userid: \"\", // 新用户没有ID\r\n        account: \"\",\r\n        username: \"\",\r\n        age: \"\",\r\n        sex: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n        introduce: \"\",\r\n        isNew: true, // 标记为新增\r\n      };\r\n      this.editDialogVisible = true;\r\n    },\r\n  },\r\n  created() {\r\n    this.load();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAiEA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,OAAA;QACAC,OAAA;QACAC,QAAA;QACAC,GAAA;QACAC,GAAA;QACAC,OAAA;QACAC,KAAA;QACAC,MAAA;MACA;MACAC,UAAA;MACAC,iBAAA;MAAA;MACAC,QAAA;QACAC,MAAA;QAAA;QACAV,OAAA;QAAA;QACAC,QAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;QAAA;QACAC,OAAA;QAAA;QACAC,KAAA;QAAA;QACAM,SAAA;QAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,KAAA;IACA,gBAAAC,CAAAC,OAAA;MACA,KAAAC,IAAA;IACA;IACA,iBAAAC,CAAAC,OAAA;MACA,KAAAF,IAAA;IACA;EACA;EACAG,OAAA;IACA,MAAAH,KAAA;MACA;QACA,MAAAI,YAAA;UAAA,QAAAxB,MAAA;UAAA,QAAAG;QAAA;QACA,MAAAsB,GAAA,SAAA9B,OAAA,CAAA+B,GAAA;UAAA1B,MAAA,EAAAwB;QAAA;QAEA,IAAAC,GAAA,CAAAE,IAAA;UACA,KAAA7B,SAAA,GAAA2B,GAAA,CAAA5B,IAAA,CAAA+B,IAAA;UACA,KAAA7B,KAAA,GAAA0B,GAAA,CAAA5B,IAAA,CAAAE,KAAA;QACA;UACA,KAAA8B,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACA,MAAAC,OAAA;MACA;QACA,MAAAN,GAAA,SAAA9B,OAAA,CAAAqC,IAAA;UAAAhC,MAAA,OAAAa;QAAA;QACA,IAAAY,GAAA,CAAAE,IAAA;UACA,KAAAE,QAAA,CAAAI,OAAA;QACA;UACA,KAAAJ,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACA,MAAAI,IAAA;MACA;QACA,MAAAT,GAAA,SAAA9B,OAAA,CAAAqC,IAAA;UAAAhC,MAAA,OAAAa;QAAA;QACA,IAAAY,GAAA,CAAAE,IAAA;UACA,KAAAE,QAAA,CAAAI,OAAA;QACA;UACA,KAAAJ,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAK,aAAA;MACA,KAAAf,IAAA;IACA;IACAgB,YAAA;MACA,KAAAjC,OAAA;QACAC,OAAA;QACAC,QAAA;QACAC,GAAA;QACAC,GAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACA,KAAAT,MAAA,CAAAC,OAAA;MACA,KAAAmB,IAAA;IACA;IACAiB,YAAA;MACA,SAAA1B,UAAA;QACA,KAAAS,IAAA;MACA;IACA;IACAkB,iBAAAC,IAAA;MACA,KAAAvC,MAAA,CAAAC,OAAA,GAAAsC,IAAA;IACA;IACAC,eAAAC,GAAA;MACA,KAAA5B,QAAA;QAAA,GAAA4B,GAAA;QAAAzB,KAAA;MAAA;MACA,KAAAJ,iBAAA;IACA;IACA8B,SAAA;MACA,SAAA7B,QAAA,CAAAG,KAAA;QACA,KAAAkB,GAAA;MACA;QACA,KAAAH,MAAA;MACA;MACA,KAAAnB,iBAAA;MACA,KAAAQ,IAAA;IACA;IACAuB,QAAA;MACA,KAAA9B,QAAA;QACAC,MAAA;QAAA;QACAV,OAAA;QACAC,QAAA;QACAC,GAAA;QACAC,GAAA;QACAC,OAAA;QACAC,KAAA;QACAM,SAAA;QACAC,KAAA;MACA;MACA,KAAAJ,iBAAA;IACA;EACA;EACAgC,QAAA;IACA,KAAAxB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}