{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: 'UserManage',\n  data() {\n    return {\n      searchParams: {\n        name: '',\n        age: '',\n        address: '',\n        phone: ''\n      },\n      params: {\n        pageNum: 1,\n        pageSize: 12\n      },\n      tableData: [],\n      total: 0,\n      autoSearch: true\n    };\n  },\n  methods: {\n    // 加载数据并考虑分页和搜索条件\n    load() {\n      const searchQuery = Object.keys(this.searchParams).reduce((acc, key) => {\n        if (this.searchParams[key]) acc[key] = this.searchParams[key];\n        return acc;\n      }, {});\n      const searchParams = {\n        ...searchQuery,\n        pageNum: this.params.pageNum,\n        pageSize: this.params.pageSize\n      };\n      request.get('/user/page', {\n        params: searchParams\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error('加载数据失败');\n        }\n      }).catch(() => this.$message.error('加载数据失败'));\n    },\n    // 搜索功能触发\n    handleSearch() {\n      this.params.pageNum = 1; // 重置为第一页\n      this.load();\n    },\n    // 分页切换\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    },\n    // 输入框内容改变时，如果开启自动搜索，则触发搜索\n    handleInput() {\n      if (this.autoSearch) this.handleSearch();\n    },\n    // 清空搜索框\n    clearSearch() {\n      this.searchParams = {\n        name: '',\n        age: '',\n        address: '',\n        phone: ''\n      };\n      this.load();\n    }\n  },\n  created() {\n    this.load(); // 初始加载数据\n  }\n};","map":{"version":3,"names":["request","name","data","searchParams","age","address","phone","params","pageNum","pageSize","tableData","total","autoSearch","methods","load","searchQuery","Object","keys","reduce","acc","key","get","then","res","code","list","$message","error","catch","handleSearch","handlePageChange","page","handleInput","clearSearch","created"],"sources":["src/views/UserManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <!-- 搜索表单 -->\r\n    <div class=\"search-form\">\r\n      <!-- 第一行：四个输入框 -->\r\n      <div class=\"search-row\">\r\n        <el-input v-model=\"searchParams.name\" placeholder=\"请输入名称\" class=\"search-input\" @input=\"handleInput\" />\r\n        <el-input v-model=\"searchParams.age\" placeholder=\"请输入年龄\" class=\"search-input\" @input=\"handleInput\" />\r\n        <el-input v-model=\"searchParams.address\" placeholder=\"请输入住址\" class=\"search-input\" @input=\"handleInput\" />\r\n        <el-input v-model=\"searchParams.phone\" placeholder=\"请输入电话\" class=\"search-input\" @input=\"handleInput\" />\r\n      </div>\r\n\r\n      <!-- 第二行：自动搜索、搜索和清空搜索按钮 -->\r\n      <div class=\"search-actions\">\r\n        <el-checkbox v-model=\"autoSearch\" class=\"auto-search-checkbox\">自动搜索</el-checkbox>\r\n        <el-button type=\"primary\" @click=\"handleSearch\" class=\"search-btn\">搜索</el-button>\r\n        <el-button type=\"text\" @click=\"clearSearch\" class=\"clear-btn\">清空搜索</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe>\r\n      <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n      <el-table-column prop=\"age\" label=\"年龄\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"住址\"></el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 空数据提示 -->\r\n    <div v-if=\"tableData.length === 0\" class=\"no-data\">\r\n      <p>没有找到相关数据</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: 'UserManage',\r\n  data() {\r\n    return {\r\n      searchParams: {\r\n        name: '',\r\n        age: '',\r\n        address: '',\r\n        phone: ''\r\n      },\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 12\r\n      },\r\n      tableData: [],\r\n      total: 0,\r\n      autoSearch: true\r\n    };\r\n  },\r\n  methods: {\r\n    // 加载数据并考虑分页和搜索条件\r\n    load() {\r\n      const searchQuery = Object.keys(this.searchParams).reduce((acc, key) => {\r\n        if (this.searchParams[key]) acc[key] = this.searchParams[key];\r\n        return acc;\r\n      }, {});\r\n\r\n      const searchParams = {\r\n        ...searchQuery,\r\n        pageNum: this.params.pageNum,\r\n        pageSize: this.params.pageSize\r\n      };\r\n\r\n      request.get('/user/page', { params: searchParams })\r\n          .then(res => {\r\n            if (res.code === '200') {\r\n              this.tableData = res.data.list;\r\n              this.total = res.data.total;\r\n            } else {\r\n              this.$message.error('加载数据失败');\r\n            }\r\n          })\r\n          .catch(() => this.$message.error('加载数据失败'));\r\n    },\r\n\r\n    // 搜索功能触发\r\n    handleSearch() {\r\n      this.params.pageNum = 1; // 重置为第一页\r\n      this.load();\r\n    },\r\n\r\n    // 分页切换\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n\r\n    // 输入框内容改变时，如果开启自动搜索，则触发搜索\r\n    handleInput() {\r\n      if (this.autoSearch) this.handleSearch();\r\n    },\r\n\r\n    // 清空搜索框\r\n    clearSearch() {\r\n      this.searchParams = { name: '', age: '', address: '', phone: '' };\r\n      this.load();\r\n    }\r\n  },\r\n  created() {\r\n    this.load();  // 初始加载数据\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  padding: 10px;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.search-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.search-input {\r\n  width: 250px;\r\n}\r\n\r\n.search-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 5px;\r\n  align-items: center;\r\n}\r\n\r\n.search-btn, .clear-btn {\r\n  width: 100px;\r\n}\r\n\r\n.auto-search-checkbox {\r\n  margin-right: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  top: 5px;\r\n}\r\n\r\n.el-table {\r\n  margin: 10px 0;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #888;\r\n}\r\n\r\n.el-button[loading] {\r\n  background-color: #f0f0f0;\r\n}\r\n</style>\r\n"],"mappings":";;AA8CA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;QACAF,IAAA;QACAG,GAAA;QACAC,OAAA;QACAC,KAAA;MACA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,SAAA;MACAC,KAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,KAAA;MACA,MAAAC,WAAA,GAAAC,MAAA,CAAAC,IAAA,MAAAd,YAAA,EAAAe,MAAA,EAAAC,GAAA,EAAAC,GAAA;QACA,SAAAjB,YAAA,CAAAiB,GAAA,GAAAD,GAAA,CAAAC,GAAA,SAAAjB,YAAA,CAAAiB,GAAA;QACA,OAAAD,GAAA;MACA;MAEA,MAAAhB,YAAA;QACA,GAAAY,WAAA;QACAP,OAAA,OAAAD,MAAA,CAAAC,OAAA;QACAC,QAAA,OAAAF,MAAA,CAAAE;MACA;MAEAT,OAAA,CAAAqB,GAAA;QAAAd,MAAA,EAAAJ;MAAA,GACAmB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAd,SAAA,GAAAa,GAAA,CAAArB,IAAA,CAAAuB,IAAA;UACA,KAAAd,KAAA,GAAAY,GAAA,CAAArB,IAAA,CAAAS,KAAA;QACA;UACA,KAAAe,QAAA,CAAAC,KAAA;QACA;MACA,GACAC,KAAA,YAAAF,QAAA,CAAAC,KAAA;IACA;IAEA;IACAE,aAAA;MACA,KAAAtB,MAAA,CAAAC,OAAA;MACA,KAAAM,IAAA;IACA;IAEA;IACAgB,iBAAAC,IAAA;MACA,KAAAxB,MAAA,CAAAC,OAAA,GAAAuB,IAAA;MACA,KAAAjB,IAAA;IACA;IAEA;IACAkB,YAAA;MACA,SAAApB,UAAA,OAAAiB,YAAA;IACA;IAEA;IACAI,YAAA;MACA,KAAA9B,YAAA;QAAAF,IAAA;QAAAG,GAAA;QAAAC,OAAA;QAAAC,KAAA;MAAA;MACA,KAAAQ,IAAA;IACA;EACA;EACAoB,QAAA;IACA,KAAApB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}