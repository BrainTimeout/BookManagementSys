{"ast":null,"code":"import request from \"@/utils/request\"; // 请根据你的实际请求方式调整\n\nexport default {\n  name: \"bookList\",\n  data() {\n    return {\n      tableData: [],\n      // 存储书籍数据\n      total: 0,\n      // 数据总数\n      params: {\n        pageNum: 1,\n        pageSize: 6\n      },\n      filters: {\n        name: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        detail: \"\",\n        sortOrder: \"ascending\"\n      },\n      autoSearch: false,\n      // 控制是否开启自动搜索\n      addDialogVisible: false,\n      // 控制添加书籍对话框显示与否\n      editDialogVisible: false,\n      // 控制编辑书籍对话框显示与否\n      categories: [],\n      newBook: {\n        name: \"\",\n        description: \"\",\n        publishDate: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        bookNo: \"\",\n        score: \"\",\n        nums: \"\",\n        cover: \"\"\n      },\n      editBook: {\n        id: null,\n        name: \"\",\n        description: \"\",\n        publishDate: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        bookNo: \"\",\n        score: \"\",\n        nums: \"\",\n        cover: \"\"\n      },\n      coverUpLoadBaseUrl: \"\",\n      coverUpLoadUrl: \"\"\n    };\n  },\n  created() {\n    try {\n      request.get(\"/Category/Tree\").then(res => {\n        this.categories = res.data;\n      });\n    } catch (error) {\n      this.$message.error(\"分类加载失败\");\n    }\n    this.coverUpLoadBaseUrl = `${request.defaults.baseURL}/File/Upload/Cover/`;\n    this.load(); // 初始化加载数据\n  },\n  methods: {\n    handleEditBookNoChange() {\n      console.log(this.this.editBook.bookNo);\n      this.coverUpLoadUrl = this.coverUpLoadBaseUrl + `${this.editBook.bookNo}`;\n      console.log(this.coverUpLoadUrl);\n    },\n    // 上传头像前的处理（例如限制文件类型）\n    beforeCoverUpload(file) {\n      const isImage = file.type.startsWith('image/');\n      if (!isImage) {\n        this.$message.error('只能上传图片文件！');\n      }\n      return isImage;\n    },\n    // 处理头像上传后的变更\n    handleCoverChange(file) {},\n    // 上传成功后的回调\n    handleEditCoverSuccess(response) {\n      this.editBook.cover = this.coverUpLoadUrl;\n    },\n    handleNewCoverSuccess(response) {\n      this.newBook.cover = this.coverUpLoadUrl;\n    },\n    // 上传失败的回调\n    handleCoverError(error, file, fileList) {\n      this.$message.error('封面上传失败');\n    },\n    // 加载数据\n    async load() {\n      try {\n        const res = await request.get(\"/Book/Page\", {\n          params: {\n            ...this.params,\n            ...this.filters\n          }\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    // 处理输入变化并自动搜索\n    handleInput() {\n      if (this.autoSearch) {\n        this.params.pageNum = 1;\n        this.load();\n      }\n    },\n    // 手动搜索按钮点击事件\n    handleSearch() {\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 重置搜索条件\n    handleReset() {\n      this.filters = {\n        name: \"\",\n        author: \"\",\n        publisher: \"\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handleSortChange({\n      prop,\n      order\n    }) {\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\n      this.load();\n    },\n    // 分页改变\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    },\n    handleEditCategoriesChange(val) {\n      this.editBook.category = val[val.length - 1];\n    },\n    handleNewCategoriesChange(val) {\n      this.newBook.category = val[val.length - 1];\n    },\n    // 编辑操作\n    handleEdit(row) {\n      this.editBook = {\n        ...row\n      }; // 复制选中的书籍数据到编辑模型\n      this.editDialogVisible = true; // 显示修改对话框\n      this.coverUpLoadUrl = \"\";\n    },\n    // 删除操作\n    async handleDelete(row) {\n      try {\n        const res = await request.delete(`/Book/Delete/${row.id}`);\n        if (res.code === \"200\") {\n          this.$message.success(\"删除成功\");\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"删除失败\");\n      }\n    },\n    // 打开添加书籍的对话框\n    openAddDialog() {\n      this.newBook = {\n        // 清空添加表单数据\n        name: \"\",\n        description: \"\",\n        publishDate: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        bookNo: \"\",\n        cover: \"\"\n      };\n      this.coverUpLoadUrl = \"\";\n      this.addDialogVisible = true; // 打开添加对话框\n    },\n    // 添加新书籍\n    async handleAddBook() {\n      try {\n        const res = await request.post(\"/Book/Insert\", this.newBook);\n        if (res.code === \"200\") {\n          this.$message.success(\"添加成功\");\n          this.addDialogVisible = false; // 关闭对话框\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"添加失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"添加失败\");\n      }\n    },\n    // 编辑书籍\n    async handleEditBook() {\n      try {\n        const res = await request.put(\"/Book/Update\", this.editBook);\n        if (res.code === \"200\") {\n          this.$message.success(\"编辑成功\");\n          this.editDialogVisible = false; // 关闭对话框\n          this.load(); // 刷新数据\n        } else {\n          this.$message.error(\"编辑失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"编辑失败\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","author","publisher","category","detail","sortOrder","autoSearch","addDialogVisible","editDialogVisible","categories","newBook","description","publishDate","bookNo","score","nums","cover","editBook","id","coverUpLoadBaseUrl","coverUpLoadUrl","created","get","then","res","error","$message","defaults","baseURL","load","methods","handleEditBookNoChange","console","log","this","beforeCoverUpload","file","isImage","type","startsWith","handleCoverChange","handleEditCoverSuccess","response","handleNewCoverSuccess","handleCoverError","fileList","code","list","handleInput","handleSearch","handleReset","handleSortChange","prop","order","handlePageChange","page","handleEditCategoriesChange","val","length","handleNewCategoriesChange","handleEdit","row","handleDelete","delete","success","openAddDialog","handleAddBook","post","handleEditBook","put"],"sources":["src/views/book/List.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.name\"\r\n          placeholder=\"书名\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.author\"\r\n          placeholder=\"作者\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.publisher\"\r\n          placeholder=\"出版社\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.category\"\r\n          placeholder=\"分类\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.detail\"\r\n          placeholder=\"其它信息\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-switch v-model=\"autoSearch\" @change=\"handleSearch\" />\r\n      <span class=\"auto-search-text\">自动搜索</span>\r\n      <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n      <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n    </el-row>\r\n\r\n    <!-- 添加书籍 -->\r\n    <div class=\"add-book\">\r\n      <span class=\"add-book-text\" @click=\"openAddDialog\">+ 添加书籍</span>\r\n    </div>\r\n\r\n    <!-- 书籍列表表格 -->\r\n    <el-table\r\n        :data=\"tableData\"\r\n        stripe\r\n        :default-sort=\"{ prop: 'id', order: 'ascending' }\"\r\n        @sort-change=\"handleSortChange\"\r\n        row-key=\"id\"\r\n    >\r\n      <el-table-column type=\"expand\">\r\n        <template slot-scope=\"props\">\r\n          <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n            <el-form-item label=\"描述\">\r\n              <span>{{ props.row.description || '暂无描述' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"出版日期\">\r\n              <span>{{ props.row.publishDate || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"标准码\">\r\n              <span>{{ props.row.bookNo || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"创建时间\">\r\n              <span>{{ props.row.createtime || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"更新时间\">\r\n              <span>{{ props.row.updatetime || '暂无信息' }}</span>\r\n            </el-form-item>\r\n          </el-form>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 基本书籍信息列 -->\r\n      <el-table-column prop=\"id\" label=\"书籍ID\" sortable />\r\n      <el-table-column prop=\"name\" label=\"书名\" />\r\n      <el-table-column prop=\"author\" label=\"作者\" />\r\n      <el-table-column prop=\"publisher\" label=\"出版社\" />\r\n      <el-table-column prop=\"category\" label=\"分类\" />\r\n      <el-table-column prop=\"score\" label=\"积分\" />\r\n      <el-table-column prop=\"nums\" label=\"当前数量\" />\r\n      <el-table-column label=\"封面\">\r\n        <template slot-scope=\"scope\">\r\n          <!-- 如果 cover 字段有值，则显示图片 -->\r\n          <img :src=\"scope.row.cover\" v-if=\"scope.row.cover\" alt=\"封面\" style=\"width: 100px; height: 150px; object-fit: cover;\"/>\r\n          <!-- 如果 cover 字段为空，则显示默认占位图 -->\r\n          <span v-else>无封面</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\" width=\"200px\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"success\"\r\n              icon=\"el-icon-edit\"\r\n              @click=\"handleEdit(scope.row)\"\r\n          >编辑</el-button>\r\n          <el-button\r\n              size=\"small\"\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              @click=\"handleDelete(scope.row)\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 添加书籍对话框 -->\r\n    <el-dialog\r\n        title=\"添加新书籍\"\r\n        :visible.sync=\"addDialogVisible\"\r\n        width=\"50%\"\r\n    >\r\n      <el-form :model=\"newBook\" label-width=\"100px\">\r\n        <el-form-item label=\"书名\">\r\n          <el-input v-model=\"newBook.name\" placeholder=\"请输入书名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input\r\n              type=\"textarea\"\r\n              v-model=\"newBook.description\"\r\n              placeholder=\"请输入描述\"\r\n              rows=\"4\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版日期\">\r\n          <el-date-picker\r\n              v-model=\"newBook.publishDate\"\r\n              type=\"datetime\"\r\n              placeholder=\"请输入出版日期\"\r\n              format=\"yyyy-MM-dd HH:mm:ss\"\r\n              style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"作者\">\r\n          <el-input v-model=\"newBook.author\" placeholder=\"请输入作者\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版社\">\r\n          <el-input v-model=\"newBook.publisher\" placeholder=\"请输入出版社\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-cascader\r\n              :props = \"{value:'name',label:'name'}\"\r\n              v-model=\"newBook.category\"\r\n              :options=\"categories\"\r\n              @change=\"handleNewCategoriesChange\"></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item label=\"标准码\">\r\n          <el-input v-model=\"newBook.bookNo\" placeholder=\"请输入标准码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"借书积分\">\r\n          <el-input v-model=\"newBook.score\" placeholder=\"请输入借书积分\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"数量\">\r\n          <el-input v-model=\"newBook.nums\" placeholder=\"请输入数量\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-input v-model=\"newBook.cover\" placeholder=\"请输入封面\" />\r\n          <div v-if=\"newBook.cover\">\r\n            <img :src=\"newBook.cover\" alt=\"封面预览\" style=\"width: 150px; height: 225px; object-fit: cover; margin-top: 10px;\" />\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleAddBook\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 编辑书籍对话框 -->\r\n    <el-dialog\r\n        title=\"编辑书籍\"\r\n        :visible.sync=\"editDialogVisible\"\r\n        width=\"50%\"\r\n    >\r\n      <el-form :model=\"editBook\" label-width=\"100px\">\r\n        <el-form-item label=\"书名\">\r\n          <el-input v-model=\"editBook.name\" placeholder=\"请输入书名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input\r\n              type=\"textarea\"\r\n              v-model=\"editBook.description\"\r\n              placeholder=\"请输入描述\"\r\n              rows=\"4\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版日期\">\r\n          <el-date-picker\r\n              v-model=\"editBook.publishDate\"\r\n              type=\"datetime\"\r\n              placeholder=\"请输入出版日期\"\r\n              format=\"yyyy-MM-dd HH:mm:ss\"\r\n              style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"作者\">\r\n          <el-input v-model=\"editBook.author\" placeholder=\"请输入作者\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版社\">\r\n          <el-input v-model=\"editBook.publisher\" placeholder=\"请输入出版社\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-cascader\r\n              :props = \"{value:'name',label:'name'}\"\r\n              v-model=\"editBook.category\"\r\n              :options=\"categories\"\r\n              @change=\"handleEditCategoriesChange\"></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item label=\"标准码\">\r\n          <el-input\r\n              v-model=\"newBook.bookNo\"\r\n              placeholder=\"请输入标准码\"\r\n              @input=\"handleEditBookNoChange\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"借书积分\">\r\n          <el-input v-model=\"editBook.score\" placeholder=\"请输入借书积分\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"数量\">\r\n          <el-input v-model=\"editBook.nums\" placeholder=\"请输入数量\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-input v-model=\"editBook.cover\" placeholder=\"请输入封面\" />\r\n          <el-upload\r\n              class=\"cover-uploader\"\r\n              :action=\"coverUpLoadUrl\"\r\n              :show-file-list=\"false\"\r\n              :before-upload=\"beforeCoverUpload\"\r\n              :on-change=\"handleCoverChange\"\r\n              :on-success=\"handleEditCoverSuccess\"\r\n              :on-error=\"handleCoverError\"\r\n          >\r\n            <span class=\"upload-text\">点击上传头像</span>\r\n          </el-upload>\r\n          <div v-if=\"editBook.cover\">\r\n            <img :src=\"editBook.cover\" alt=\"封面预览\" style=\"width: 150px; height: 225px; object-fit: cover; margin-top: 10px;\" />\r\n          </div>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleEditBook\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\"; // 请根据你的实际请求方式调整\r\n\r\nexport default {\r\n  name: \"bookList\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 存储书籍数据\r\n      total: 0,       // 数据总数\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 6,\r\n      },\r\n      filters: {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category:\"\",\r\n        detail:\"\",\r\n        sortOrder: \"ascending\",\r\n      },\r\n      autoSearch: false,  // 控制是否开启自动搜索\r\n      addDialogVisible: false,  // 控制添加书籍对话框显示与否\r\n      editDialogVisible: false,  // 控制编辑书籍对话框显示与否\r\n      categories:[],\r\n      newBook: {\r\n        name: \"\",\r\n        description: \"\",\r\n        publishDate: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        bookNo: \"\",\r\n        score:\"\",\r\n        nums:\"\",\r\n        cover: \"\",\r\n      },\r\n      editBook: {\r\n        id: null,\r\n        name: \"\",\r\n        description: \"\",\r\n        publishDate: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        bookNo: \"\",\r\n        score:\"\",\r\n        nums:\"\",\r\n        cover: \"\",\r\n      },\r\n      coverUpLoadBaseUrl:\"\",\r\n      coverUpLoadUrl:\"\",\r\n    };\r\n  },\r\n  created() {\r\n    try {\r\n      request.get(\"/Category/Tree\").then(res => {\r\n        this.categories = res.data;\r\n      });\r\n    } catch (error) {\r\n      this.$message.error(\"分类加载失败\");\r\n    }\r\n    this.coverUpLoadBaseUrl=`${request.defaults.baseURL}/File/Upload/Cover/`;\r\n    this.load();  // 初始化加载数据\r\n  },\r\n  methods: {\r\n    handleEditBookNoChange(){\r\n      console.log(this.this.editBook.bookNo);\r\n      this.coverUpLoadUrl = this.coverUpLoadBaseUrl + `${this.editBook.bookNo}`;\r\n\r\n      console.log(this.coverUpLoadUrl);\r\n    },\r\n    // 上传头像前的处理（例如限制文件类型）\r\n    beforeCoverUpload(file) {\r\n      const isImage = file.type.startsWith('image/');\r\n      if (!isImage) {\r\n        this.$message.error('只能上传图片文件！');\r\n      }\r\n      return isImage;\r\n    },\r\n\r\n    // 处理头像上传后的变更\r\n    handleCoverChange(file) {\r\n\r\n    },\r\n    // 上传成功后的回调\r\n    handleEditCoverSuccess(response) {\r\n      this.editBook.cover = this.coverUpLoadUrl;\r\n    },\r\n\r\n    handleNewCoverSuccess(response) {\r\n      this.newBook.cover = this.coverUpLoadUrl;\r\n    },\r\n\r\n    // 上传失败的回调\r\n    handleCoverError(error, file, fileList) {\r\n      this.$message.error('封面上传失败');\r\n    },\r\n    // 加载数据\r\n    async load() {\r\n      try {\r\n        const res = await request.get(\"/Book/Page\", {\r\n          params: { ...this.params, ...this.filters },\r\n        });\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n\r\n    // 处理输入变化并自动搜索\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.params.pageNum = 1;\r\n        this.load();\r\n      }\r\n    },\r\n\r\n    // 手动搜索按钮点击事件\r\n    handleSearch() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 重置搜索条件\r\n    handleReset() {\r\n      this.filters = {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handleSortChange({ prop, order }) {\r\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\r\n      this.load();\r\n    },\r\n    // 分页改变\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n    handleEditCategoriesChange(val){\r\n      this.editBook.category = val[val.length-1];\r\n    },\r\n    handleNewCategoriesChange(val){\r\n      this.newBook.category = val[val.length-1];\r\n    },\r\n    // 编辑操作\r\n    handleEdit(row) {\r\n      this.editBook = { ...row };  // 复制选中的书籍数据到编辑模型\r\n      this.editDialogVisible = true;  // 显示修改对话框\r\n      this.coverUpLoadUrl = \"\";\r\n    },\r\n\r\n    // 删除操作\r\n    async handleDelete(row) {\r\n      try {\r\n        const res = await request.delete(`/Book/Delete/${row.id}`);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"删除成功\");\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"删除失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"删除失败\");\r\n      }\r\n    },\r\n\r\n    // 打开添加书籍的对话框\r\n    openAddDialog() {\r\n      this.newBook = {  // 清空添加表单数据\r\n        name: \"\",\r\n        description: \"\",\r\n        publishDate: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        bookNo: \"\",\r\n        cover: \"\",\r\n      };\r\n      this.coverUpLoadUrl = \"\";\r\n      this.addDialogVisible = true;  // 打开添加对话框\r\n    },\r\n\r\n    // 添加新书籍\r\n    async handleAddBook() {\r\n      try {\r\n        const res = await request.post(\"/Book/Insert\", this.newBook);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"添加成功\");\r\n          this.addDialogVisible = false;  // 关闭对话框\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"添加失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"添加失败\");\r\n      }\r\n    },\r\n\r\n    // 编辑书籍\r\n    async handleEditBook() {\r\n      try {\r\n        const res = await request.put(\"/Book/Update\", this.editBook);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"编辑成功\");\r\n          this.editDialogVisible = false;  // 关闭对话框\r\n          this.load();  // 刷新数据\r\n        } else {\r\n          this.$message.error(\"编辑失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"编辑失败\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.auto-search-text {\r\n  font-size: 14px;\r\n  color: #333;\r\n  margin-right: 10px;\r\n}\r\n\r\n.demo-table-expand {\r\n  font-size: 14px;\r\n}\r\n\r\n.demo-table-expand .el-form-item {\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n}\r\n\r\n.demo-table-expand label {\r\n  width: 90px;\r\n  color: #0468EF;  /* 设置label的颜色 */\r\n  font-weight: bold;  /* 加粗label */\r\n}\r\n\r\n.demo-table-expand .el-form-item .el-input,\r\n.demo-table-expand .el-form-item .el-date-picker {\r\n  width: 100%;\r\n}\r\n\r\n.demo-table-expand .el-form-item .el-input::placeholder,\r\n.demo-table-expand .el-form-item .el-date-picker__input::placeholder {\r\n  color: #999;  /* 设置输入框的placeholder颜色 */\r\n}\r\n\r\n.book-container {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-book {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-book {\r\n  text-align: right;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-book-text {\r\n  cursor: pointer;\r\n  color: #409eff;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}