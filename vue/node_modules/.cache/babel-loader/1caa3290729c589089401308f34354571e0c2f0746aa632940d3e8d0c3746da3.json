{"ast":null,"code":"import request from \"@/utils/request\"; // 请根据你的实际请求方式调整\n\nexport default {\n  name: \"CategoryList\",\n  data() {\n    return {\n      tableData: [],\n      // 存储分类数据\n      total: 0,\n      // 数据总数\n      params: {\n        pageNum: 1,\n        pageSize: 10\n      },\n      filters: {\n        name: \"\",\n        remark: \"\",\n        id: \"\"\n      }\n    };\n  },\n  methods: {\n    // 格式化时间\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('zh-CN', options);\n    },\n    // 加载数据\n    async load() {\n      try {\n        const res = await request.get(\"/Category/Page\", {\n          params: {\n            ...this.params,\n            ...this.filters\n          }\n        });\n        if (res.code === 200) {\n          console.log(\"here\");\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    // 搜索\n    handleSearch() {\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 重置搜索条件\n    handleReset() {\n      this.filters = {\n        name: \"\",\n        remark: \"\",\n        id: \"\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    // 分页改变\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    },\n    // 输入时触发搜索\n    handleInput() {\n      this.params.pageNum = 1;\n      this.load();\n    }\n  },\n  created() {\n    this.load();\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","remark","id","methods","formatDate","date","options","year","month","day","Date","toLocaleDateString","load","res","get","code","console","log","list","$message","error","handleSearch","handleReset","handlePageChange","page","handleInput","created"],"sources":["src/views/category/List.vue"],"sourcesContent":["<template>\r\n  <div class=\"category-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.id\"\r\n          placeholder=\"分类ID\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.name\"\r\n          placeholder=\"分类名称\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.remark\"\r\n          placeholder=\"备注\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <div class=\"search-buttons\">\r\n        <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n        <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n      </div>\r\n    </el-row>\r\n\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe>\r\n      <el-table-column prop=\"id\" label=\"分类ID\" />\r\n      <el-table-column prop=\"name\" label=\"分类名称\" />\r\n      <el-table-column prop=\"remark\" label=\"备注\" />\r\n      <el-table-column label=\"创建时间\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ formatDate(scope.row.createtime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"更新时间\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ formatDate(scope.row.updatetime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\"; // 请根据你的实际请求方式调整\r\n\r\nexport default {\r\n  name: \"CategoryList\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 存储分类数据\r\n      total: 0,       // 数据总数\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      filters: {\r\n        name: \"\",\r\n        remark: \"\",\r\n        id: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 格式化时间\r\n    formatDate(date) {\r\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n      return new Date(date).toLocaleDateString('zh-CN', options);\r\n    },\r\n\r\n    // 加载数据\r\n    async load() {\r\n      try {\r\n        const res = await request.get(\"/Category/Page\", {\r\n          params: { ...this.params, ...this.filters },\r\n        });\r\n        if (res.code === 200) {\r\n          console.log(\"here\");\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n\r\n    // 搜索\r\n    handleSearch() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 重置搜索条件\r\n    handleReset() {\r\n      this.filters = {\r\n        name: \"\",\r\n        remark: \"\",\r\n        id: \"\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n\r\n    // 分页改变\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n\r\n    // 输入时触发搜索\r\n    handleInput() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.load();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.category-container {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":"AA0DA,OAAAA,OAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,KAAA;MAAA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,OAAA;QACAP,IAAA;QACAQ,MAAA;QACAC,EAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAC,WAAAC,IAAA;MACA,MAAAC,OAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,GAAA;MAAA;MACA,WAAAC,IAAA,CAAAL,IAAA,EAAAM,kBAAA,UAAAL,OAAA;IACA;IAEA;IACA,MAAAM,KAAA;MACA;QACA,MAAAC,GAAA,SAAArB,OAAA,CAAAsB,GAAA;UACAjB,MAAA;YAAA,QAAAA,MAAA;YAAA,QAAAG;UAAA;QACA;QACA,IAAAa,GAAA,CAAAE,IAAA;UACAC,OAAA,CAAAC,GAAA;UACA,KAAAtB,SAAA,GAAAkB,GAAA,CAAAnB,IAAA,CAAAwB,IAAA;UACA,KAAAtB,KAAA,GAAAiB,GAAA,CAAAnB,IAAA,CAAAE,KAAA;QACA;UACA,KAAAuB,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IAEA;IACAC,aAAA;MACA,KAAAxB,MAAA,CAAAC,OAAA;MACA,KAAAc,IAAA;IACA;IAEA;IACAU,YAAA;MACA,KAAAtB,OAAA;QACAP,IAAA;QACAQ,MAAA;QACAC,EAAA;MACA;MACA,KAAAL,MAAA,CAAAC,OAAA;MACA,KAAAc,IAAA;IACA;IAEA;IACAW,iBAAAC,IAAA;MACA,KAAA3B,MAAA,CAAAC,OAAA,GAAA0B,IAAA;MACA,KAAAZ,IAAA;IACA;IAEA;IACAa,YAAA;MACA,KAAA5B,MAAA,CAAAC,OAAA;MACA,KAAAc,IAAA;IACA;EACA;EAEAc,QAAA;IACA,KAAAd,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}