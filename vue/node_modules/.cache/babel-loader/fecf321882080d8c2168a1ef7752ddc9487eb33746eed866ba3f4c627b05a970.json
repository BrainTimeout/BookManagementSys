{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport * as echarts from 'echarts';\nimport request from \"@/utils/request\";\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      borrowData: [],\n      // 存储借书数据\n      revertData: [],\n      // 存储还书数据\n      dates: [] // 存储日期\n    };\n  },\n  mounted() {\n    this.fetchData(); // 获取借书和还书数据\n  },\n  methods: {\n    // 获取数据\n    async fetchData() {\n      try {\n        const borrowResponse = await request.get(\"/Borrow/List\"); // 获取借书数据\n        const revertResponse = await request.get(\"/Borrow/RevertList\"); // 获取还书数据\n\n        this.borrowData = this.processData(borrowResponse.data); // 处理借书数据\n        this.revertData = this.processData(revertResponse.data); // 处理还书数据\n        this.dates = this.extractDates(borrowResponse.data, revertResponse.data); // 提取日期\n\n        this.initChart(); // 数据获取后初始化图表\n      } catch (error) {\n        console.error(\"数据获取失败：\", error);\n      }\n    },\n    // 处理数据：统计每个日期的借书或还书数量\n    processData(data) {\n      const dateCount = {};\n      data.forEach(item => {\n        const date = item.createtime.split(' ')[0]; // 提取日期部分\n        dateCount[date] = (dateCount[date] || 0) + 1; // 每个日期加1\n      });\n      return Object.values(dateCount); // 返回每个日期的借书/还书数量\n    },\n    // 提取所有日期：从借书和还书数据中提取出所有日期\n    extractDates(borrowData, revertData) {\n      const dates = new Set();\n      borrowData.forEach(item => dates.add(item.createtime.split(' ')[0]));\n      revertData.forEach(item => dates.add(item.createtime.split(' ')[0]));\n      return Array.from(dates).sort(); // 返回排序后的日期数组\n    },\n    // 初始化图表\n    initChart() {\n      const chartDom = document.getElementById('main');\n      const myChart = echarts.init(chartDom);\n\n      // 设置图表的配置项\n      const option = {\n        title: {\n          text: '图书借还统计'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['借书', '还书']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: this.dates // 使用提取的日期数据\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '借书',\n          type: 'line',\n          data: this.borrowData // 使用借书数据\n        }, {\n          name: '还书',\n          type: 'line',\n          data: this.revertData // 使用还书数据\n        }]\n      };\n      myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["echarts","request","name","data","borrowData","revertData","dates","mounted","fetchData","methods","borrowResponse","get","revertResponse","processData","extractDates","initChart","error","console","dateCount","forEach","item","date","createtime","split","Object","values","Set","add","Array","from","sort","chartDom","document","getElementById","myChart","init","option","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","setOption"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n  <div id=\"main\" style=\"width: 100%; height: 600px;\"></div> <!-- 增加高度 -->\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n      borrowData: [],  // 存储借书数据\r\n      revertData: [],  // 存储还书数据\r\n      dates: []  // 存储日期\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();  // 获取借书和还书数据\r\n  },\r\n  methods: {\r\n    // 获取数据\r\n    async fetchData() {\r\n      try {\r\n        const borrowResponse = await request.get(\"/Borrow/List\");  // 获取借书数据\r\n        const revertResponse = await request.get(\"/Borrow/RevertList\");  // 获取还书数据\r\n\r\n        this.borrowData = this.processData(borrowResponse.data);  // 处理借书数据\r\n        this.revertData = this.processData(revertResponse.data);  // 处理还书数据\r\n        this.dates = this.extractDates(borrowResponse.data, revertResponse.data);  // 提取日期\r\n\r\n        this.initChart();  // 数据获取后初始化图表\r\n      } catch (error) {\r\n        console.error(\"数据获取失败：\", error);\r\n      }\r\n    },\r\n\r\n    // 处理数据：统计每个日期的借书或还书数量\r\n    processData(data) {\r\n      const dateCount = {};\r\n      data.forEach(item => {\r\n        const date = item.createtime.split(' ')[0];  // 提取日期部分\r\n        dateCount[date] = (dateCount[date] || 0) + 1;  // 每个日期加1\r\n      });\r\n      return Object.values(dateCount);  // 返回每个日期的借书/还书数量\r\n    },\r\n\r\n    // 提取所有日期：从借书和还书数据中提取出所有日期\r\n    extractDates(borrowData, revertData) {\r\n      const dates = new Set();\r\n      borrowData.forEach(item => dates.add(item.createtime.split(' ')[0]));\r\n      revertData.forEach(item => dates.add(item.createtime.split(' ')[0]));\r\n      return Array.from(dates).sort();  // 返回排序后的日期数组\r\n    },\r\n\r\n    // 初始化图表\r\n    initChart() {\r\n      const chartDom = document.getElementById('main');\r\n      const myChart = echarts.init(chartDom);\r\n\r\n      // 设置图表的配置项\r\n      const option = {\r\n        title: {\r\n          text: '图书借还统计'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['借书', '还书']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.dates  // 使用提取的日期数据\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '借书',\r\n            type: 'line',\r\n            data: this.borrowData  // 使用借书数据\r\n          },\r\n          {\r\n            name: '还书',\r\n            type: 'line',\r\n            data: this.revertData  // 使用还书数据\r\n          }\r\n        ]\r\n      };\r\n\r\n      myChart.setOption(option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#main {\r\n  width: 100%;\r\n  height: 600px; /* 修改为更高的值 */\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;AAKA,YAAAA,OAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MAAA;MACAC,UAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,UAAA;MACA;QACA,MAAAE,cAAA,SAAAT,OAAA,CAAAU,GAAA;QACA,MAAAC,cAAA,SAAAX,OAAA,CAAAU,GAAA;;QAEA,KAAAP,UAAA,QAAAS,WAAA,CAAAH,cAAA,CAAAP,IAAA;QACA,KAAAE,UAAA,QAAAQ,WAAA,CAAAD,cAAA,CAAAT,IAAA;QACA,KAAAG,KAAA,QAAAQ,YAAA,CAAAJ,cAAA,CAAAP,IAAA,EAAAS,cAAA,CAAAT,IAAA;;QAEA,KAAAY,SAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IAEA;IACAH,YAAAV,IAAA;MACA,MAAAe,SAAA;MACAf,IAAA,CAAAgB,OAAA,CAAAC,IAAA;QACA,MAAAC,IAAA,GAAAD,IAAA,CAAAE,UAAA,CAAAC,KAAA;QACAL,SAAA,CAAAG,IAAA,KAAAH,SAAA,CAAAG,IAAA;MACA;MACA,OAAAG,MAAA,CAAAC,MAAA,CAAAP,SAAA;IACA;IAEA;IACAJ,aAAAV,UAAA,EAAAC,UAAA;MACA,MAAAC,KAAA,OAAAoB,GAAA;MACAtB,UAAA,CAAAe,OAAA,CAAAC,IAAA,IAAAd,KAAA,CAAAqB,GAAA,CAAAP,IAAA,CAAAE,UAAA,CAAAC,KAAA;MACAlB,UAAA,CAAAc,OAAA,CAAAC,IAAA,IAAAd,KAAA,CAAAqB,GAAA,CAAAP,IAAA,CAAAE,UAAA,CAAAC,KAAA;MACA,OAAAK,KAAA,CAAAC,IAAA,CAAAvB,KAAA,EAAAwB,IAAA;IACA;IAEA;IACAf,UAAA;MACA,MAAAgB,QAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,MAAAC,OAAA,GAAAlC,OAAA,CAAAmC,IAAA,CAAAJ,QAAA;;MAEA;MACA,MAAAK,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAtC,IAAA;QACA;QACAuC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,OAAA;UACAC,OAAA;YACAC,WAAA;UACA;QACA;QACAC,KAAA;UACAC,IAAA;UACAC,WAAA;UACAjD,IAAA,OAAAG,KAAA;QACA;QACA+C,KAAA;UACAF,IAAA;QACA;QACAG,MAAA,GACA;UACApD,IAAA;UACAiD,IAAA;UACAhD,IAAA,OAAAC,UAAA;QACA,GACA;UACAF,IAAA;UACAiD,IAAA;UACAhD,IAAA,OAAAE,UAAA;QACA;MAEA;MAEA6B,OAAA,CAAAqB,SAAA,CAAAnB,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}