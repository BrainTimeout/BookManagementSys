{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport request from \"@/utils/request\"; // 假设你使用的是 axios\n\nexport default {\n  name: 'UserManage',\n  data() {\n    return {\n      searchParams: {\n        name: '',\n        // 搜索字段：名称\n        age: '',\n        // 搜索字段：年龄\n        address: '',\n        // 搜索字段：住址\n        phone: '' // 搜索字段：电话\n      },\n      params: {\n        pageNum: 1,\n        // 当前页\n        pageSize: 8 // 每页显示8条数据\n      },\n      tableData: [],\n      // 表格数据\n      total: 0,\n      // 总记录数\n      loading: false // 加载状态\n    };\n  },\n  methods: {\n    // 加载数据并考虑分页和搜索条件\n    load() {\n      this.loading = true; // 开启加载状态\n      const searchQuery = {\n        ...this.searchParams\n      }; // 复制搜索条件\n\n      // 过滤掉空值的搜索条件\n      Object.keys(searchQuery).forEach(key => {\n        if (!searchQuery[key]) {\n          delete searchQuery[key];\n        }\n      });\n      const searchParams = {\n        ...searchQuery,\n        // 将搜索条件合并到请求参数\n        pageNum: this.params.pageNum,\n        pageSize: this.params.pageSize\n      };\n      request.get('/user/page', {\n        params: searchParams\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error('加载数据失败');\n        }\n      }).catch(error => {\n        console.error(\"加载数据失败:\", error);\n        this.$message.error('加载数据失败');\n      }).finally(() => {\n        this.loading = false; // 关闭加载状态\n      });\n    },\n    // 搜索功能触发\n    handleSearch() {\n      this.params.pageNum = 1; // 每次搜索时重置为第一页\n      this.load();\n    },\n    // 分页切换\n    handlePageChange(page) {\n      this.params.pageNum = page; // 更新当前页\n      this.load(); // 加载数据\n    }\n  },\n  created() {\n    this.load(); // 初始加载数据\n  }\n};","map":{"version":3,"names":["request","name","data","searchParams","age","address","phone","params","pageNum","pageSize","tableData","total","loading","methods","load","searchQuery","Object","keys","forEach","key","get","then","res","code","list","$message","error","catch","console","finally","handleSearch","handlePageChange","page","created"],"sources":["src/views/UserManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <!-- 搜索表单 -->\r\n    <div class=\"search-form\">\r\n      <el-input v-model=\"searchParams.name\" placeholder=\"请输入名称\" class=\"search-input\" @input=\"handleSearch\" />\r\n      <el-input v-model=\"searchParams.age\" placeholder=\"请输入年龄\" class=\"search-input\" @input=\"handleSearch\" />\r\n      <el-input v-model=\"searchParams.address\" placeholder=\"请输入住址\" class=\"search-input\" @input=\"handleSearch\" />\r\n      <el-input v-model=\"searchParams.phone\" placeholder=\"请输入电话\" class=\"search-input\" @input=\"handleSearch\" />\r\n      <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n    </div>\r\n\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe>\r\n      <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n      <el-table-column prop=\"age\" label=\"年龄\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"住址\"></el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 空数据提示 -->\r\n    <div v-if=\"tableData.length === 0\" class=\"no-data\">\r\n      <p>没有找到相关数据</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";  // 假设你使用的是 axios\r\n\r\nexport default {\r\n  name: 'UserManage',\r\n  data() {\r\n    return {\r\n      searchParams: {\r\n        name: '',      // 搜索字段：名称\r\n        age: '',       // 搜索字段：年龄\r\n        address: '',   // 搜索字段：住址\r\n        phone: '',     // 搜索字段：电话\r\n      },\r\n      params: {\r\n        pageNum: 1,        // 当前页\r\n        pageSize: 8,       // 每页显示8条数据\r\n      },\r\n      tableData: [],    // 表格数据\r\n      total: 0,         // 总记录数\r\n      loading: false,   // 加载状态\r\n    };\r\n  },\r\n  methods: {\r\n    // 加载数据并考虑分页和搜索条件\r\n    load() {\r\n      this.loading = true;  // 开启加载状态\r\n      const searchQuery = { ...this.searchParams };  // 复制搜索条件\r\n\r\n      // 过滤掉空值的搜索条件\r\n      Object.keys(searchQuery).forEach(key => {\r\n        if (!searchQuery[key]) {\r\n          delete searchQuery[key];\r\n        }\r\n      });\r\n\r\n      const searchParams = {\r\n        ...searchQuery,      // 将搜索条件合并到请求参数\r\n        pageNum: this.params.pageNum,\r\n        pageSize: this.params.pageSize,\r\n      };\r\n\r\n      request.get('/user/page', {\r\n        params: searchParams\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error('加载数据失败');\r\n        }\r\n      }).catch(error => {\r\n        console.error(\"加载数据失败:\", error);\r\n        this.$message.error('加载数据失败');\r\n      }).finally(() => {\r\n        this.loading = false;  // 关闭加载状态\r\n      });\r\n    },\r\n\r\n    // 搜索功能触发\r\n    handleSearch() {\r\n      this.params.pageNum = 1;  // 每次搜索时重置为第一页\r\n      this.load();\r\n    },\r\n\r\n    // 分页切换\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;  // 更新当前页\r\n      this.load();  // 加载数据\r\n    }\r\n  },\r\n  created() {\r\n    this.load();  // 初始加载数据\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  padding: 10px;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n}\r\n\r\n.search-input {\r\n  width: 250px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.el-button {\r\n  margin-left: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.el-table {\r\n  margin: 10px 0;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #888;\r\n}\r\n\r\n.el-button[loading] {\r\n  background-color: #f0f0f0;\r\n}\r\n</style>\r\n"],"mappings":";;AAqCA,OAAAA,OAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;QACAF,IAAA;QAAA;QACAG,GAAA;QAAA;QACAC,OAAA;QAAA;QACAC,KAAA;MACA;MACAC,MAAA;QACAC,OAAA;QAAA;QACAC,QAAA;MACA;MACAC,SAAA;MAAA;MACAC,KAAA;MAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,KAAA;MACA,KAAAF,OAAA;MACA,MAAAG,WAAA;QAAA,QAAAZ;MAAA;;MAEA;MACAa,MAAA,CAAAC,IAAA,CAAAF,WAAA,EAAAG,OAAA,CAAAC,GAAA;QACA,KAAAJ,WAAA,CAAAI,GAAA;UACA,OAAAJ,WAAA,CAAAI,GAAA;QACA;MACA;MAEA,MAAAhB,YAAA;QACA,GAAAY,WAAA;QAAA;QACAP,OAAA,OAAAD,MAAA,CAAAC,OAAA;QACAC,QAAA,OAAAF,MAAA,CAAAE;MACA;MAEAT,OAAA,CAAAoB,GAAA;QACAb,MAAA,EAAAJ;MACA,GAAAkB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAb,SAAA,GAAAY,GAAA,CAAApB,IAAA,CAAAsB,IAAA;UACA,KAAAb,KAAA,GAAAW,GAAA,CAAApB,IAAA,CAAAS,KAAA;QACA;UACA,KAAAc,QAAA,CAAAC,KAAA;QACA;MACA,GAAAC,KAAA,CAAAD,KAAA;QACAE,OAAA,CAAAF,KAAA,YAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA,GAAAG,OAAA;QACA,KAAAjB,OAAA;MACA;IACA;IAEA;IACAkB,aAAA;MACA,KAAAvB,MAAA,CAAAC,OAAA;MACA,KAAAM,IAAA;IACA;IAEA;IACAiB,iBAAAC,IAAA;MACA,KAAAzB,MAAA,CAAAC,OAAA,GAAAwB,IAAA;MACA,KAAAlB,IAAA;IACA;EACA;EACAmB,QAAA;IACA,KAAAnB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}