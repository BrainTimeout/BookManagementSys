{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"AccountManagement\",\n  data() {\n    return {\n      headers: [{\n        text: \"账号\",\n        value: \"account\"\n      }, {\n        text: \"密码\",\n        value: \"password\"\n      }, {\n        text: \"用户类型\",\n        value: \"type\"\n      }],\n      users: []\n    };\n  },\n  methods: {\n    async refreshUsers() {\n      try {\n        const response = await axios.get(\"/api/users\"); // 替换为实际的API路径\n        this.users = response.data;\n      } catch (error) {\n        console.error(\"获取用户数据失败：\", error);\n        // this.$notify({ type: \"error\", message: \"无法加载用户数据\" });\n      }\n    }\n  },\n  mounted() {\n    this.refreshUsers();\n  }\n};","map":{"version":3,"names":["axios","name","data","headers","text","value","users","methods","refreshUsers","response","get","error","console","mounted"],"sources":["src/views/AccountManagement.vue"],"sourcesContent":["<template>\r\n  fdgp;weltgjm;sdrag\r\n  <div class=\"account-management\">\r\n    <v-container>\r\n      <h2>账号管理</h2>\r\n      <v-data-table\r\n          :headers=\"headers\"\r\n          :items=\"users\"\r\n          item-value=\"account\"\r\n          class=\"elevation-1\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat>\r\n            <v-toolbar-title>用户列表</v-toolbar-title>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"primary\" @click=\"refreshUsers\">刷新列表</v-btn>\r\n          </v-toolbar>\r\n        </template>\r\n        <template v-slot:item.password=\"{ item }\">\r\n          <span>••••••••</span> <!-- 密码显示为掩码 -->\r\n        </template>\r\n      </v-data-table>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"AccountManagement\",\r\n  data() {\r\n    return {\r\n      headers: [\r\n        { text: \"账号\", value: \"account\" },\r\n        { text: \"密码\", value: \"password\" },\r\n        { text: \"用户类型\", value: \"type\" },\r\n      ],\r\n      users: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async refreshUsers() {\r\n      try {\r\n        const response = await axios.get(\"/api/users\"); // 替换为实际的API路径\r\n        this.users = response.data;\r\n      } catch (error) {\r\n        console.error(\"获取用户数据失败：\", error);\r\n        // this.$notify({ type: \"error\", message: \"无法加载用户数据\" });\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.refreshUsers();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.account-management {\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA2BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,aAAA;MACA;QACA,MAAAC,QAAA,SAAAT,KAAA,CAAAU,GAAA;QACA,KAAAJ,KAAA,GAAAG,QAAA,CAAAP,IAAA;MACA,SAAAS,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;QACA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAAL,YAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}