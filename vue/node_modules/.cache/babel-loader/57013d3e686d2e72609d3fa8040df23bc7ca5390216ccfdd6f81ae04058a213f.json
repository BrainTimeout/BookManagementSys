{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"BorrowBook\",\n  data() {\n    return {\n      borrowForm: {\n        name: \"\",\n        bookNo: \"\",\n        account: \"\",\n        password: \"\",\n        phone: \"\",\n        username: \"\",\n        score: null\n      }\n    };\n  },\n  methods: {\n    // 根据书籍编号获取书籍信息\n    async fetchBookDetails() {\n      if (!this.borrowForm.bookNo) return;\n      try {\n        const res = await request.get(`/Book/GetByBookNo/${this.borrowForm.bookNo}`);\n        if (res.code === \"200\") {\n          this.borrowForm.name = res.data.name || \"\";\n          this.borrowForm.score = res.data.score || null;\n        } else {\n          this.borrowForm.name = \"\";\n          this.borrowForm.score = \"\";\n          this.$message.error(\"未找到该书籍\");\n        }\n      } catch (error) {\n        this.borrowForm.name = \"\";\n        this.borrowForm.score = \"\";\n        this.$message.error(\"未找到该书籍\");\n      }\n    },\n    // 根据用户账号获取用户信息\n    async fetchUserDetails() {\n      if (!this.borrowForm.account) return;\n      try {\n        const res = await request.post(`Auth/GetAuthInfo`, {\n          account: this.borrowForm.account,\n          password: this.borrowForm.password\n        });\n        if (res.code === \"200\") {\n          this.borrowForm.username = res.data.userProfile.username || \"\";\n          this.borrowForm.balance = res.data.balance || \"\";\n          this.borrowForm.phone = res.data.userProfile.phone || \"\";\n        } else {\n          this.$message.error(\"未找到该用户\");\n        }\n      } catch (error) {\n        this.$message.error(\"获取用户信息失败\");\n      }\n    },\n    // 提交借阅书籍请求\n    async handleSubmit() {\n      try {\n        // 验证表单\n        const isValid = await this.$refs.borrowForm.validate();\n        if (!isValid) return;\n\n        // 构建借阅请求数据\n        const borrowRequest = {\n          bookNo: this.borrowForm.bookNo,\n          account: this.borrowForm.account\n        };\n\n        // 发送借阅请求\n        const res = await request.post(\"/Borrow/Insert\", borrowRequest);\n        if (res.code === \"200\") {\n          this.$message.success(res.msg);\n          this.$refs.borrowForm.resetFields();\n        } else {\n          this.$message.error(res.msg);\n        }\n      } catch (error) {\n        this.$message.error(\"借阅失败\");\n      }\n    },\n    // 重置表单\n    handleReset() {\n      this.$refs.borrowForm.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","borrowForm","bookNo","account","password","phone","username","score","methods","fetchBookDetails","res","get","code","$message","error","fetchUserDetails","post","userProfile","balance","handleSubmit","isValid","$refs","validate","borrowRequest","success","msg","resetFields","handleReset"],"sources":["src/views/borrow/BorrowBook.vue"],"sourcesContent":["<template>\r\n  <div class=\"borrow-book-container\">\r\n    <el-form :model=\"borrowForm\" ref=\"borrowForm\" label-width=\"120px\" class=\"borrow-form\">\r\n      <!-- 书籍编号 -->\r\n      <el-form-item label=\"书籍编号\" prop=\"bookNo\" :rules=\"[{ required: true, message: '请输入书籍编号', trigger: 'blur' }]\">\r\n        <el-input v-model=\"borrowForm.bookNo\" @blur=\"fetchBookDetails\" placeholder=\"请输入书籍编号\" />\r\n      </el-form-item>\r\n\r\n      <!-- 书籍名称 -->\r\n      <el-form-item label=\"书籍名称\" prop=\"name\">\r\n        <el-input v-model=\"borrowForm.name\" :disabled=\"true\" placeholder=\"自动填充\" />\r\n      </el-form-item>\r\n\r\n      <!-- 图书积分 -->\r\n      <el-form-item label=\"图书积分\" prop=\"score\">\r\n        <el-input v-model=\"borrowForm.score\" :disabled=\"true\" type=\"number\" placeholder=\"自动填充\" />\r\n      </el-form-item>\r\n\r\n      <!-- 用户账号 -->\r\n      <el-form-item label=\"用户账号\" prop=\"account\" :rules=\"[{ required: true, message: '请输入用户账号', trigger: 'blur' }]\">\r\n        <el-input v-model=\"borrowForm.account\" placeholder=\"请输入用户账号\" />\r\n      </el-form-item>\r\n\r\n      <!-- 用户密码 -->\r\n      <el-form-item label=\"用户密码\" prop=\"password\" :rules=\"[{ required: true, message: '请输入用户密码', trigger: 'blur' }]\">\r\n        <el-input v-model=\"borrowForm.password\" @blur=\"fetchUserDetails\" placeholder=\"请输入用户密码\" />\r\n      </el-form-item>\r\n\r\n      <!-- 用户电话 -->\r\n      <el-form-item label=\"用户电话\" prop=\"phone\">\r\n        <el-input v-model=\"borrowForm.phone\" :disabled=\"true\" placeholder=\"自动填充\" />\r\n      </el-form-item>\r\n\r\n      <!-- 用户名 -->\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input v-model=\"borrowForm.username\" :disabled=\"true\" placeholder=\"自动填充\" />\r\n      </el-form-item>\r\n\r\n      <!-- 提交与重置按钮 -->\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">借阅</el-button>\r\n        <el-button @click=\"handleReset\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"BorrowBook\",\r\n  data() {\r\n    return {\r\n      borrowForm: {\r\n        name: \"\",\r\n        bookNo: \"\",\r\n        account: \"\",\r\n        password:\"\",\r\n        phone: \"\",\r\n        username: \"\",\r\n        score: null\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    // 根据书籍编号获取书籍信息\r\n    async fetchBookDetails() {\r\n      if (!this.borrowForm.bookNo) return;\r\n      try {\r\n        const res = await request.get(`/Book/GetByBookNo/${this.borrowForm.bookNo}`);\r\n        if (res.code === \"200\") {\r\n          this.borrowForm.name = res.data.name || \"\";\r\n          this.borrowForm.score = res.data.score || null;\r\n        } else {\r\n          this.borrowForm.name = \"\";\r\n          this.borrowForm.score = \"\";\r\n          this.$message.error(\"未找到该书籍\");\r\n        }\r\n      } catch (error) {\r\n        this.borrowForm.name = \"\";\r\n        this.borrowForm.score = \"\";\r\n        this.$message.error(\"未找到该书籍\");\r\n      }\r\n    },\r\n\r\n    // 根据用户账号获取用户信息\r\n    async fetchUserDetails() {\r\n      if (!this.borrowForm.account) return;\r\n\r\n      try {\r\n        const res = await request.post(`Auth/GetAuthInfo`,{ account:this.borrowForm.account,password:this.borrowForm.password });\r\n        if (res.code === \"200\") {\r\n          this.borrowForm.username = res.data.userProfile.username || \"\";\r\n          this.borrowForm.balance = res.data.balance || \"\";\r\n          this.borrowForm.phone = res.data.userProfile.phone || \"\";\r\n        } else {\r\n          this.$message.error(\"未找到该用户\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"获取用户信息失败\");\r\n      }\r\n    },\r\n\r\n    // 提交借阅书籍请求\r\n    async handleSubmit() {\r\n      try {\r\n        // 验证表单\r\n        const isValid = await this.$refs.borrowForm.validate();\r\n        if (!isValid) return;\r\n\r\n        // 构建借阅请求数据\r\n        const borrowRequest = {\r\n          bookNo: this.borrowForm.bookNo,\r\n          account: this.borrowForm.account\r\n        };\r\n\r\n        // 发送借阅请求\r\n        const res = await request.post(\"/Borrow/Insert\", borrowRequest);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(res.msg);\r\n          this.$refs.borrowForm.resetFields();\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"借阅失败\");\r\n      }\r\n    },\r\n\r\n    // 重置表单\r\n    handleReset() {\r\n      this.$refs.borrowForm.resetFields();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.borrow-book-container {\r\n  width: 500px;  /* 容器宽度设置 */\r\n  margin: 0 auto; /* 居中显示 */\r\n  padding: 20px; /* 内边距 */\r\n}\r\n\r\n.borrow-form {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAgDA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;QACAF,IAAA;QACAG,MAAA;QACAC,OAAA;QACAC,QAAA;QACAC,KAAA;QACAC,QAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,iBAAA;MACA,UAAAR,UAAA,CAAAC,MAAA;MACA;QACA,MAAAQ,GAAA,SAAAZ,OAAA,CAAAa,GAAA,2BAAAV,UAAA,CAAAC,MAAA;QACA,IAAAQ,GAAA,CAAAE,IAAA;UACA,KAAAX,UAAA,CAAAF,IAAA,GAAAW,GAAA,CAAAV,IAAA,CAAAD,IAAA;UACA,KAAAE,UAAA,CAAAM,KAAA,GAAAG,GAAA,CAAAV,IAAA,CAAAO,KAAA;QACA;UACA,KAAAN,UAAA,CAAAF,IAAA;UACA,KAAAE,UAAA,CAAAM,KAAA;UACA,KAAAM,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAb,UAAA,CAAAF,IAAA;QACA,KAAAE,UAAA,CAAAM,KAAA;QACA,KAAAM,QAAA,CAAAC,KAAA;MACA;IACA;IAEA;IACA,MAAAC,iBAAA;MACA,UAAAd,UAAA,CAAAE,OAAA;MAEA;QACA,MAAAO,GAAA,SAAAZ,OAAA,CAAAkB,IAAA;UAAAb,OAAA,OAAAF,UAAA,CAAAE,OAAA;UAAAC,QAAA,OAAAH,UAAA,CAAAG;QAAA;QACA,IAAAM,GAAA,CAAAE,IAAA;UACA,KAAAX,UAAA,CAAAK,QAAA,GAAAI,GAAA,CAAAV,IAAA,CAAAiB,WAAA,CAAAX,QAAA;UACA,KAAAL,UAAA,CAAAiB,OAAA,GAAAR,GAAA,CAAAV,IAAA,CAAAkB,OAAA;UACA,KAAAjB,UAAA,CAAAI,KAAA,GAAAK,GAAA,CAAAV,IAAA,CAAAiB,WAAA,CAAAZ,KAAA;QACA;UACA,KAAAQ,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IAEA;IACA,MAAAK,aAAA;MACA;QACA;QACA,MAAAC,OAAA,cAAAC,KAAA,CAAApB,UAAA,CAAAqB,QAAA;QACA,KAAAF,OAAA;;QAEA;QACA,MAAAG,aAAA;UACArB,MAAA,OAAAD,UAAA,CAAAC,MAAA;UACAC,OAAA,OAAAF,UAAA,CAAAE;QACA;;QAEA;QACA,MAAAO,GAAA,SAAAZ,OAAA,CAAAkB,IAAA,mBAAAO,aAAA;QACA,IAAAb,GAAA,CAAAE,IAAA;UACA,KAAAC,QAAA,CAAAW,OAAA,CAAAd,GAAA,CAAAe,GAAA;UACA,KAAAJ,KAAA,CAAApB,UAAA,CAAAyB,WAAA;QACA;UACA,KAAAb,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAe,GAAA;QACA;MACA,SAAAX,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IAEA;IACAa,YAAA;MACA,KAAAN,KAAA,CAAApB,UAAA,CAAAyB,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}