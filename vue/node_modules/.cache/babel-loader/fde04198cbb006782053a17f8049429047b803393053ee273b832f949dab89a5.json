{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"BookList\",\n  data() {\n    return {\n      tableData: [],\n      // 存储书籍数据\n      total: 0,\n      // 数据总数\n      params: {\n        pageNum: 1,\n        pageSize: 6\n      },\n      filters: {\n        name: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\"\n      },\n      autoSearch: false,\n      // 控制是否开启自动搜索\n      addDialogVisible: false,\n      // 控制添加书籍对话框显示与否\n      newBook: {\n        name: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        score: \"\",\n        nums: \"\",\n        cover: \"\"\n      }\n    };\n  },\n  methods: {\n    async load() {\n      try {\n        const res = await request.get(\"/Book/Page\", {\n          params: {\n            ...this.params,\n            ...this.filters\n          }\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    handleInput() {\n      if (this.autoSearch) {\n        this.params.pageNum = 1;\n        this.load();\n      }\n    },\n    handleSearch() {\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handleReset() {\n      this.filters = {\n        name: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    },\n    handleEdit(book) {\n      // 编辑逻辑\n      console.log(\"编辑书籍:\", book);\n    },\n    async handleDelete(book) {\n      try {\n        const res = await request.delete(`/Book/Delete/${book.id}`);\n        if (res.code === \"200\") {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"删除失败\");\n      }\n    },\n    async handleAddBook() {\n      try {\n        const res = await request.post(\"/Book/Insert\", this.newBook);\n        if (res.code === \"200\") {\n          this.$message.success(\"添加成功\");\n          this.addDialogVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"添加失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"添加失败\");\n      }\n    }\n  },\n  created() {\n    this.load();\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","author","publisher","category","autoSearch","addDialogVisible","newBook","score","nums","cover","methods","load","res","get","code","list","$message","error","handleInput","handleSearch","handleReset","handlePageChange","page","handleEdit","book","console","log","handleDelete","delete","id","success","handleAddBook","post","created"],"sources":["src/views/book/List.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.name\"\r\n          placeholder=\"书名\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.author\"\r\n          placeholder=\"作者\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.publisher\"\r\n          placeholder=\"出版社\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.category\"\r\n          placeholder=\"分类\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-switch v-model=\"autoSearch\" @change=\"handleSearch\" />\r\n      <span class=\"auto-search-text\">自动搜索</span>\r\n      <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n      <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n    </el-row>\r\n\r\n    <!-- 添加书籍 -->\r\n    <div class=\"add-book\">\r\n      <span class=\"add-book-text\" @click=\"openAddDialog\">+ 添加书籍</span>\r\n    </div>\r\n\r\n    <!-- 书籍列表分块显示 -->\r\n    <div class=\"book-cards\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\" v-for=\"book in tableData\" :key=\"book.id\">\r\n          <el-card shadow=\"hover\">\r\n            <div class=\"book-cover\">\r\n              <img :src=\"book.cover || 'default-cover.jpg'\" alt=\"封面\" />\r\n            </div>\r\n            <div class=\"book-info\">\r\n              <h3>{{ book.name }}</h3>\r\n              <p><strong>作者：</strong>{{ book.author }}</p>\r\n              <p><strong>出版社：</strong>{{ book.publisher }}</p>\r\n              <p><strong>分类：</strong>{{ book.category }}</p>\r\n              <p><strong>积分：</strong>{{ book.score }}</p>\r\n              <p><strong>数量：</strong>{{ book.nums }}</p>\r\n            </div>\r\n            <div class=\"book-actions\">\r\n              <el-button size=\"mini\" type=\"primary\" @click=\"handleEdit(book)\">编辑</el-button>\r\n              <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(book)\">删除</el-button>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 添加书籍对话框 -->\r\n    <el-dialog title=\"添加新书籍\" :visible.sync=\"addDialogVisible\" width=\"50%\">\r\n      <el-form :model=\"newBook\" label-width=\"100px\">\r\n        <el-form-item label=\"书名\">\r\n          <el-input v-model=\"newBook.name\" placeholder=\"请输入书名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"作者\">\r\n          <el-input v-model=\"newBook.author\" placeholder=\"请输入作者\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版社\">\r\n          <el-input v-model=\"newBook.publisher\" placeholder=\"请输入出版社\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-input v-model=\"newBook.category\" placeholder=\"请输入分类\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"积分\">\r\n          <el-input v-model=\"newBook.score\" placeholder=\"请输入积分\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"数量\">\r\n          <el-input v-model=\"newBook.nums\" placeholder=\"请输入数量\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-input v-model=\"newBook.cover\" placeholder=\"请输入封面链接\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleAddBook\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"BookList\",\r\n  data() {\r\n    return {\r\n      tableData: [], // 存储书籍数据\r\n      total: 0, // 数据总数\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 6,\r\n      },\r\n      filters: {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n      },\r\n      autoSearch: false, // 控制是否开启自动搜索\r\n      addDialogVisible: false, // 控制添加书籍对话框显示与否\r\n      newBook: {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        score: \"\",\r\n        nums: \"\",\r\n        cover: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async load() {\r\n      try {\r\n        const res = await request.get(\"/Book/Page\", {\r\n          params: { ...this.params, ...this.filters },\r\n        });\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.params.pageNum = 1;\r\n        this.load();\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handleReset() {\r\n      this.filters = {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n    handleEdit(book) {\r\n      // 编辑逻辑\r\n      console.log(\"编辑书籍:\", book);\r\n    },\r\n    async handleDelete(book) {\r\n      try {\r\n        const res = await request.delete(`/Book/Delete/${book.id}`);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"删除成功\");\r\n          this.load();\r\n        } else {\r\n          this.$message.error(\"删除失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"删除失败\");\r\n      }\r\n    },\r\n    async handleAddBook() {\r\n      try {\r\n        const res = await request.post(\"/Book/Insert\", this.newBook);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"添加成功\");\r\n          this.addDialogVisible = false;\r\n          this.load();\r\n        } else {\r\n          this.$message.error(\"添加失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"添加失败\");\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.load();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.book-cards {\r\n  padding: 20px;\r\n}\r\n\r\n.book-cover img {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.book-info {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.book-info h3 {\r\n  margin: 0 0 10px;\r\n  font-size: 18px;\r\n  color: #333;\r\n}\r\n\r\n.book-info p {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.book-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.filter-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-book {\r\n  text-align: right;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-book-text {\r\n  cursor: pointer;\r\n  color: #409eff;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA4GA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,KAAA;MAAA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,OAAA;QACAP,IAAA;QACAQ,MAAA;QACAC,SAAA;QACAC,QAAA;MACA;MACAC,UAAA;MAAA;MACAC,gBAAA;MAAA;MACAC,OAAA;QACAb,IAAA;QACAQ,MAAA;QACAC,SAAA;QACAC,QAAA;QACAI,KAAA;QACAC,IAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,KAAA;MACA;QACA,MAAAC,GAAA,SAAApB,OAAA,CAAAqB,GAAA;UACAhB,MAAA;YAAA,QAAAA,MAAA;YAAA,QAAAG;UAAA;QACA;QACA,IAAAY,GAAA,CAAAE,IAAA;UACA,KAAAnB,SAAA,GAAAiB,GAAA,CAAAlB,IAAA,CAAAqB,IAAA;UACA,KAAAnB,KAAA,GAAAgB,GAAA,CAAAlB,IAAA,CAAAE,KAAA;QACA;UACA,KAAAoB,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAC,YAAA;MACA,SAAAd,UAAA;QACA,KAAAP,MAAA,CAAAC,OAAA;QACA,KAAAa,IAAA;MACA;IACA;IACAQ,aAAA;MACA,KAAAtB,MAAA,CAAAC,OAAA;MACA,KAAAa,IAAA;IACA;IACAS,YAAA;MACA,KAAApB,OAAA;QACAP,IAAA;QACAQ,MAAA;QACAC,SAAA;QACAC,QAAA;MACA;MACA,KAAAN,MAAA,CAAAC,OAAA;MACA,KAAAa,IAAA;IACA;IACAU,iBAAAC,IAAA;MACA,KAAAzB,MAAA,CAAAC,OAAA,GAAAwB,IAAA;MACA,KAAAX,IAAA;IACA;IACAY,WAAAC,IAAA;MACA;MACAC,OAAA,CAAAC,GAAA,UAAAF,IAAA;IACA;IACA,MAAAG,aAAAH,IAAA;MACA;QACA,MAAAZ,GAAA,SAAApB,OAAA,CAAAoC,MAAA,iBAAAJ,IAAA,CAAAK,EAAA;QACA,IAAAjB,GAAA,CAAAE,IAAA;UACA,KAAAE,QAAA,CAAAc,OAAA;UACA,KAAAnB,IAAA;QACA;UACA,KAAAK,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACA,MAAAc,cAAA;MACA;QACA,MAAAnB,GAAA,SAAApB,OAAA,CAAAwC,IAAA,sBAAA1B,OAAA;QACA,IAAAM,GAAA,CAAAE,IAAA;UACA,KAAAE,QAAA,CAAAc,OAAA;UACA,KAAAzB,gBAAA;UACA,KAAAM,IAAA;QACA;UACA,KAAAK,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;EACA;EACAgB,QAAA;IACA,KAAAtB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}