{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"UserManage\",\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      params: {\n        pageNum: 1,\n        pageSize: 12\n      },\n      filters: {\n        account: \"\",\n        type: \"\"\n      },\n      autoSearch: false,\n      editDialogVisible: false,\n      editForm: {\n        account: \"\",\n        password: \"\",\n        type: \"\",\n        banuntil: \"\"\n      }\n    };\n  },\n  watch: {\n    \"params.pageNum\"(newPage) {\n      this.load();\n    },\n    \"params.pageSize\"(newSize) {\n      this.load();\n    }\n  },\n  methods: {\n    async load() {\n      try {\n        const searchParams = {\n          ...this.params,\n          ...this.filters\n        };\n        const res = await request.get(\"/login/Page\", {\n          params: searchParams\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    async update() {\n      try {\n        const res = await request.post(\"/api/users\", this.editForm);\n        if (res.code === \"200\") {\n          this.$message.success(\"用户信息已更新！\");\n          await this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      } catch (error) {\n        this.$message.error(\"用户信息更新失败\");\n      }\n    },\n    handleSearch() {\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handleReset() {\n      this.filters = {\n        account: \"\",\n        type: \"\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handleInput() {\n      if (this.autoSearch) {\n        this.params.pageNum = 1;\n        this.load();\n      }\n    },\n    handlePageChange(page) {\n      this.params.pageNum = page;\n    },\n    handleRowClick(row) {\n      this.editForm = {\n        ...row\n      };\n      this.editDialogVisible = true;\n    },\n    saveEdit() {\n      this.update();\n      this.editDialogVisible = false;\n      this.load();\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = (d.getMonth() + 1).toString().padStart(2, '0');\n      const day = d.getDate().toString().padStart(2, '0');\n      const hours = d.getHours().toString().padStart(2, '0');\n      const minutes = d.getMinutes().toString().padStart(2, '0');\n      const seconds = d.getSeconds().toString().padStart(2, '0');\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n    },\n    setImmediateUnban() {\n      this.editForm.banuntil = new Date().toISOString(); // 设置为当前时间\n    },\n    setBanFor10Days() {\n      const now = new Date();\n      now.setDate(now.getDate() + 10); // 设置为10天后的日期\n      this.editForm.banuntil = now.toISOString();\n    }\n  },\n  created() {\n    this.load();\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","account","type","autoSearch","editDialogVisible","editForm","password","banuntil","watch","params.pageNum","newPage","load","params.pageSize","newSize","methods","searchParams","res","get","code","list","$message","error","update","post","success","msg","handleSearch","handleReset","handleInput","handlePageChange","page","handleRowClick","row","saveEdit","formatDate","date","d","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","setImmediateUnban","toISOString","setBanFor10Days","now","setDate","created"],"sources":["src/views/AccountManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <!-- 筛选条件 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.account\"\r\n          placeholder=\"账户\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.type\"\r\n          placeholder=\"用户类型\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n    </el-row>\r\n\r\n    <!-- 按钮组 -->\r\n    <el-row class=\"button-row\">\r\n      <el-switch v-model=\"autoSearch\" @change=\"handleSearch\" />\r\n      <span class=\"auto-search-text\">自动搜索</span>\r\n      <div class=\"search-buttons\">\r\n        <el-button type=\"primary\" @click=\"handleSearch\" class=\"btn-spacing\">搜索</el-button>\r\n        <el-button type=\"warning\" @click=\"handleReset\" class=\"btn-spacing\">重置</el-button>\r\n      </div>\r\n    </el-row>\r\n\r\n    <!-- 表格 -->\r\n    <el-table :data=\"tableData\" stripe @row-click=\"handleRowClick\">\r\n      <el-table-column prop=\"account\" label=\"账户\" />\r\n      <el-table-column prop=\"password\" label=\"密码\" />\r\n      <el-table-column prop=\"usertype\" label=\"用户类型\" />\r\n      <el-table-column label=\"封禁状态\">\r\n        <template slot-scope=\"scope\">\r\n          <span v-if=\"new Date(scope.row.banuntil) > new Date()\">\r\n            已封禁，{{ formatDate(scope.row.banuntil) }}解禁\r\n          </span>\r\n          <span v-else>\r\n            未封禁\r\n          </span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n\r\n    <!-- 编辑用户信息对话框 -->\r\n    <el-dialog title=\"编辑用户信息\" :visible.sync=\"editDialogVisible\" width=\"50%\" class=\"edit-dialog\">\r\n      <el-form :model=\"editForm\" label-width=\"100px\">\r\n        <el-form-item label=\"账户\">\r\n          <el-input v-model=\"editForm.account\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"editForm.password\" type=\"password\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"用户类型\">\r\n          <el-select v-model=\"editForm.type\">\r\n            <el-option label=\"管理员\" value=\"管理员\" />\r\n            <el-option label=\"普通用户\" value=\"普通用户\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"封禁截止时间\">\r\n          <el-date-picker\r\n              v-model=\"editForm.banuntil\"\r\n              type=\"datetime\"\r\n              placeholder=\"请选择封禁截止时间\"\r\n              format=\"yyyy-MM-dd HH:mm:ss\"\r\n              style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <!-- 快捷选项按钮，放在封禁截止时间下方 -->\r\n        <div class=\"quick-actions\">\r\n          <el-button @click=\"setImmediateUnban\" type=\"success\" size=\"mini\" plain>立刻解禁</el-button>\r\n          <el-button @click=\"setBanFor10Days\" type=\"danger\" size=\"mini\" plain>封禁10天</el-button>\r\n        </div>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveEdit\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"UserManage\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      total: 0,\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 12,\r\n      },\r\n      filters: {\r\n        account: \"\",\r\n        type: \"\",\r\n      },\r\n      autoSearch: false,\r\n      editDialogVisible: false,\r\n      editForm: {\r\n        account: \"\",\r\n        password: \"\",\r\n        type: \"\",\r\n        banuntil: \"\",\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    \"params.pageNum\"(newPage) {\r\n      this.load();\r\n    },\r\n    \"params.pageSize\"(newSize) {\r\n      this.load();\r\n    },\r\n  },\r\n  methods: {\r\n    async load() {\r\n      try {\r\n        const searchParams = { ...this.params, ...this.filters };\r\n        const res = await request.get(\"/login/Page\", { params: searchParams });\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n    async update() {\r\n      try {\r\n        const res = await request.post(\"/api/users\", this.editForm);\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"用户信息已更新！\");\r\n          await this.load();\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"用户信息更新失败\");\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handleReset() {\r\n      this.filters = {\r\n        account: \"\",\r\n        type: \"\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.params.pageNum = 1;\r\n        this.load();\r\n      }\r\n    },\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n    },\r\n    handleRowClick(row) {\r\n      this.editForm = { ...row };\r\n      this.editDialogVisible = true;\r\n    },\r\n    saveEdit() {\r\n      this.update();\r\n      this.editDialogVisible = false;\r\n      this.load();\r\n    },\r\n    formatDate(date) {\r\n      const d = new Date(date);\r\n      const year = d.getFullYear();\r\n      const month = (d.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = d.getDate().toString().padStart(2, '0');\r\n      const hours = d.getHours().toString().padStart(2, '0');\r\n      const minutes = d.getMinutes().toString().padStart(2, '0');\r\n      const seconds = d.getSeconds().toString().padStart(2, '0');\r\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n    },\r\n    setImmediateUnban() {\r\n      this.editForm.banuntil = new Date().toISOString(); // 设置为当前时间\r\n    },\r\n    setBanFor10Days() {\r\n      const now = new Date();\r\n      now.setDate(now.getDate() + 10); // 设置为10天后的日期\r\n      this.editForm.banuntil = now.toISOString();\r\n    },\r\n  },\r\n  created() {\r\n    this.load();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  padding: 10px;\r\n}\r\n\r\n.filter-row {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-input {\r\n  width: 150px;\r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.auto-search-text {\r\n  font-size: 14px;\r\n  color: #333;\r\n  margin-right: 10px;\r\n}\r\n\r\n.search-buttons {\r\n  display: flex;\r\n  gap: 3px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #888;\r\n}\r\n\r\n.el-dropdown-link {\r\n  cursor: pointer;\r\n  color: #409EFF;\r\n  font-weight: bold;\r\n}\r\n\r\n.edit-dialog .el-form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.edit-dialog .el-input,\r\n.edit-dialog .el-select {\r\n  border-radius: 5px;\r\n}\r\n\r\n.edit-dialog .el-dialog {\r\n  box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n\r\n.el-button--primary {\r\n  background-color: #409eff;\r\n  border-color: #409eff;\r\n}\r\n\r\n.el-button--warning {\r\n  background-color: #f56c6c;\r\n  border-color: #f56c6c;\r\n}\r\n\r\n/* 快捷选项按钮的样式 */\r\n.quick-actions {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.el-button--mini {\r\n  padding: 5px 10px;\r\n  font-size: 12px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}