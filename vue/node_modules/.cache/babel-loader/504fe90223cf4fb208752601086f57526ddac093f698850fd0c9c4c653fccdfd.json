{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"bookList\",\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      params: {\n        pageNum: 1,\n        pageSize: 6\n      },\n      filters: {\n        name: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        detail: \"\",\n        sortOrder: \"ascending\"\n      },\n      autoSearch: false\n    };\n  },\n  methods: {\n    async load() {\n      try {\n        const res = await request.get(\"/Book/Page\", {\n          params: {\n            ...this.params,\n            ...this.filters\n          }\n        });\n        if (res.code === \"200\") {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        } else {\n          this.$message.error(\"加载数据失败\");\n        }\n      } catch (error) {\n        this.$message.error(\"加载数据失败\");\n      }\n    },\n    handleInput() {\n      if (this.autoSearch) {\n        this.params.pageNum = 1;\n        this.load();\n      }\n    },\n    handleSearch() {\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handleReset() {\n      this.filters = {\n        name: \"\",\n        author: \"\",\n        publisher: \"\",\n        category: \"\",\n        detail: \"\"\n      };\n      this.params.pageNum = 1;\n      this.load();\n    },\n    handleSortChange({\n      prop,\n      order\n    }) {\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\n      this.load();\n    },\n    handlePageChange(page) {\n      this.params.pageNum = page;\n      this.load();\n    }\n  },\n  created() {\n    this.load();\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","filters","author","publisher","category","detail","sortOrder","autoSearch","methods","load","res","get","code","list","$message","error","handleInput","handleSearch","handleReset","handleSortChange","prop","order","handlePageChange","page","created"],"sources":["src/views/book/Show.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-container\">\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"filter-row\" type=\"flex\" align=\"middle\">\r\n      <el-input\r\n          v-model=\"filters.name\"\r\n          placeholder=\"书名\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.author\"\r\n          placeholder=\"作者\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.publisher\"\r\n          placeholder=\"出版社\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.category\"\r\n          placeholder=\"分类\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-input\r\n          v-model=\"filters.detail\"\r\n          placeholder=\"其它信息\"\r\n          class=\"filter-input\"\r\n          @input=\"handleInput\"\r\n      />\r\n      <el-switch v-model=\"autoSearch\" @change=\"handleSearch\" />\r\n      <span class=\"auto-search-text\">自动搜索</span>\r\n      <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n      <el-button type=\"warning\" @click=\"handleReset\">重置</el-button>\r\n    </el-row>\r\n\r\n    <!-- 书籍列表表格 -->\r\n    <el-table\r\n        :data=\"tableData\"\r\n        stripe\r\n        :default-sort=\"{ prop: 'id', order: 'ascending' }\"\r\n        @sort-change=\"handleSortChange\"\r\n        row-key=\"id\"\r\n    >\r\n      <el-table-column type=\"expand\">\r\n        <template slot-scope=\"props\">\r\n          <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n            <el-form-item label=\"描述\">\r\n              <span>{{ props.row.description || '暂无描述' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"出版日期\">\r\n              <span>{{ props.row.publishDate || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"标准码\">\r\n              <span>{{ props.row.bookNo || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"创建时间\">\r\n              <span>{{ props.row.createtime || '暂无信息' }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"更新时间\">\r\n              <span>{{ props.row.updatetime || '暂无信息' }}</span>\r\n            </el-form-item>\r\n          </el-form>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 基本书籍信息列 -->\r\n      <el-table-column prop=\"id\" label=\"书籍ID\" sortable />\r\n      <el-table-column prop=\"name\" label=\"书名\" />\r\n      <el-table-column prop=\"author\" label=\"作者\" />\r\n      <el-table-column prop=\"publisher\" label=\"出版社\" />\r\n      <el-table-column prop=\"category\" label=\"分类\" />\r\n      <el-table-column prop=\"score\" label=\"积分\" />\r\n      <el-table-column prop=\"nums\" label=\"当前数量\" />\r\n      <el-table-column label=\"封面\">\r\n        <template slot-scope=\"scope\">\r\n          <img :src=\"scope.row.cover\" v-if=\"scope.row.cover\" alt=\"封面\" style=\"width: 100px; height: 150px; object-fit: cover;\" />\r\n          <span v-else>无封面</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        layout=\"total, prev, pager, next, jumper\"\r\n        class=\"pagination\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"bookList\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      total: 0,\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 6,\r\n      },\r\n      filters: {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        detail: \"\",\r\n        sortOrder: \"ascending\",\r\n      },\r\n      autoSearch: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async load() {\r\n      try {\r\n        const res = await request.get(\"/Book/Page\", {\r\n          params: { ...this.params, ...this.filters },\r\n        });\r\n        if (res.code === \"200\") {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message.error(\"加载数据失败\");\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(\"加载数据失败\");\r\n      }\r\n    },\r\n    handleInput() {\r\n      if (this.autoSearch) {\r\n        this.params.pageNum = 1;\r\n        this.load();\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handleReset() {\r\n      this.filters = {\r\n        name: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        category: \"\",\r\n        detail: \"\",\r\n      };\r\n      this.params.pageNum = 1;\r\n      this.load();\r\n    },\r\n    handleSortChange({ prop, order }) {\r\n      this.filters.sortOrder = order === \"ascending\" ? \"ascending\" : \"descending\";\r\n      this.load();\r\n    },\r\n    handlePageChange(page) {\r\n      this.params.pageNum = page;\r\n      this.load();\r\n    },\r\n  },\r\n  created() {\r\n    this.load();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.auto-search-text {\r\n  font-size: 14px;\r\n  color: #333;\r\n  margin-right: 10px;\r\n}\r\n.demo-table-expand {\r\n  font-size: 14px;\r\n}\r\n.demo-table-expand .el-form-item {\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n}\r\n.book-container {\r\n  padding: 20px;\r\n}\r\n.filter-row {\r\n  margin-bottom: 20px;\r\n}\r\n.filter-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAmGA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,OAAA;QACAP,IAAA;QACAQ,MAAA;QACAC,SAAA;QACAC,QAAA;QACAC,MAAA;QACAC,SAAA;MACA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,KAAA;MACA;QACA,MAAAC,GAAA,SAAAjB,OAAA,CAAAkB,GAAA;UACAb,MAAA;YAAA,QAAAA,MAAA;YAAA,QAAAG;UAAA;QACA;QACA,IAAAS,GAAA,CAAAE,IAAA;UACA,KAAAhB,SAAA,GAAAc,GAAA,CAAAf,IAAA,CAAAkB,IAAA;UACA,KAAAhB,KAAA,GAAAa,GAAA,CAAAf,IAAA,CAAAE,KAAA;QACA;UACA,KAAAiB,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAC,YAAA;MACA,SAAAT,UAAA;QACA,KAAAT,MAAA,CAAAC,OAAA;QACA,KAAAU,IAAA;MACA;IACA;IACAQ,aAAA;MACA,KAAAnB,MAAA,CAAAC,OAAA;MACA,KAAAU,IAAA;IACA;IACAS,YAAA;MACA,KAAAjB,OAAA;QACAP,IAAA;QACAQ,MAAA;QACAC,SAAA;QACAC,QAAA;QACAC,MAAA;MACA;MACA,KAAAP,MAAA,CAAAC,OAAA;MACA,KAAAU,IAAA;IACA;IACAU,iBAAA;MAAAC,IAAA;MAAAC;IAAA;MACA,KAAApB,OAAA,CAAAK,SAAA,GAAAe,KAAA;MACA,KAAAZ,IAAA;IACA;IACAa,iBAAAC,IAAA;MACA,KAAAzB,MAAA,CAAAC,OAAA,GAAAwB,IAAA;MACA,KAAAd,IAAA;IACA;EACA;EACAe,QAAA;IACA,KAAAf,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}