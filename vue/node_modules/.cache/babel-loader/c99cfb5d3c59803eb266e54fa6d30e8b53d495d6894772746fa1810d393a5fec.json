{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  name: 'AboutView',\n  data() {\n    return {\n      searchQuery: '',\n      // 搜索框的绑定值\n      searchField: 'name',\n      // 默认搜索字段为名称\n      currentPage: 1,\n      // 当前页码\n      pageSize: 8,\n      // 每页显示的条数\n      tableData: [] // 表格数据\n    };\n  },\n  methods: {\n    load() {\n      // 从后端加载数据\n      fetch(\"http://localhost:8089/user/list\").then(res => res.json()).then(res => {\n        console.log(res);\n        this.tableData = res;\n      });\n    },\n    handleSearch() {\n      // 搜索时触发的操作\n      console.log('搜索方式：', this.searchField);\n      console.log('搜索内容：', this.searchQuery);\n    },\n    handlePageChange(page) {\n      // 页码改变时触发的操作\n      this.currentPage = page;\n    }\n  },\n  mounted() {\n    // 在组件挂载完成后加载数据\n    this.load();\n  },\n  computed: {\n    // 过滤后的数据\n    filteredData() {\n      if (this.searchQuery === '') {\n        return this.tableData;\n      }\n      return this.tableData.filter(item => item[this.searchField] && item[this.searchField].toString().toLowerCase().includes(this.searchQuery.toLowerCase()));\n    },\n    // 分页后的数据\n    pagedData() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = this.currentPage * this.pageSize;\n      return this.filteredData.slice(start, end);\n    }\n  }\n};","map":{"version":3,"names":["name","data","searchQuery","searchField","currentPage","pageSize","tableData","methods","load","fetch","then","res","json","console","log","handleSearch","handlePageChange","page","mounted","computed","filteredData","filter","item","toString","toLowerCase","includes","pagedData","start","end","slice"],"sources":["src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"table-container\">\n    <!-- 搜索表单 -->\n    <div class=\"search-form\">\n      <el-input v-model=\"searchQuery\" placeholder=\"请输入搜索内容\" class=\"search-input\" />\n      <el-select v-model=\"searchField\" placeholder=\"选择搜索方式\" class=\"search-select\">\n        <el-option label=\"名称\" value=\"name\" />\n        <el-option label=\"年龄\" value=\"age\" />\n        <el-option label=\"住址\" value=\"address\" />\n        <el-option label=\"电话\" value=\"phone\" />\n      </el-select>\n      <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\n    </div>\n\n    <!-- 表格 -->\n    <el-table :data=\"pagedData\" stripe>\n      <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\n      <el-table-column prop=\"age\" label=\"年龄\"></el-table-column>\n      <el-table-column prop=\"address\" label=\"住址\"></el-table-column>\n      <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <el-pagination\n        :current-page=\"currentPage\"\n        :page-size=\"pageSize\"\n        :total=\"filteredData.length\"\n        @current-change=\"handlePageChange\"\n        layout=\"total, prev, pager, next, jumper\"\n        class=\"pagination\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AboutView',\n  data() {\n    return {\n      searchQuery: '',  // 搜索框的绑定值\n      searchField: 'name',  // 默认搜索字段为名称\n      currentPage: 1,  // 当前页码\n      pageSize: 8,     // 每页显示的条数\n      tableData: []    // 表格数据\n    }\n  },\n  methods: {\n    load() {\n      // 从后端加载数据\n      fetch(\"http://localhost:8089/user/list\")\n          .then(res => res.json())\n          .then(res => {\n            console.log(res);\n            this.tableData = res;\n          });\n    },\n    handleSearch() {\n      // 搜索时触发的操作\n      console.log('搜索方式：', this.searchField);\n      console.log('搜索内容：', this.searchQuery);\n    },\n    handlePageChange(page) {\n      // 页码改变时触发的操作\n      this.currentPage = page;\n    }\n  },\n  mounted() {\n    // 在组件挂载完成后加载数据\n    this.load();\n  },\n  computed: {\n    // 过滤后的数据\n    filteredData() {\n      if (this.searchQuery === '') {\n        return this.tableData;\n      }\n      return this.tableData.filter(item =>\n          item[this.searchField] && item[this.searchField].toString().toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    },\n    // 分页后的数据\n    pagedData() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = this.currentPage * this.pageSize;\n      return this.filteredData.slice(start, end);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.table-container {\n  padding: 10px;\n}\n\n.search-form {\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.search-input {\n  width: 250px;\n  margin-right: 10px;\n}\n\n.search-select {\n  width: 150px;\n  margin-right: 10px;\n}\n\n.el-table {\n  margin: 10px 0;\n  border-radius: 8px;\n}\n\n.el-table th, .el-table td {\n  padding: 8px;\n}\n\n.pagination {\n  margin-top: 20px;\n  text-align: center;\n}\n</style>\n"],"mappings":";;AAmCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,WAAA;MAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA;MACAC,KAAA,oCACAC,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,GAAA;QACAE,OAAA,CAAAC,GAAA,CAAAH,GAAA;QACA,KAAAL,SAAA,GAAAK,GAAA;MACA;IACA;IACAI,aAAA;MACA;MACAF,OAAA,CAAAC,GAAA,eAAAX,WAAA;MACAU,OAAA,CAAAC,GAAA,eAAAZ,WAAA;IACA;IACAc,iBAAAC,IAAA;MACA;MACA,KAAAb,WAAA,GAAAa,IAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAV,IAAA;EACA;EACAW,QAAA;IACA;IACAC,aAAA;MACA,SAAAlB,WAAA;QACA,YAAAI,SAAA;MACA;MACA,YAAAA,SAAA,CAAAe,MAAA,CAAAC,IAAA,IACAA,IAAA,MAAAnB,WAAA,KAAAmB,IAAA,MAAAnB,WAAA,EAAAoB,QAAA,GAAAC,WAAA,GAAAC,QAAA,MAAAvB,WAAA,CAAAsB,WAAA,GACA;IACA;IACA;IACAE,UAAA;MACA,MAAAC,KAAA,SAAAvB,WAAA,aAAAC,QAAA;MACA,MAAAuB,GAAA,QAAAxB,WAAA,QAAAC,QAAA;MACA,YAAAe,YAAA,CAAAS,KAAA,CAAAF,KAAA,EAAAC,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}